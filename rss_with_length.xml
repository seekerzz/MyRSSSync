<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
<channel>
<item>
<title>mshumer/gpt-prompt-engineer</title>
<link>https://github.com/mshumer/gpt-prompt-engineer</link>
<description>Content Length: 9825

<p></p><hr /><h1>gpt-prompt-engineer</h1> 
<p><a href="https://twitter.com/mattshumer_"><img alt="Twitter Follow" src="https://img.shields.io/twitter/follow/mattshumer_?style=social" /></a> <a href="https://colab.research.google.com/github/mshumer/gpt-prompt-engineer/blob/main/gpt_prompt_engineer.ipynb"><img alt="Open Main Version In Colab" src="https://colab.research.google.com/assets/colab-badge.svg?sanitize=true" /></a> <a href="https://colab.research.google.com/drive/16NLMjqyuUWxcokE_NF6RwHD8grwEeoaJ?usp=sharing"><img alt="Open Classification Version In Colab" src="https://colab.research.google.com/assets/colab-badge.svg?sanitize=true" /></a></p> 
<h2>Overview</h2> 
<p>Prompt engineering is kind of like alchemy. There's no clear way to predict what will work best. It's all about experimenting until you find the right prompt. <code>gpt-prompt-engineer</code> is a tool that takes this experimentation to a whole new level.</p> 
<p><strong>Simply input a description of your task and some test cases, and the system will generate, test, and rank a multitude of prompts to find the ones that perform the best.</strong></p> 
<h2><em>New 3/20/24: The Claude 3 Opus Version</em></h2> 
<p>I've added a new version of gpt-prompt-engineer that takes full advantage of Anthropic's Claude 3 Opus model. This version auto-generates test cases and allows for the user to define multiple input variables, making it even more powerful and flexible. Try it out with the claude-prompt-engineer.ipynb notebook in the repo!</p> 
<h2><em>New 3/20/24: Claude 3 Opus -&gt; Haiku Conversion Version</em></h2> 
<p>This notebook enables you to build lightning-fast, performant AI systems at a fraction of the typical cost. By using Claude 3 Opus to establish the latent space and Claude 3 Haiku for the actual generation, you can achieve amazing results. The process works by leveraging Opus to produce a collection of top-notch examples, which are then used to guide Haiku in generating output of comparable quality while dramatically reducing both latency and cost per generation. Try it out with the opus-to-haiku-conversion.ipynb notebook in the repo!</p> 
<h2>Features</h2> 
<ul> 
 <li> <p><strong>Prompt Generation</strong>: Using GPT-4, GPT-3.5-Turbo, or Claude 3 Opus, <code>gpt-prompt-engineer</code> can generate a variety of possible prompts based on a provided use-case and test cases.</p> </li> 
 <li> <p><strong>Prompt Testing</strong>: The real magic happens after the generation. The system tests each prompt against all the test cases, comparing their performance and ranking them using an ELO rating system.</p> </li> 
</ul> 
<img alt="Screen Shot 2023-07-04 at 11 41 54 AM" src="https://github.com/mshumer/gpt-prompt-engineer/assets/41550495/f8171cff-1703-40ca-b9fd-f0aa24d07110" width="1563" /> 
<ul> 
 <li> <p><strong>ELO Rating System</strong>: Each prompt starts with an ELO rating of 1200. As they compete against each other in generating responses to the test cases, their ELO ratings change based on their performance. This way, you can easily see which prompts are the most effective.</p> </li> 
 <li> <p><strong>Classification Version</strong>: The <code>gpt-prompt-engineer -- Classification Version</code> notebook is designed to handle classification tasks. It evaluates the correctness of a test case by matching it to the expected output ('true' or 'false') and provides a table with scores for each prompt.</p> </li> 
</ul> 
<img alt="Screen Shot 2023-07-10 at 5 22 24 PM" src="https://github.com/mshumer/gpt-prompt-engineer/assets/41550495/d5c9f2a8-97fa-445d-9c38-dec744f77854" width="1607" /> 
<ul> 
 <li> <p><strong>Claude 3 Version</strong>: The claude-prompt-engineer notebook is designed to work with Anthropic's Claude 3 Opus model. It auto-generates test cases and allows for multiple input variables, making it even more powerful and flexible.</p> </li> 
 <li> <p><strong>Claude 3 Opus -&gt; Haiku Conversion Version</strong>: Designed to preserve Opus' quality for your use-case while getting the speed + cost benefits of using Haiku.</p> </li> 
 <li> <p><strong><a href="https://wandb.ai/site/prompts">Weights &amp; Biases</a> Logging</strong>: Optional logging to <a href="https://wandb.ai/site">Weights &amp; Biases</a> of your configs such as temperature and max tokens, the system and user prompts for each part, the test cases used and the final ranked ELO rating for each candidate prompt. Set <code>use_wandb</code> to <code>True</code> to use.</p> </li> 
 <li> <p><strong><a href="https://portkey.ai">Portkey</a></strong>: Optional tool to log and trace all the prompt chains and their responses. Set <code>use_portkey</code> to <code>True</code> to use.</p> </li> 
</ul> 
<h2>Setup</h2> 
<ol> 
 <li> <p><a href="https://colab.research.google.com/github/mshumer/gpt-prompt-engineer/blob/main/gpt_prompt_engineer.ipynb">Open the notebook in Google Colab</a> or in a local Jupyter notebook. For classification, use <a href="https://colab.research.google.com/drive/16NLMjqyuUWxcokE_NF6RwHD8grwEeoaJ?usp=sharing">this one.</a>. For the Claude 3 version, use <a href="https://colab.research.google.com/drive/1likU_S4VfkzoLMPfVdMs3E54cn_W6I7o?usp=sharing">this one.</a></p> </li> 
 <li> <p>Add your OpenAI API key to the line <code>openai.api_key = "ADD YOUR KEY HERE"</code>. If you're using the Claude 3 version, add your Anthropic API key to the line <code>ANTHROPIC_API_KEY = "ADD YOUR KEY HERE"</code>.</p> </li> 
</ol> 
<h2>How to Use</h2> 
<ol> 
 <li>If you are using the GPT-4 version, define your use-case and test cases. The use-case is a description of what you want the AI to do. Test cases are specific prompts that you would like the AI to respond to. For example:</li> 
</ol> 
<pre><code>description = "Given a prompt, generate a landing page headline." # this style of description tends to work well

test_cases = [
    {
        'prompt': 'Promoting an innovative new fitness app, Smartly',
    },
    {
        'prompt': 'Why a vegan diet is beneficial for your health',
    },
    {
        'prompt': 'Introducing a new online course on digital marketing',
    },
    {
        'prompt': 'Launching a new line of eco-friendly clothing',
    },
    {
        'prompt': 'Promoting a new travel blog focusing on budget travel',
    },
    {
        'prompt': 'Advertising a new software for efficient project management',
    },
    {
        'prompt': 'Introducing a new book on mastering Python programming',
    },
    {
        'prompt': 'Promoting a new online platform for learning languages',
    },
    {
        'prompt': 'Advertising a new service for personalized meal plans',
    },
    {
        'prompt': 'Launching a new app for mental health and mindfulness',
    }
]
</code></pre> 
<p>For the classification version, your test cases should be in the format:</p> 
<pre><code>test_cases = [
    {
        'prompt': 'I had a great day!',
        'output': 'true'
    },
    {
        'prompt': 'I am feeling gloomy.',
        'output': 'false'
    },
    // add more test cases here
]
</code></pre> 
<p>For the Claude 3 version, you can define input variables in addition to the use-case description:</p> 
<pre><code>description = "Given a prompt, generate a personalized email response."

input_variables = [
    {"variable": "SENDER_NAME", "description": "The name of the person who sent the email."},
    {"variable": "RECIPIENT_NAME", "description": "The name of the person receiving the email."},
    {"variable": "TOPIC", "description": "The main topic or subject of the email. One to two sentences."}
]
</code></pre> 
<p>The test cases will be auto-generated based on the use-case description and input variables.</p> 
<ol start="3"> 
 <li> <p>Choose how many prompts to generate. Keep in mind, this can get expensive if you generate many prompts. 10 is a good starting point.</p> </li> 
 <li> <p>Call <code>generate_optimal_prompt(description, test_cases, number_of_prompts)</code> to generate a list of potential prompts, and test and rate their performance. For the classification version, just run the last cell. For the Claude 3 version, call <code>generate_optimal_prompt(description, input_variables, num_test_cases, number_of_prompts, use_wandb)</code>.</p> </li> 
 <li> <p>The final ELO ratings will be printed in a table, sorted in descending order. The higher the rating, the better the prompt.</p> </li> 
</ol> 
<img alt="Screen Shot 2023-07-04 at 11 48 45 AM" src="https://github.com/mshumer/gpt-prompt-engineer/assets/41550495/324f90b8-c0ee-45fd-b219-6c44d9aa281b" width="1074" /> 
<p>For the classification version, the scores for each prompt will be printed in a table (see the image above).</p> 
<h2>Contributions are welcome! Some ideas:</h2> 
<ul> 
 <li>have a number of different system prompt generators that create different styles of prompts, to cover more ground (ex. examples, verbose, short, markdown, etc.)</li> 
 <li>automatically generate the test cases</li> 
 <li>expand the classification version to support more than two classes using tiktoken</li> 
</ul> 
<h2>License</h2> 
<p>This project is <a href="https://github.com/your_username/your_repository/raw/master/LICENSE">MIT</a> licensed.</p> 
<h2>Contact</h2> 
<p>Matt Shumer - <a href="https://twitter.com/mattshumer_">@mattshumer_</a></p> 
<p>Project Link: <a href="https://raw.githubusercontent.com/mshumer/gpt-prompt-engineer/main/url">https://github.com/mshumer/gpt-prompt-engineer</a></p> 
<p>Lastly, if you want to try something even cooler than this, sign up for <a href="https://app.hyperwriteai.com/personalassistant">HyperWrite Personal Assistant</a> (most of my time is spent on this). It's basically an AI with access to real-time information that a) is incredible at writing naturally, and b) can operate your web browser to complete tasks for you.</p></description>
</item>
<item>
<title>stitionai/devika</title>
<link>https://github.com/stitionai/devika</link>
<description>Content Length: 18024

<p>Devika is an Agentic AI Software Engineer that can understand high-level human instructions, break them down into steps, research relevant information, and write code to achieve the given objective. Devika aims to be a competitive open-source alternative to Devin by Cognition AI.</p><hr /><p align="center"> <img alt="Devika Logo" src="https://raw.githubusercontent.com/stitionai/devika/main/.assets/devika-avatar.png" width="250" /> </p> 
<h1 align="center">🚀 Devika - Agentic AI Software Engineer 👩‍💻</h1> 
<p><img alt="devika screenshot" src="https://raw.githubusercontent.com/stitionai/devika/main/.assets/devika-screenshot.png" /></p> 
<blockquote> 
 <p>[!IMPORTANT]<br /> This project is currently in a very early development/experimental stage. There are a lot of unimplemented/broken features at the moment. Contributions are welcome to help out with the progress!</p> 
</blockquote> 
<h2>Table of Contents</h2> 
<ul> 
 <li><a href="https://raw.githubusercontent.com/stitionai/devika/main/#about">About</a></li> 
 <li><a href="https://raw.githubusercontent.com/stitionai/devika/main/#key-features">Key Features</a></li> 
 <li><a href="https://raw.githubusercontent.com/stitionai/devika/main/#system-architecture">System Architecture</a></li> 
 <li><a href="https://raw.githubusercontent.com/stitionai/devika/main/#quick-start">Quick Start</a></li> 
 <li><a href="https://raw.githubusercontent.com/stitionai/devika/main/#installation">Installation</a></li> 
 <li><a href="https://raw.githubusercontent.com/stitionai/devika/main/#getting-started">Getting Started</a></li> 
 <li><a href="https://raw.githubusercontent.com/stitionai/devika/main/#configuration">Configuration</a></li> 
 <li><a href="https://raw.githubusercontent.com/stitionai/devika/main/#under-the-hood">Under The Hood</a> 
  <ul> 
   <li><a href="https://raw.githubusercontent.com/stitionai/devika/main/#ai-planning-and-reasoning">AI Planning and Reasoning</a></li> 
   <li><a href="https://raw.githubusercontent.com/stitionai/devika/main/#keyword-extraction">Keyword Extraction</a></li> 
   <li><a href="https://raw.githubusercontent.com/stitionai/devika/main/#browser-interaction">Browser Interaction</a></li> 
   <li><a href="https://raw.githubusercontent.com/stitionai/devika/main/#code-writing">Code Writing</a></li> 
  </ul> </li> 
 <li><a href="https://raw.githubusercontent.com/stitionai/devika/main/#community-discord-server">Community Discord Server</a></li> 
 <li><a href="https://raw.githubusercontent.com/stitionai/devika/main/#contributing">Contributing</a></li> 
 <li><a href="https://raw.githubusercontent.com/stitionai/devika/main/#license">License</a></li> 
</ul> 
<h2>About</h2> 
<p>Devika is an advanced AI software engineer that can understand high-level human instructions, break them down into steps, research relevant information, and write code to achieve the given objective. Devika utilizes large language models, planning and reasoning algorithms, and web browsing abilities to intelligently develop software.</p> 
<p>Devika aims to revolutionize the way we build software by providing an AI pair programmer who can take on complex coding tasks with minimal human guidance. Whether you need to create a new feature, fix a bug, or develop an entire project from scratch, Devika is here to assist you.</p> 
<blockquote> 
 <p>[!NOTE] Devika is modeled after <a href="https://www.cognition-labs.com/introducing-devin">Devin</a> by Cognition AI. This project aims to be an open-source alternative to Devin with an "overly ambitious" goal to meet the same score as Devin in the <a href="https://www.swebench.com/">SWE-bench</a> Benchmarks... and eventually beat it?</p> 
</blockquote> 
<h2>Demos</h2> 
<p><a href="https://github.com/stitionai/devika/assets/26198477/cfed6945-d53b-4189-9fbe-669690204206">https://github.com/stitionai/devika/assets/26198477/cfed6945-d53b-4189-9fbe-669690204206</a></p> 
<h2>Key Features</h2> 
<ul> 
 <li>🤖 Supports <strong>Claude 3</strong>, <strong>GPT-4</strong>, <strong>GPT-3.5</strong>, and <strong>Local LLMs</strong> via <a href="https://ollama.com">Ollama</a>. For optimal performance: Use the <strong>Claude 3</strong> family of models.</li> 
 <li>🧠 Advanced AI planning and reasoning capabilities</li> 
 <li>🔍 Contextual keyword extraction for focused research</li> 
 <li>🌐 Seamless web browsing and information gathering</li> 
 <li>💻 Code writing in multiple programming languages</li> 
 <li>📊 Dynamic agent state tracking and visualization</li> 
 <li>💬 Natural language interaction via chat interface</li> 
 <li>📂 Project-based organization and management</li> 
 <li>🔌 Extensible architecture for adding new features and integrations</li> 
</ul> 
<h2>System Architecture</h2> 
<p>Devika's system architecture consists of the following key components:</p> 
<ol> 
 <li><strong>User Interface</strong>: A web-based chat interface for interacting with Devika, viewing project files, and monitoring the agent's state.</li> 
 <li><strong>Agent Core</strong>: The central component that orchestrates the AI planning, reasoning, and execution process. It communicates with various sub-agents and modules to accomplish tasks.</li> 
 <li><strong>Large Language Models</strong>: Devika leverages state-of-the-art language models like <strong>Claude</strong>, <strong>GPT-4</strong>, and <strong>Local LLMs via Ollama</strong> for natural language understanding, generation, and reasoning.</li> 
 <li><strong>Planning and Reasoning Engine</strong>: Responsible for breaking down high-level objectives into actionable steps and making decisions based on the current context.</li> 
 <li><strong>Research Module</strong>: Utilizes keyword extraction and web browsing capabilities to gather relevant information for the task at hand.</li> 
 <li><strong>Code Writing Module</strong>: Generates code based on the plan, research findings, and user requirements. Supports multiple programming languages.</li> 
 <li><strong>Browser Interaction Module</strong>: Enables Devika to navigate websites, extract information, and interact with web elements as needed.</li> 
 <li><strong>Knowledge Base</strong>: Stores and retrieves project-specific information, code snippets, and learned knowledge for efficient access.</li> 
 <li><strong>Database</strong>: Persists project data, agent states, and configuration settings.</li> 
</ol> 
<p>Read <a href="https://github.com/stitionai/devika/raw/main/ARCHITECTURE.md"><strong>ARCHITECTURE.md</strong></a> for the detailed documentation.</p> 
<h2>Quick Start</h2> 
<p>The easiest way to run the project locally:</p> 
<ol> 
 <li>Install <code>uv</code> - Python Package manager (<a href="https://github.com/astral-sh/uv">https://github.com/astral-sh/uv</a>)</li> 
 <li>Install <code>bun</code> - JavaScript runtime (<a href="https://bun.sh/">https://bun.sh/</a>)</li> 
 <li>Install and setup <code>Ollama</code> (<a href="https://ollama.com/">https://ollama.com/</a>)</li> 
</ol> 
<p>Set the API Keys in the <code>config.toml</code> file. (This will soon be moving to the UI where you can set these keys from the UI itself without touching the command-line, want to implement it? See this issue: <a href="https://github.com/stitionai/devika/issues/3">https://github.com/stitionai/devika/issues/3</a>)</p> 
<p>Then execute the following set of command:</p> 
<pre><code>ollama serve
git clone https://github.com/stitionai/devika.git
cd devika/
uv venv
uv pip install -r requirements.txt
cd ui/
bun install
bun run dev
python3 devika.py
</code></pre> 
<p>Docker images will be released soon. <span>🙌</span></p> 
<h2>Installation</h2> 
<p>Devika requires the following things as dependencies:</p> 
<ul> 
 <li>Ollama (follow the instructions here to install it: <a href="https://ollama.com/">https://ollama.com/</a>)</li> 
 <li>Bun (follow the instructions here to install it: <a href="https://bun.sh/">https://bun.sh/</a>)</li> 
</ul> 
<p>To install Devika, follow these steps:</p> 
<ol> 
 <li>Clone the Devika repository: <pre><code class="language-bash">git clone https://github.com/stitionai/devika.git
</code></pre> </li> 
 <li>Navigate to the project directory: <pre><code class="language-bash">cd devika
</code></pre> </li> 
 <li>Install the required dependencies: <pre><code class="language-bash">pip install -r requirements.txt
playwright install --with-deps # installs browsers in playwright (and their deps) if required
</code></pre> </li> 
 <li>Set up the necessary API keys and configuration (see <a href="https://raw.githubusercontent.com/stitionai/devika/main/#configuration">Configuration</a> section).</li> 
 <li>Start the Devika server: <pre><code class="language-bash">python devika.py
</code></pre> </li> 
 <li>Compile and run the UI server: <pre><code class="language-bash">cd ui/
bun install
bun run dev
</code></pre> </li> 
 <li>Access the Devika web interface by opening a browser and navigating to <code>http://127.0.0.1:3000</code>.</li> 
</ol> 
<h2>Getting Started</h2> 
<p>To start using Devika, follow these steps:</p> 
<ol> 
 <li>Open the Devika web interface in your browser.</li> 
 <li>Create a new project by clicking on the "New Project" button and providing a name for your project.</li> 
 <li>Select the desired programming language and model configuration for your project.</li> 
 <li>In the chat interface, provide a high-level objective or task description for Devika to work on.</li> 
 <li>Devika will process your request, break it down into steps, and start working on the task.</li> 
 <li>Monitor Devika's progress, view generated code, and provide additional guidance or feedback as needed.</li> 
 <li>Once Devika completes the task, review the generated code and project files.</li> 
 <li>Iterate and refine the project as desired by providing further instructions or modifications.</li> 
</ol> 
<h2>Configuration</h2> 
<p>Devika requires certain configuration settings and API keys to function properly. Update the <code>config.toml</code> file with the following information:</p> 
<ul> 
 <li><code>OPENAI_API_KEY</code>: Your OpenAI API key for accessing GPT models.</li> 
 <li><code>CLAUDE_API_KEY</code>: Your Anthropic API key for accessing Claude models.</li> 
 <li><code>BING_API_KEY</code>: Your Bing Search API key for web searching capabilities.</li> 
 <li><code>DATABASE_URL</code>: The URL for your database connection.</li> 
 <li><code>LOG_DIRECTORY</code>: The directory where Devika's logs will be stored.</li> 
 <li><code>PROJECT_DIRECTORY</code>: The directory where Devika's projects will be stored.</li> 
</ul> 
<p>Make sure to keep your API keys secure and do not share them publicly.</p> 
<h2>Under The Hood</h2> 
<p>Let's dive deeper into some of the key components and techniques used in Devika:</p> 
<h3>AI Planning and Reasoning</h3> 
<p>Devika employs advanced AI planning and reasoning algorithms to break down high-level objectives into actionable steps. The planning process involves the following stages:</p> 
<ol> 
 <li><strong>Objective Understanding</strong>: Devika analyzes the given objective or task description to understand the user's intent and requirements.</li> 
 <li><strong>Context Gathering</strong>: Relevant context is collected from the conversation history, project files, and knowledge base to inform the planning process.</li> 
 <li><strong>Step Generation</strong>: Based on the objective and context, Devika generates a sequence of high-level steps to accomplish the task.</li> 
 <li><strong>Refinement and Validation</strong>: The generated steps are refined and validated to ensure their feasibility and alignment with the objective.</li> 
 <li><strong>Execution</strong>: Devika executes each step in the plan, utilizing various sub-agents and modules as needed.</li> 
</ol> 
<p>The reasoning engine constantly evaluates the progress and makes adjustments to the plan based on new information or feedback received during execution.</p> 
<h3>Keyword Extraction</h3> 
<p>To enable focused research and information gathering, Devika employs keyword extraction techniques. The process involves the following steps:</p> 
<ol> 
 <li><strong>Preprocessing</strong>: The input text (objective, conversation history, or project files) is preprocessed by removing stop words, tokenizing, and normalizing the text.</li> 
 <li><strong>Keyword Identification</strong>: Devika uses the BERT (Bidirectional Encoder Representations from Transformers) model to identify important keywords and phrases from the preprocessed text. BERT's pre-training on a large corpus allows it to capture semantic relationships and understand the significance of words in the given context.</li> 
 <li><strong>Keyword Ranking</strong>: The identified keywords are ranked based on their relevance and importance to the task at hand. Techniques like TF-IDF (Term Frequency-Inverse Document Frequency) and TextRank are used to assign scores to each keyword.</li> 
 <li><strong>Keyword Selection</strong>: The top-ranked keywords are selected as the most relevant and informative for the current context. These keywords are used to guide the research and information gathering process.</li> 
</ol> 
<p>By extracting contextually relevant keywords, Devika can focus its research efforts and retrieve pertinent information to assist in the task completion.</p> 
<h3>Browser Interaction</h3> 
<p>Devika incorporates browser interaction capabilities to navigate websites, extract information, and interact with web elements. The browser interaction module leverages the Playwright library to automate web interactions. The process involves the following steps:</p> 
<ol> 
 <li><strong>Navigation</strong>: Devika uses Playwright to navigate to specific URLs or perform searches based on the keywords or requirements provided.</li> 
 <li><strong>Element Interaction</strong>: Playwright allows Devika to interact with web elements such as clicking buttons, filling forms, and extracting text from specific elements.</li> 
 <li><strong>Page Parsing</strong>: Devika parses the HTML structure of the web pages visited to extract relevant information. It uses techniques like CSS selectors and XPath to locate and extract specific data points.</li> 
 <li><strong>JavaScript Execution</strong>: Playwright enables Devika to execute JavaScript code within the browser context, allowing for dynamic interactions and data retrieval.</li> 
 <li><strong>Screenshot Capture</strong>: Devika can capture screenshots of the web pages visited, which can be useful for visual reference or debugging purposes.</li> 
</ol> 
<p>The browser interaction module empowers Devika to gather information from the web, interact with online resources, and incorporate real-time data into its decision-making and code generation processes.</p> 
<h3>Code Writing</h3> 
<p>Devika's code writing module generates code based on the plan, research findings, and user requirements. The process involves the following steps:</p> 
<ol> 
 <li><strong>Language Selection</strong>: Devika identifies the programming language specified by the user or infers it based on the project context.</li> 
 <li><strong>Code Structure Generation</strong>: Based on the plan and language-specific patterns, Devika generates the high-level structure of the code, including classes, functions, and modules.</li> 
 <li><strong>Code Population</strong>: Devika fills in the code structure with specific logic, algorithms, and data manipulation statements. It leverages the research findings, code snippets from the knowledge base, and its own understanding of programming concepts to generate meaningful code.</li> 
 <li><strong>Code Formatting</strong>: The generated code is formatted according to the language-specific conventions and best practices to ensure readability and maintainability.</li> 
 <li><strong>Code Review and Refinement</strong>: Devika reviews the generated code for syntax errors, logical inconsistencies, and potential improvements. It iteratively refines the code based on its own analysis and any feedback provided by the user.</li> 
</ol> 
<p>Devika's code writing capabilities enable it to generate functional and efficient code in various programming languages, taking into account the specific requirements and context of each project.</p> 
<h1>Community Discord Server</h1> 
<p>We have a Discord server for the Devika community, where you can connect with other users, share your experiences, ask questions, and collaborate on the project. To join the server, please follow these guidelines:</p> 
<ul> 
 <li>Be respectful: Treat all members of the community with kindness and respect. Harassment, hate speech, and other forms of inappropriate behavior will not be tolerated.</li> 
 <li>Contribute positively: Share your ideas, insights, and feedback to help improve Devika. Offer assistance to other community members when possible.</li> 
 <li>Maintain privacy: Respect the privacy of others and do not share personal information without their consent.</li> 
</ul> 
<p>To join the Devika community Discord server, <a href="https://discord.com/invite/8eYNbPuB">click here</a>.</p> 
<h2>Contributing</h2> 
<p>We welcome contributions to enhance Devika's capabilities and improve its performance. To contribute, please follow these steps:</p> 
<ol> 
 <li>Fork the Devika repository on GitHub.</li> 
 <li>Create a new branch for your feature or bug fix.</li> 
 <li>Make your changes and ensure that the code passes all tests.</li> 
 <li>Submit a pull request describing your changes and their benefits.</li> 
</ol> 
<p>Please adhere to the coding conventions, maintain clear documentation, and provide thorough testing for your contributions.</p> 
<h2>License</h2> 
<p>Devika is released under the <a href="https://opensource.org/licenses/MIT">MIT License</a>. See the <code>LICENSE</code> file for more information.</p> 
<hr /> 
<p>We hope you find Devika to be a valuable tool in your software development journey. If you have any questions, feedback, or suggestions, please don't hesitate to reach out. Happy coding with Devika!</p></description>
</item>
<item>
<title>Wilfred/difftastic</title>
<link>https://github.com/Wilfred/difftastic</link>
<description>Content Length: 6605

<p>a structural diff that understands syntax 🟥🟩</p><hr /><p align="center"> <a href="https://raw.githubusercontent.com/Wilfred/difftastic/master/#readme"><img alt="it's difftastic!" src="https://raw.githubusercontent.com/Wilfred/difftastic/master/img/logo.png" /></a> <br /> <a href="https://difftastic.wilfred.me.uk/introduction.html"><img alt="English manual" src="https://img.shields.io/badge/manual-en-brightgreen?style=flat-square" /></a> <a href="https://difftastic.wilfred.me.uk/zh-CN/"><img alt="Chinese manual" src="https://img.shields.io/badge/manual-zh--CN-brightgreen?style=flat-square" /></a> <a href="https://crates.io/crates/difftastic"><img alt="crates.io" src="https://img.shields.io/crates/v/difftastic.svg?style=flat-square" /></a> <a href="https://codecov.io/gh/Wilfred/difftastic"><img alt="codecov.io" src="https://img.shields.io/codecov/c/github/Wilfred/difftastic?style=flat-square&amp;token=dZzAZtQT2S" /></a> </p> 
<p>Difftastic is a structural diff tool that compares files based on their syntax.</p> 
<p><strong>For installation instructions, see <a href="https://difftastic.wilfred.me.uk/installation.html">Installation</a> in <a href="http://difftastic.wilfred.me.uk/">the manual</a>.</strong></p> 
<h2>Basic Example</h2> 
<p><img alt="Screenshot of difftastic and JS" src="https://raw.githubusercontent.com/Wilfred/difftastic/master/img/js.png" /></p> 
<p>In this JavaScript example, we can see:</p> 
<p>(1) Difftastic understands nesting. It highlights the matching <code>{</code> and <code>}</code>, but understands that <code>foo()</code> hasn't changed despite the leading whitespace.</p> 
<p>(2) Difftastic understands which lines should be aligned. It's aligned <code>bar(1)</code> on the left with <code>bar(2)</code> on the right, even though the textual content isn't identical.</p> 
<p>(3) Difftastic understands that line-wrapping isn't meaningful. <code>"eric"</code> is now on a new line, but it hasn't changed.</p> 
<h2>One Minute Demo</h2> 
<p><a href="https://asciinema.org/a/480875"><img alt="asciicast" src="https://asciinema.org/a/480875.svg?sanitize=true" /></a></p> 
<p>This one minute screencast demonstrates difftastic usage with both standalone files and git.</p> 
<h2>Languages</h2> 
<p>Difftastic supports over 30 programming languages, see <a href="https://difftastic.wilfred.me.uk/">the manual</a> for the full list.</p> 
<p>If a file has an unrecognised extension, difftastic uses a textual diff with word highlighting.</p> 
<h2>Known Issues</h2> 
<p>Performance. Difftastic scales relatively poorly on files with a large number of changes, and can use a lot of memory.</p> 
<p>Display. Difftastic has a side-by-side display which usually works well, but can be confusing.</p> 
<p>Robustness. Difftastic regularly has releases that fix crashes.</p> 
<h2>Non-goals</h2> 
<p>Patching. Difftastic output is intended for human consumption, and it does not generate patches that you can apply later. Use <code>diff</code> if you need a patch.</p> 
<p>(Patch files are also line-oriented, which is too limited for difftastic. Difftastic might find additions and removals on the same line, and it tracks the relationship between line numbers in the old and new file.)</p> 
<p>Merging. AST merging is a hard problem that difftastic does not address.</p> 
<h2>FAQ</h2> 
<h3>Isn't this basically <code>--word-diff --ignore-all-space</code>?</h3> 
<p>Word diffing <a href="https://twitter.com/_wilfredh/status/1510139929971421191/photo/1">can't do this</a>.</p> 
<p>Difftastic parses your code. It understands when whitespace matters, such as inside string literals or languages like Python. It understands that <code>x-1</code> is three tokens in JS but one token in Lisp.</p> 
<h3>Can I use difftastic with git?</h3> 
<p>You can! The difftastic manual <a href="https://difftastic.wilfred.me.uk/git.html">includes instructions for git usage</a>. You can also use it <a href="https://difftastic.wilfred.me.uk/mercurial.html">with mercurial</a>.</p> 
<p>If you're a magit user, check out <a href="https://tsdh.org/posts/2022-08-01-difftastic-diffing-with-magit.html">this blog post</a> showing one way to use difftastic with magit.</p> 
<h3>Does difftastic integrate with my favourite tool?</h3> 
<p>Probably not. Difftastic is young. Consider writing a plugin for your favourite tool, and I will link it in the README!</p> 
<h3>Can difftastic help me with merge conflicts?</h3> 
<p>Yes! As of version 0.50, difftastic understands merge conflict markers (i.e. <code>&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code>, <code>=======</code> and <code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;</code>).</p> 
<p>Pass your file with conflicts as a single argument to difftastic. Difftastic will construct the two conflicting files and diff those.</p> 
<pre><code>$ difft file_with_conflicts.js
</code></pre> 
<h3>Can difftastic do merges?</h3> 
<p>No. AST merging is a hard problem that difftastic does not address.</p> 
<p>AST diffing is a also lossy process from the perspective of a text diff. Difftastic will ignore whitespace that isn't syntactically significant, but merging requires tracking whitespace.</p> 
<h3>Can I use difftastic to check for syntactic changes without diffing?</h3> 
<p>Yes. Difftastic can check if the two files have the same AST, without calculating a diff. This is much faster than normal diffing, and useful for building tools that check for changes.</p> 
<p>For example:</p> 
<pre><code>$ difft --check-only --exit-code before.js after.js
</code></pre> 
<p>This will set the exit code to 0 if there are no syntactic changes, or 1 if there are changes found.</p> 
<h3>How does it work?</h3> 
<p>Difftastic treats structural diffing as a graph problem, and uses Dijkstra's algorithm.</p> 
<p>My <a href="https://www.wilfred.me.uk/blog/2022/09/06/difftastic-the-fantastic-diff/">blog post</a> describes the design, and there is also an <a href="https://difftastic.wilfred.me.uk/diffing.html">internals section in the manual</a>.</p> 
<h2>Translation</h2> 
<ul> 
 <li><a href="https://raw.githubusercontent.com/Wilfred/difftastic/master/translation/zh-CN/README-zh-CN.md">Chinese</a></li> 
</ul> 
<h2>License</h2> 
<p>Difftastic is open source under the MIT license, see LICENSE for more details.</p> 
<p>This repository also includes tree-sitter parsers by other authors in the <code>vendored_parsers/</code> directory. These are a mix of the MIT license and the Apache license. See <code>vendored_parsers/*/LICENSE</code> for more details.</p> 
<p>Files in <code>sample_files/</code> are also under the MIT license unless stated otherwise in their header.</p></description>
</item>
<item>
<title>OpenInterpreter/open-interpreter</title>
<link>https://github.com/OpenInterpreter/open-interpreter</link>
<description>Content Length: 16235

<p>A natural language interface for computers</p><hr /><h1 align="center">● Open Interpreter</h1> 
<p align="center"> <a href="https://discord.gg/Hvz9Axh84z"> <img alt="Discord" src="https://img.shields.io/discord/1146610656779440188?logo=discord&amp;style=flat&amp;logoColor=white" /></a> <a href="https://raw.githubusercontent.com/OpenInterpreter/open-interpreter/main/docs/README_JA.md"><img alt="JA doc" src="https://img.shields.io/badge/ドキュメント-日本語-white.svg" /></a> <a href="https://raw.githubusercontent.com/OpenInterpreter/open-interpreter/main/docs/README_ZH.md"><img alt="ZH doc" src="https://img.shields.io/badge/文档-中文版-white.svg" /></a> <a href="https://raw.githubusercontent.com/OpenInterpreter/open-interpreter/main/docs/README_IN.md"><img alt="IN doc" src="https://img.shields.io/badge/Hindi-white.svg?sanitize=true" /></a> <img alt="License" src="https://img.shields.io/static/v1?label=license&amp;message=AGPL&amp;color=white&amp;style=flat" /> <br /> <br /> <strong>Today we launched a new computer (the 01) with Open Interpreter at the center. <a href="https://github.com/OpenInterpreter/01">Star the repo →</a></strong><br /> <br /><a href="https://openinterpreter.com">Get early access to the desktop app</a>‎ ‎ |‎ ‎ <a href="https://docs.openinterpreter.com/">Documentation</a><br /> </p> 
<br /> 
<p><img alt="poster" src="https://github.com/KillianLucas/open-interpreter/assets/63927363/08f0d493-956b-4d49-982e-67d4b20c4b56" /></p> 
<br /> 
<!--<p align="center">
<strong>The New Computer Update</strong> introduces <strong><code>--os</code></strong> and a new <strong>Computer API</strong>. <a href="https://changes.openinterpreter.com/log/the-new-computer-update">Read On →</a>
</p>--> 
<br /> 
<pre><code class="language-shell">pip install open-interpreter
</code></pre> 
<blockquote> 
 <p>Not working? Read our <a href="https://docs.openinterpreter.com/getting-started/setup">setup guide</a>.</p> 
</blockquote> 
<pre><code class="language-shell">interpreter
</code></pre> 
<br /> 
<p><strong>Open Interpreter</strong> lets LLMs run code (Python, Javascript, Shell, and more) locally. You can chat with Open Interpreter through a ChatGPT-like interface in your terminal by running <code>$ interpreter</code> after installing.</p> 
<p>This provides a natural-language interface to your computer's general-purpose capabilities:</p> 
<ul> 
 <li>Create and edit photos, videos, PDFs, etc.</li> 
 <li>Control a Chrome browser to perform research</li> 
 <li>Plot, clean, and analyze large datasets</li> 
 <li>...etc.</li> 
</ul> 
<p><strong>⚠️ Note: You'll be asked to approve code before it's run.</strong></p> 
<br /> 
<h2>Demo</h2> 
<p><a href="https://github.com/KillianLucas/open-interpreter/assets/63927363/37152071-680d-4423-9af3-64836a6f7b60">https://github.com/KillianLucas/open-interpreter/assets/63927363/37152071-680d-4423-9af3-64836a6f7b60</a></p> 
<h4>An interactive demo is also available on Google Colab:</h4> 
<p><a href="https://colab.research.google.com/drive/1WKmRXZgsErej2xUriKzxrEAXdxMSgWbb?usp=sharing"><img alt="Open In Colab" src="https://colab.research.google.com/assets/colab-badge.svg?sanitize=true" /></a></p> 
<h4>Along with an example voice interface, inspired by <em>Her</em>:</h4> 
<p><a href="https://colab.research.google.com/drive/1NojYGHDgxH6Y1G1oxThEBBb2AtyODBIK"><img alt="Open In Colab" src="https://colab.research.google.com/assets/colab-badge.svg?sanitize=true" /></a></p> 
<h2>Quick Start</h2> 
<pre><code class="language-shell">pip install open-interpreter
</code></pre> 
<h3>Terminal</h3> 
<p>After installation, simply run <code>interpreter</code>:</p> 
<pre><code class="language-shell">interpreter
</code></pre> 
<h3>Python</h3> 
<pre><code class="language-python">from interpreter import interpreter

interpreter.chat("Plot AAPL and META's normalized stock prices") # Executes a single command
interpreter.chat() # Starts an interactive chat
</code></pre> 
<h2>Comparison to ChatGPT's Code Interpreter</h2> 
<p>OpenAI's release of <a href="https://openai.com/blog/chatgpt-plugins#code-interpreter">Code Interpreter</a> with GPT-4 presents a fantastic opportunity to accomplish real-world tasks with ChatGPT.</p> 
<p>However, OpenAI's service is hosted, closed-source, and heavily restricted:</p> 
<ul> 
 <li>No internet access.</li> 
 <li><a href="https://wfhbrian.com/mastering-chatgpts-code-interpreter-list-of-python-packages/">Limited set of pre-installed packages</a>.</li> 
 <li>100 MB maximum upload, 120.0 second runtime limit.</li> 
 <li>State is cleared (along with any generated files or links) when the environment dies.</li> 
</ul> 
<hr /> 
<p>Open Interpreter overcomes these limitations by running in your local environment. It has full access to the internet, isn't restricted by time or file size, and can utilize any package or library.</p> 
<p>This combines the power of GPT-4's Code Interpreter with the flexibility of your local development environment.</p> 
<h2>Commands</h2> 
<p><strong>Update:</strong> The Generator Update (0.1.5) introduced streaming:</p> 
<pre><code class="language-python">message = "What operating system are we on?"

for chunk in interpreter.chat(message, display=False, stream=True):
  print(chunk)
</code></pre> 
<h3>Interactive Chat</h3> 
<p>To start an interactive chat in your terminal, either run <code>interpreter</code> from the command line:</p> 
<pre><code class="language-shell">interpreter
</code></pre> 
<p>Or <code>interpreter.chat()</code> from a .py file:</p> 
<pre><code class="language-python">interpreter.chat()
</code></pre> 
<p><strong>You can also stream each chunk:</strong></p> 
<pre><code class="language-python">message = "What operating system are we on?"

for chunk in interpreter.chat(message, display=False, stream=True):
  print(chunk)
</code></pre> 
<h3>Programmatic Chat</h3> 
<p>For more precise control, you can pass messages directly to <code>.chat(message)</code>:</p> 
<pre><code class="language-python">interpreter.chat("Add subtitles to all videos in /videos.")

# ... Streams output to your terminal, completes task ...

interpreter.chat("These look great but can you make the subtitles bigger?")

# ...
</code></pre> 
<h3>Start a New Chat</h3> 
<p>In Python, Open Interpreter remembers conversation history. If you want to start fresh, you can reset it:</p> 
<pre><code class="language-python">interpreter.messages = []
</code></pre> 
<h3>Save and Restore Chats</h3> 
<p><code>interpreter.chat()</code> returns a List of messages, which can be used to resume a conversation with <code>interpreter.messages = messages</code>:</p> 
<pre><code class="language-python">messages = interpreter.chat("My name is Killian.") # Save messages to 'messages'
interpreter.messages = [] # Reset interpreter ("Killian" will be forgotten)

interpreter.messages = messages # Resume chat from 'messages' ("Killian" will be remembered)
</code></pre> 
<h3>Customize System Message</h3> 
<p>You can inspect and configure Open Interpreter's system message to extend its functionality, modify permissions, or give it more context.</p> 
<pre><code class="language-python">interpreter.system_message += """
Run shell commands with -y so the user doesn't have to confirm them.
"""
print(interpreter.system_message)
</code></pre> 
<h3>Change your Language Model</h3> 
<p>Open Interpreter uses <a href="https://docs.litellm.ai/docs/providers/">LiteLLM</a> to connect to hosted language models.</p> 
<p>You can change the model by setting the model parameter:</p> 
<pre><code class="language-shell">interpreter --model gpt-3.5-turbo
interpreter --model claude-2
interpreter --model command-nightly
</code></pre> 
<p>In Python, set the model on the object:</p> 
<pre><code class="language-python">interpreter.llm.model = "gpt-3.5-turbo"
</code></pre> 
<p><a href="https://docs.litellm.ai/docs/providers/">Find the appropriate "model" string for your language model here.</a></p> 
<h3>Running Open Interpreter locally</h3> 
<h4>Terminal</h4> 
<p>Open Interpreter can use OpenAI-compatible server to run models locally. (LM Studio, jan.ai, ollama etc)</p> 
<p>Simply run <code>interpreter</code> with the api_base URL of your inference server (for LM studio it is <code>http://localhost:1234/v1</code> by default):</p> 
<pre><code class="language-shell">interpreter --api_base "http://localhost:1234/v1" --api_key "fake_key"
</code></pre> 
<p>Alternatively you can use Llamafile without installing any third party software just by running</p> 
<pre><code class="language-shell">interpreter --local
</code></pre> 
<p>for a more detailed guide check out <a href="https://www.youtube.com/watch?v=CEs51hGWuGU?si=cN7f6QhfT4edfG5H">this video by Mike Bird</a></p> 
<p><strong>How to run LM Studio in the background.</strong></p> 
<ol> 
 <li>Download <a href="https://lmstudio.ai/">https://lmstudio.ai/</a> then start it.</li> 
 <li>Select a model then click <strong>↓ Download</strong>.</li> 
 <li>Click the <strong>↔️</strong> button on the left (below 💬).</li> 
 <li>Select your model at the top, then click <strong>Start Server</strong>.</li> 
</ol> 
<p>Once the server is running, you can begin your conversation with Open Interpreter.</p> 
<blockquote> 
 <p><strong>Note:</strong> Local mode sets your <code>context_window</code> to 3000, and your <code>max_tokens</code> to 1000. If your model has different requirements, set these parameters manually (see below).</p> 
</blockquote> 
<h4>Python</h4> 
<p>Our Python package gives you more control over each setting. To replicate and connect to LM Studio, use these settings:</p> 
<pre><code class="language-python">from interpreter import interpreter

interpreter.offline = True # Disables online features like Open Procedures
interpreter.llm.model = "openai/x" # Tells OI to send messages in OpenAI's format
interpreter.llm.api_key = "fake_key" # LiteLLM, which we use to talk to LM Studio, requires this
interpreter.llm.api_base = "http://localhost:1234/v1" # Point this at any OpenAI compatible server

interpreter.chat()
</code></pre> 
<h4>Context Window, Max Tokens</h4> 
<p>You can modify the <code>max_tokens</code> and <code>context_window</code> (in tokens) of locally running models.</p> 
<p>For local mode, smaller context windows will use less RAM, so we recommend trying a much shorter window (~1000) if it's failing / if it's slow. Make sure <code>max_tokens</code> is less than <code>context_window</code>.</p> 
<pre><code class="language-shell">interpreter --local --max_tokens 1000 --context_window 3000
</code></pre> 
<h3>Verbose mode</h3> 
<p>To help you inspect Open Interpreter we have a <code>--verbose</code> mode for debugging.</p> 
<p>You can activate verbose mode by using its flag (<code>interpreter --verbose</code>), or mid-chat:</p> 
<pre><code class="language-shell">$ interpreter
...
&gt; %verbose true &lt;- Turns on verbose mode

&gt; %verbose false &lt;- Turns off verbose mode
</code></pre> 
<h3>Interactive Mode Commands</h3> 
<p>In the interactive mode, you can use the below commands to enhance your experience. Here's a list of available commands:</p> 
<p><strong>Available Commands:</strong></p> 
<ul> 
 <li><code>%verbose [true/false]</code>: Toggle verbose mode. Without arguments or with <code>true</code> it enters verbose mode. With <code>false</code> it exits verbose mode.</li> 
 <li><code>%reset</code>: Resets the current session's conversation.</li> 
 <li><code>%undo</code>: Removes the previous user message and the AI's response from the message history.</li> 
 <li><code>%tokens [prompt]</code>: (<em>Experimental</em>) Calculate the tokens that will be sent with the next prompt as context and estimate their cost. Optionally calculate the tokens and estimated cost of a <code>prompt</code> if one is provided. Relies on <a href="https://docs.litellm.ai/docs/completion/token_usage#2-cost_per_token">LiteLLM's <code>cost_per_token()</code> method</a> for estimated costs.</li> 
 <li><code>%help</code>: Show the help message.</li> 
</ul> 
<h3>Configuration / Profiles</h3> 
<p>Open Interpreter allows you to set default behaviors using <code>yaml</code> files.</p> 
<p>This provides a flexible way to configure the interpreter without changing command-line arguments every time.</p> 
<p>Run the following command to open the profiles directory:</p> 
<pre><code>interpreter --profiles
</code></pre> 
<p>You can add <code>yaml</code> files there. The default profile is named <code>default.yaml</code>.</p> 
<h4>Multiple Profiles</h4> 
<p>Open Interpreter supports multiple <code>yaml</code> files, allowing you to easily switch between configurations:</p> 
<pre><code>interpreter --profile my_profile.yaml
</code></pre> 
<h2>Sample FastAPI Server</h2> 
<p>The generator update enables Open Interpreter to be controlled via HTTP REST endpoints:</p> 
<pre><code class="language-python"># server.py

from fastapi import FastAPI
from fastapi.responses import StreamingResponse
from interpreter import interpreter

app = FastAPI()

@app.get("/chat")
def chat_endpoint(message: str):
    def event_stream():
        for result in interpreter.chat(message, stream=True):
            yield f"data: {result}\n\n"

    return StreamingResponse(event_stream(), media_type="text/event-stream")

@app.get("/history")
def history_endpoint():
    return interpreter.messages
</code></pre> 
<pre><code class="language-shell">pip install fastapi uvicorn
uvicorn server:app --reload
</code></pre> 
<p>You can also start a server identical to the one above by simply running <code>interpreter.server()</code>.</p> 
<h2>Android</h2> 
<p>The step-by-step guide for installing Open Interpreter on your Android device can be found in the <a href="https://github.com/MikeBirdTech/open-interpreter-termux">open-interpreter-termux repo</a>.</p> 
<h2>Safety Notice</h2> 
<p>Since generated code is executed in your local environment, it can interact with your files and system settings, potentially leading to unexpected outcomes like data loss or security risks.</p> 
<p><strong>⚠️ Open Interpreter will ask for user confirmation before executing code.</strong></p> 
<p>You can run <code>interpreter -y</code> or set <code>interpreter.auto_run = True</code> to bypass this confirmation, in which case:</p> 
<ul> 
 <li>Be cautious when requesting commands that modify files or system settings.</li> 
 <li>Watch Open Interpreter like a self-driving car, and be prepared to end the process by closing your terminal.</li> 
 <li>Consider running Open Interpreter in a restricted environment like Google Colab or Replit. These environments are more isolated, reducing the risks of executing arbitrary code.</li> 
</ul> 
<p>There is <strong>experimental</strong> support for a <a href="https://raw.githubusercontent.com/OpenInterpreter/open-interpreter/main/docs/SAFE_MODE.md">safe mode</a> to help mitigate some risks.</p> 
<h2>How Does it Work?</h2> 
<p>Open Interpreter equips a <a href="https://platform.openai.com/docs/guides/gpt/function-calling">function-calling language model</a> with an <code>exec()</code> function, which accepts a <code>language</code> (like "Python" or "JavaScript") and <code>code</code> to run.</p> 
<p>We then stream the model's messages, code, and your system's outputs to the terminal as Markdown.</p> 
<h1>Contributing</h1> 
<p>Thank you for your interest in contributing! We welcome involvement from the community.</p> 
<p>Please see our <a href="https://raw.githubusercontent.com/OpenInterpreter/open-interpreter/main/docs/CONTRIBUTING.md">contributing guidelines</a> for more details on how to get involved.</p> 
<h1>Roadmap</h1> 
<p>Visit <a href="https://github.com/KillianLucas/open-interpreter/raw/main/docs/ROADMAP.md">our roadmap</a> to preview the future of Open Interpreter.</p> 
<p><strong>Note</strong>: This software is not affiliated with OpenAI.</p> 
<p><img alt="thumbnail-ncu" src="https://github.com/KillianLucas/open-interpreter/assets/63927363/1b19a5db-b486-41fd-a7a1-fe2028031686" /></p> 
<blockquote> 
 <p>Having access to a junior programmer working at the speed of your fingertips ... can make new workflows effortless and efficient, as well as open the benefits of programming to new audiences.</p> 
 <p>— <em>OpenAI's Code Interpreter Release</em></p> 
</blockquote> 
<br /></description>
</item>
<item>
<title>ruanyf/weekly</title>
<link>https://github.com/ruanyf/weekly</link>
<description>Content Length: 37953

<p>科技爱好者周刊，每周五发布</p><hr /><h1>科技爱好者周刊</h1> 
<p>记录每周值得分享的科技内容，周五发布。</p> 
<p>欢迎投稿，推荐或自荐文章/软件/资源，请<a href="https://github.com/ruanyf/weekly/issues">提交 issue</a> 。</p> 
<blockquote> 
 <p>P.S. 讨论区的<a href="https://github.com/ruanyf/weekly/issues/4075">《谁在招人》</a>，是一个免费的程序员招聘帖，提供大量就业信息，欢迎访问或发布工作/实习岗位。</p> 
</blockquote> 
<h2>如何搜索</h2> 
<p>周刊已经沉淀了大量内容，可以使用下面的几种方法进行搜索。</p> 
<p>1、使用 GitHub 自带的网页搜索。</p> 
<p>2、使用 <a href="https://sourcegraph.com/github.com/ruanyf/weekly">Sourcegraph.com</a> 进行搜索。</p> 
<p>3、将这个仓库克隆到本地，然后在仓库目录使用下面的命令。</p> 
<pre><code class="language-bash">$ grep -nri [搜索词] docs | cat --number
</code></pre> 
<p>比如，搜索 CSS 相关内容。</p> 
<pre><code class="language-bash">$ grep -nri css docs | cat --number
</code></pre> 
<h2>2024</h2> 
<p><strong>三月</strong></p> 
<ul> 
 <li>第 294 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-294.md">崖门海战的感想</a></li> 
 <li>第 293 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-293.md">一周是一年的2%</a></li> 
 <li>第 292 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-292.md">所有代码都是技术债</a></li> 
 <li>第 291 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-291.md">AI 没有护城河</a></li> 
</ul> 
<p><strong>二月</strong></p> 
<ul> 
 <li>第 290 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-290.md">苹果头盔的最大问题</a></li> 
 <li>第 289 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-289.md">宽容从何而来</a></li> 
</ul> 
<p><strong>一月</strong></p> 
<ul> 
 <li>第 288 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-288.md">技术写作的首要诀窍</a></li> 
 <li>第 287 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-287.md">禄丰恐龙谷记行</a></li> 
 <li>第 286 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-286.md">蓝色指示灯的解决方案</a></li> 
 <li>第 285 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-285.md">为什么 PPT 不如备忘录</a></li> 
</ul> 
<h2>2023</h2> 
<p><strong>十二月</strong></p> 
<ul> 
 <li>第 284 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-284.md">YouTube 有多少个视频？</a></li> 
 <li>第 283 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-283.md">[年终感想] 没有目的地，向前走</a></li> 
 <li>第 282 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-282.md">电动皮卡 Cybertruck 的 48V 供电</a></li> 
 <li>第 281 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-281.md">新基建的政策选择</a></li> 
 <li>第 280 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-280.md">机器点餐与宅文化</a></li> 
</ul> 
<p><strong>十一月</strong></p> 
<ul> 
 <li>第 279 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-279.md">网络社区的悲剧</a></li> 
 <li>第 278 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-278.md">棘手的 AI 版权</a></li> 
 <li>第 277 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-277.md">工作台副屏的最佳选择</a></li> 
 <li>第 276 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-276.md">内容行业的衰落</a></li> 
</ul> 
<p><strong>十月</strong></p> 
<ul> 
 <li>第 275 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-275.md">彼得·蒂尔的实验</a></li> 
 <li>第 274 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-274.md">加密通信的最后一块拼图</a></li> 
 <li>第 273 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-273.md">任正非的三篇最新谈话</a></li> 
</ul> 
<p><strong>九月</strong></p> 
<ul> 
 <li>第 272 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-272.md">Unity 的安装费，游戏业的缩影</a></li> 
 <li>第 271 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-271.md">非线性的世界，线性的你</a></li> 
 <li>第 270 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-270.md">“精益开发”的精益是什么？</a></li> 
 <li>第 269 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-269.md">为什么英雄不使用炸药</a></li> 
</ul> 
<p><strong>八月</strong></p> 
<ul> 
 <li>第 268 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-268.md">生产力是形容机器，不是形容人</a></li> 
 <li>第 267 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-267.md">5G 的春天要来了</a></li> 
 <li>第 266 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-266.md">自己做双语 EPUB 电子书</a></li> 
 <li>第 265 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-265.md">WiFi 的后面是 LiFi</a></li> 
</ul> 
<p><strong>七月</strong></p> 
<ul> 
 <li>第 264 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-264.md">Elasticsearch 的启示</a></li> 
 <li>第 263 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-263.md">开源软件如何赚钱？</a></li> 
 <li>第 262 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-262.md">告别密码</a></li> 
 <li>第 261 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-261.md">黑客马拉松的正确方式</a></li> 
</ul> 
<p><strong>六月</strong></p> 
<ul> 
 <li>第 260 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-260.md">你的旅程不会停在 Day 1</a></li> 
 <li>第 259 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-259.md">如何免费使用 ChatGPT</a></li> 
 <li>第 258 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-258.md">卡马克的猫</a></li> 
 <li>第 257 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-257.md">黄仁勋的 Nvidia 故事</a></li> 
</ul> 
<p><strong>五月</strong></p> 
<ul> 
 <li>第 256 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-256.md">最酷的乐高作品</a></li> 
 <li>第 255 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-255.md">对待 AI 的正确态度</a></li> 
 <li>第 254 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-254.md">人生是一个长板问题</a></li> 
 <li>第 253 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-253.md">训练材料用完之日</a></li> 
</ul> 
<p><strong>四月</strong></p> 
<ul> 
 <li>第 252 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-252.md">互联网创业变难了</a></li> 
 <li>第 251 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-251.md">国产单板机值得推荐</a></li> 
 <li>第 250 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-250.md">新技术的最大风险</a></li> 
 <li>第 249 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-249.md">最成功的软件企业家</a></li> 
</ul> 
<p><strong>三月</strong></p> 
<ul> 
 <li>第 248 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-248.md">不要夸大 ChatGPT</a></li> 
 <li>第 247 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-247.md">扎克伯克的裁员信</a></li> 
 <li>第 246 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-246.md">永不丢失的网络身份</a></li> 
 <li>第 245 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-245.md">摩天大楼是反人类的</a></li> 
 <li>第 244 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-244.md">大数据已死</a></li> 
</ul> 
<p><strong>二月</strong></p> 
<ul> 
 <li>第 243 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-243.md">与孔子 AI 聊天</a></li> 
 <li>第 242 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-242.md">一次尴尬的服务器被黑</a></li> 
 <li>第 241 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-241.md">中国的增长动力在内陆</a></li> 
 <li>第 240 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-240.md">教育年限可以缩短吗？</a></li> 
</ul> 
<p><strong>一月</strong></p> 
<ul> 
 <li>第 239 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-239.md">未来两种人会增加</a></li> 
 <li>第 238 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-238.md">停止寻找的最佳时间</a></li> 
</ul> 
<h2>2022</h2> 
<p>十二月</p> 
<ul> 
 <li>第 237 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-237.md">真实方位是如何暴露的？</a></li> 
 <li>第 236 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-236.md">中国的阳光地带</a></li> 
 <li>第 235 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-235.md">青年失业率与选择创业</a></li> 
 <li>第 234 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-234.md">AI 聊天有多强</a></li> 
 <li>第 233 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-233.md">生活就像一个鱼缸</a></li> 
</ul> 
<p>十一月</p> 
<ul> 
 <li>第 232 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-232.md">好用的平面设计软件</a></li> 
 <li>第 231 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-231.md">互联网公司需要多少员工？</a></li> 
 <li>第 230 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-230.md">电子产品的用电量</a></li> 
 <li>第 229 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-229.md">手机充电问题的解决</a></li> 
</ul> 
<p>十月</p> 
<ul> 
 <li>第 228 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-228.md">人类和人生的意义</a></li> 
 <li>第 227 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-227.md">脸书的公司入职教育</a></li> 
 <li>第 226 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-226.md">谷歌出了什么问题？</a></li> 
</ul> 
<p>九月</p> 
<ul> 
 <li>第 225 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-225.md">游戏 NPC 也是一种职业</a></li> 
 <li>第 224 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-224.md">Figma 为什么赢了 Sketch</a></li> 
 <li>第 223 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-223.md">程序员需要担心裁员吗？</a></li> 
 <li>第 222 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-222.md">四十年编程感想</a></li> 
 <li>第 221 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-221.md">全世界最繁荣的行业</a></li> 
</ul> 
<p>八月</p> 
<ul> 
 <li>第 220 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-220.md">人工智能的机会在哪里</a></li> 
 <li>第 219 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-219.md">如何防止帐号被黑</a></li> 
 <li>第 218 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-218.md">葡萄酒，樱花，全球变暖</a></li> 
 <li>第 217 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-217.md">沙特的新未来城</a></li> 
</ul> 
<p>七月</p> 
<ul> 
 <li>第 216 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-216.md">极简主义的胜利</a></li> 
 <li>第 215 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-215.md">互联网最喜欢的行为模式</a></li> 
 <li>第 214 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-214.md">你的地图是错的</a></li> 
 <li>第 213 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-213.md">知识孤岛，知识软件</a></li> 
 <li>第 212 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-212.md">人生不短</a></li> 
</ul> 
<p>六月</p> 
<ul> 
 <li>第 211 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-211.md">虚拟商品可以拉动 GDP</a></li> 
 <li>第 210 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-210.md">为什么软件变得复杂</a></li> 
 <li>第 209 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-209.md">程序员是怎样的人</a></li> 
</ul> 
<p>五月</p> 
<ul> 
 <li>第 208 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-208.md">晋升制度的问题</a></li> 
 <li>第 207 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-207.md">汽车行业的顶峰可能过去了</a></li> 
 <li>第 206 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-206.md">如何走出失望和怀疑</a></li> 
 <li>第 205 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-205.md">互联网风口过去了吗？</a></li> 
</ul> 
<p><strong>四月</strong></p> 
<ul> 
 <li>第 204 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-204.md">如何度过疫情、裁员、还有战争</a></li> 
 <li>第 203 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-203.md">英国的名校签证，伯克利的计算机教育</a></li> 
 <li>第 202 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-202.md">三个有启发的学习方法</a></li> 
 <li>第 201 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-201.md">中国需要成立半导体部</a></li> 
</ul> 
<p><strong>三月</strong></p> 
<ul> 
 <li>第 200 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-200.md">低期望，多尝试</a></li> 
 <li>第 199 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-199.md">俄罗斯的 HTTPS 证书问题</a></li> 
 <li>第 198 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-198.md">美国制造是否可能</a></li> 
 <li>第 197 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-197.md">如果这个世界有快乐机</a></li> 
</ul> 
<p><strong>二月</strong></p> 
<ul> 
 <li>第 196 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-196.md">掌机的未来</a></li> 
 <li>第 195 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-195.md">你做过不在乎结果的项目吗？</a></li> 
 <li>第 194 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-194.md">悲观者正确，乐观者成功</a></li> 
</ul> 
<p><strong>一月</strong></p> 
<ul> 
 <li>第 193 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-193.md">前端与后端，谁更难？</a></li> 
 <li>第 192 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-192.md">最大的机会来自新技术</a></li> 
 <li>第 191 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-191.md">一个程序员的财务独立之路</a></li> 
</ul> 
<h2>2021</h2> 
<p><strong>十二月</strong></p> 
<ul> 
 <li>第 190 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-190.md">产品化思维</a></li> 
 <li>第 189 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-189.md">下一个内卷的行业</a></li> 
 <li>第 188 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-188.md">音乐是反社交</a></li> 
 <li>第 187 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-187.md">元宇宙会成功吗</a></li> 
 <li>第 186 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-186.md">低纬度，高海拔，气候优势</a></li> 
</ul> 
<p><strong>十一月</strong></p> 
<ul> 
 <li>第 185 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-185.md">美国宪法拍卖，一个区块链案例</a></li> 
 <li>第 184 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-184.md">政府的存储需求有多大？</a></li> 
 <li>第 183 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-183.md">腾讯的员工退休福利</a></li> 
 <li>第 182 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-182.md">新人优惠的风险</a></li> 
</ul> 
<p><strong>十月</strong></p> 
<ul> 
 <li>第 181 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-181.md">移动支付应该怎么设计？</a></li> 
 <li>第 180 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-180.md">你想住在中国哪里？</a></li> 
 <li>第 179 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-179.md">AR 技术的打开方式</a></li> 
 <li>第 178 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-178.md">家庭太阳能发电的春天</a></li> 
</ul> 
<p><strong>九月</strong></p> 
<ul> 
 <li>第 177 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-177.md">iPad 的真正用途</a></li> 
 <li>第 176 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-176.md">中国法院承认 GPL 吗？</a></li> 
 <li>第 175 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-175.md">知识广度 vs 知识深度</a></li> 
 <li>第 174 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-174.md">全能程序员 vs 特长程序员</a></li> 
</ul> 
<p><strong>八月</strong></p> 
<ul> 
 <li>第 173 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-173.md">网络收音机的设计</a></li> 
 <li>第 172 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-172.md">我们会死于气候灾难吗？</a></li> 
 <li>第 171 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-171.md">云服务流量有多贵？</a></li> 
 <li>第 170 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-170.md">软件订阅制的胜利</a></li> 
</ul> 
<p><strong>七月</strong></p> 
<ul> 
 <li>第 169 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-169.md">五菱汽车的产品设计</a></li> 
 <li>第 168 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-168.md">游戏《底特律：变人》</a></li> 
 <li>第 167 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-167.md">广告拦截器太过分了</a></li> 
 <li>第 166 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-166.md">视频学习胜过读书吗？</a></li> 
 <li>第 165 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-165.md">全端 App 的时代</a></li> 
</ul> 
<p><strong>六月</strong></p> 
<ul> 
 <li>第 164 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-164.md">培训班 vs 大学，求职成功率比较</a></li> 
 <li>第 163 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-163.md">你的城市有多少张病床？</a></li> 
 <li>第 162 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-162.md">生活就像《吃豆人》游戏</a></li> 
 <li>第 161 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-161.md">再见了，学术硕士</a></li> 
</ul> 
<p><strong>五月</strong></p> 
<ul> 
 <li>第 160 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-160.md">中年码农的危机</a></li> 
 <li>第 159 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-159.md">游戏开发者的年薪</a></li> 
 <li>第 158 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-158.md">内容渠道的贬值</a></li> 
 <li>第 157 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-157.md">KK 给年轻人的建议</a></li> 
</ul> 
<p><strong>四月</strong></p> 
<ul> 
 <li>第 156 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-156.md">显卡缺货与异业竞争</a></li> 
 <li>第 155 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-155.md">数字货币是打破美元霸权的武器吗？</a></li> 
 <li>第 154 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-154.md">1982年的信息社会预言</a></li> 
 <li>第 153 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-153.md">机器翻译是对译者的侮辱吗？</a></li> 
 <li>第 152 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-152.md">从北大到技校</a></li> 
</ul> 
<p><strong>三月</strong></p> 
<ul> 
 <li>第 151 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-151.md">NFT 是什么，听说能赚钱</a></li> 
 <li>第 150 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-150.md">当音乐还是稀缺的时候</a></li> 
 <li>第 149 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-149.md">新能源汽车，谁会是赢家？</a></li> 
 <li>第 148 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-148.md">微增长时代</a></li> 
</ul> 
<p><strong>二月</strong></p> 
<ul> 
 <li>第 147 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-147.md">寻找你愿意忍受的痛苦</a></li> 
 <li>第 146 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-146.md">网课应该怎么上？</a></li> 
 <li>第 145 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-145.md">大家不出门，经济怎么办？</a></li> 
</ul> 
<p><strong>一月</strong></p> 
<ul> 
 <li>第 144 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-144.md">提高收入的根本途径</a></li> 
 <li>第 143 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-143.md">世界尽头与冷酷仙境</a></li> 
 <li>第 142 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-142.md">2020年才是21世纪元年</a></li> 
 <li>第 141 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-141.md">封闭系统的胜利</a></li> 
</ul> 
<h2>2020</h2> 
<p><strong>十二月</strong></p> 
<ul> 
 <li>第 140 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-140.md">印度人的工资是多少？</a></li> 
 <li>第 139 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-139.md">生物学的可怕进展</a></li> 
 <li>第 138 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-138.md">失业难以避免，重构人生规划</a></li> 
 <li>第 137 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-137.md">Slack 被收购，以及企业的技术选型</a></li> 
 <li>第 136 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-136.md">利特伍德奇迹定律</a></li> 
</ul> 
<p><strong>十一月</strong></p> 
<ul> 
 <li>第 135 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-135.md">什么行业适合创业？</a></li> 
 <li>第 134 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-134.md">未来的游戏业比现在大100倍</a></li> 
 <li>第 133 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-133.md">贵州变瑞士，有没有可能？</a></li> 
 <li>第 132 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-132.md">快能力和慢能力</a></li> 
</ul> 
<p><strong>十月</strong></p> 
<ul> 
 <li>第 131 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-131.md">你的头脑是二值逻辑，还是三值逻辑？</a></li> 
 <li>第 130 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-130.md">低龄化的互联网</a></li> 
 <li>第 129 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-129.md">创业的凸函数与凹函数</a></li> 
 <li>第 128 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-128.md">这个社会是否正在变成“赛博朋克”？</a></li> 
</ul> 
<p><strong>九月</strong></p> 
<ul> 
 <li>第 127 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-127.md">未来人人开发软件，几乎没人编码</a></li> 
 <li>第 126 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-126.md">内卷化是什么？</a></li> 
 <li>第 125 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-125.md">数字人民币要取代谁</a></li> 
 <li>第 124 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-124.md">华为如何考核员工</a></li> 
 <li>第 123 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-123.md">互联网公司与湘军的军制</a></li> 
</ul> 
<p><strong>八月</strong></p> 
<ul> 
 <li>第 122 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-122.md">谈谈互联网公司的高估值</a></li> 
 <li>第 121 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-121.md">为什么人类没有越来越闲？</a></li> 
 <li>第 120 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-120.md">只有开放才能打败封锁</a></li> 
 <li>第 119 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-119.md">降雨量和保险博弈</a></li> 
</ul> 
<p><strong>七月</strong></p> 
<ul> 
 <li>第 118 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-118.md">高考志愿怎么填</a></li> 
 <li>第 117 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-117.md">我不想让你记住我的脸</a></li> 
 <li>第 116 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-116.md">世界的未来就是一个火药桶</a></li> 
 <li>第 115 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-115.md">保护你的 DNA，不要泄漏</a></li> 
 <li>第 114 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-114.md">U 盘化生存和 Uber-job</a></li> 
</ul> 
<p><strong>六月</strong></p> 
<ul> 
 <li>第 113 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-113.md">暴力犯罪为什么越来越少？</a></li> 
 <li>第 112 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-112.md">如何培养领导力</a></li> 
 <li>第 111 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-111.md">智能电视的误区</a></li> 
 <li>第 110 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-110.md">如果不能去美国上市</a></li> 
</ul> 
<p><strong>五月</strong></p> 
<ul> 
 <li>第 109 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-109.md">播客的价值</a></li> 
 <li>第 108 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-108.md">阵地战与奇袭战</a></li> 
 <li>第 107 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-107.md">致富与杠杆</a></li> 
 <li>第 106 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-106.md">数字游民</a></li> 
</ul> 
<p><strong>四月</strong></p> 
<ul> 
 <li>第 105 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-105.md">线上行业会赢</a></li> 
 <li>第 104 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-104.md">语音合成的用途</a></li> 
 <li>第 103 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-103.md">信息的半衰期</a></li> 
 <li>第 102 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-102.md">工作热情从何而来？</a></li> 
 <li>第 101 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-101.md">互联网不再稀缺</a></li> 
</ul> 
<p><strong>三月</strong></p> 
<ul> 
 <li>第 100 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-100.md">零利率时代</a></li> 
 <li>第 99 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-99.md">疫情导致的研究生扩招</a></li> 
 <li>第 98 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-98.md">怎样清晰地表达自己的观点？</a></li> 
 <li>第 97 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-97.md">那些为了考试拼搏的年轻人</a></li> 
</ul> 
<p><strong>二月</strong></p> 
<ul> 
 <li>第 96 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-96.md">在线教育不等于录制视频</a></li> 
 <li>第 95 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-95.md">远程办公暴露冗余岗位</a></li> 
 <li>第 94 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-94.md">既懂得制造，又懂得销售</a></li> 
 <li>第 93 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-93.md">漫游类的游戏，将会越来越多</a></li> 
</ul> 
<p><strong>一月</strong></p> 
<ul> 
 <li>第 92 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-92.md">听觉暂留</a></li> 
 <li>第 91 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-91.md">印度孟买的房价，为什么跟北京一样高？</a></li> 
 <li>第 90 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-90.md">管人和技术是两种不同的能力</a></li> 
 <li>第 89 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-89.md">不下雨的地方，不要去卖伞</a></li> 
</ul> 
<h2>2019</h2> 
<p><strong>十二月</strong></p> 
<ul> 
 <li>第 88 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-88.md">如果你遇到一条蛇</a></li> 
 <li>第 87 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-87.md">新人要为团队写文档</a></li> 
 <li>第 86 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-86.md">千万不要当完美主义者</a></li> 
 <li>第 85 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-85.md">美国为什么不是乱哄哄？</a></li> 
</ul> 
<p><strong>十一月</strong></p> 
<ul> 
 <li>第 84 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-84.md">一次性工作招聘，用完你就丢</a></li> 
 <li>第 83 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-83.md">技术解决不了人类的对立</a></li> 
 <li>第 82 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-82.md">就业要选发展最快的行业</a></li> 
 <li>第 81 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-81.md">子辈能大幅超越父辈吗？</a></li> 
 <li>第 80 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-80.md">企业软件创业，为什么在中国不容易成功？</a></li> 
</ul> 
<p><strong>十月</strong></p> 
<ul> 
 <li>第 79 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-79.md">我们的生活越来越依赖机器</a></li> 
 <li>第 78 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-78.md">下一个风口是什么行业？</a></li> 
 <li>第 77 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-77.md">韩剧《阿尔布拉罕宫的回忆》</a></li> 
 <li>第 76 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-76.md">任何爱好都能变成职业，只要你会拍视频</a></li> 
</ul> 
<p><strong>九月</strong></p> 
<ul> 
 <li>第 75 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-75.md">电子取代机械，对就业有何影响？</a></li> 
 <li>第 74 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-74.md">信息的商业模式为什么不是收费</a></li> 
 <li>第 73 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-73.md">数据统计的威力</a></li> 
 <li>第 72 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-72.md">当代人不再有手稿</a></li> 
</ul> 
<p><strong>八月</strong></p> 
<ul> 
 <li>第 71 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-71.md">名校毕业，不容易创业</a></li> 
 <li>第 70 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-70.md">世界进入负利率时代，这意味什么</a></li> 
 <li>第 69 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-69.md">做得好 vs 做得快</a></li> 
 <li>第 68 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-68.md">关注能力的成长，胜于关注待遇</a></li> 
 <li>第 67 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-67.md">复杂系统无法维护，侏罗纪公园必定失败</a></li> 
</ul> 
<p><strong>七月</strong></p> 
<ul> 
 <li>第 66 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-66.md">创业不是零和游戏</a></li> 
 <li>第 65 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-65.md">周刊开设“谁在招人”的招聘服务</a></li> 
 <li>第 64 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-64.md">新人如何进入互联网行业？</a></li> 
 <li>第 63 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-63.md">互联网市场的集中化趋势</a></li> 
</ul> 
<p><strong>六月</strong></p> 
<ul> 
 <li>第 62 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-62.md">日本电影《编舟记》</a></li> 
 <li>第 61 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-61.md">转行前端越来越难</a></li> 
 <li>第 60 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-60.md">一本介绍人类起源的学术自传</a></li> 
 <li>第 59 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-59.md">互联网时代很难交朋友</a></li> 
</ul> 
<p><strong>五月</strong></p> 
<ul> 
 <li>第 58 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-58.md">软件推广可以像化妆品那样吗？</a></li> 
 <li>第 57 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-57.md">分享知识是否违反人性？</a></li> 
 <li>第 56 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-56.md">文科生为什么不容易就业？</a></li> 
 <li>第 55 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-55.md">不是反对 996，而要提倡远程办公</a></li> 
 <li>第 54 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-54.md">可扩展性最好的活动</a></li> 
</ul> 
<p><strong>四月</strong></p> 
<ul> 
 <li>第 53 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-53.md">DNA 相亲会</a></li> 
 <li>第 52 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-52.md">人脸识别与课堂监控</a></li> 
 <li>第 51 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-51.md">为什么过去10年，笔记本硬件发展缓慢？</a></li> 
 <li>第 50 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-50.md">"时间换收入"是一个陷阱</a></li> 
</ul> 
<p><strong>三月</strong></p> 
<ul> 
 <li>第 49 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-49.md">学会有所不为</a></li> 
 <li>第 48 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-48.md">著名程序员 Bill Joy 的人生启示</a></li> 
 <li>第 47 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-47.md">吃播算不算正式工作？</a></li> 
 <li>第 46 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-46.md">推荐算法的副作用</a></li> 
 <li>第 45 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-45.md">阿西莫夫回忆录《人生舞台》</a></li> 
</ul> 
<p><strong>二月</strong></p> 
<ul> 
 <li>第 44 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-44.md">高校“唯论文”导向的后果</a></li> 
 <li>第 43 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-43.md">一篇好玩的论文</a></li> 
 <li>第 42 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-42.md">什么领域，你可以做到出类拔萃？</a></li> 
</ul> 
<p><strong>一月</strong></p> 
<ul> 
 <li>第 41 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-41.md">如何看待互联网公司裁员？</a></li> 
 <li>第 40 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-40.md">手动咖啡不属于电子时代</a></li> 
 <li>第 39 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-39.md">苹果公司的两封公开信</a></li> 
 <li>第 38 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-38.md">使用越方便，技术实现越复杂</a></li> 
</ul> 
<h2>2018</h2> 
<p><strong>十二月</strong></p> 
<ul> 
 <li>第 37 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-37.md">小说家的时代，永远地过去了</a></li> 
 <li>第 36 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-36.md">程序员将来会不会过剩？</a></li> 
 <li>第 35 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-35.md">“一人份”的服务越来越多</a></li> 
 <li>第 34 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-34.md">身份证的最终解决方案：人体植入芯片</a></li> 
</ul> 
<p><strong>十一月</strong></p> 
<ul> 
 <li>第 33 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-33.md">现场投票不如网络投票</a></li> 
 <li>第 32 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-32.md">砌砖头的三种角度</a></li> 
 <li>第 31 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-31.md">程序员的退休信号</a></li> 
 <li>第 30 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-30.md">为什么谷歌做不好社交软件？</a></li> 
 <li>第 29 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-29.md">公司的组织架构，决定了软件的复杂性</a></li> 
</ul> 
<p><strong>十月</strong></p> 
<ul> 
 <li>第 28 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-28.md">软件开发是真正的知识吗？</a></li> 
 <li>第 27 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-27.md">乔布斯的“热情假设”对不对？</a></li> 
 <li>第 26 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-26.md">DHH 的新书《工作何必疯狂》</a></li> 
 <li>第 25 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-25.md">安卓手机十周年的感想</a></li> 
</ul> 
<p><strong>九月</strong></p> 
<ul> 
 <li>第 24 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-24.md">新人进入软件行业的建议</a></li> 
 <li>第 23 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-23.md">统计学上的人生最大决定因素</a></li> 
 <li>第 22 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-22.md">猴子自拍，版权归谁</a></li> 
 <li>第 21 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-21.md">人生的水平运动和垂直运动</a></li> 
</ul> 
<p><strong>八月</strong></p> 
<ul> 
 <li>第 20 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-20.md">不读大学的替代方案</a></li> 
 <li>第 19 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-19.md">电影《头号玩家》描绘未来的虚拟世界</a></li> 
 <li>第 18 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-18.md">无人机攻击，难以防范</a></li> 
 <li>第 17 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-17.md">全球变暖，在劫难逃</a></li> 
 <li>第 16 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-16.md">科技改变死亡的模式</a></li> 
</ul> 
<p><strong>七月</strong></p> 
<ul> 
 <li>第 15 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-15.md">周刊的内容从何而来？</a></li> 
 <li>第 14 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-14.md">马斯克的人生才是梦想家的人生</a></li> 
 <li>第 13 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-13.md">周刊为什么只谈技术？</a></li> 
 <li>第 12 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-12.md">人口老龄化，养老金不够</a></li> 
</ul> 
<p><strong>六月</strong></p> 
<ul> 
 <li>第 11 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-11.md">编程语言越发复杂</a></li> 
 <li>第 10 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-10.md">30岁以后谨慎转行前端</a></li> 
 <li>第 9 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-9.md">身份证可以植入人体</a></li> 
 <li>第 8 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-8.md">实验室会生产人吗？</a></li> 
 <li>第 7 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-7.md">垃圾填埋不是解决办法</a></li> 
</ul> 
<p><strong>五月</strong></p> 
<ul> 
 <li>第 6 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-6.md">未来还需要苦学外语吗？</a></li> 
 <li>第 5 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-5.md">互联网时代，做一个好人是划算的</a></li> 
 <li>第 4 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-4.md">马克思研究的问题</a></li> 
 <li>第 3 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-3.md">周刊的风格</a></li> 
</ul> 
<p><strong>四月</strong></p> 
<ul> 
 <li>第 2 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-2.md">为什么写周刊？</a></li> 
 <li>第 1 期：<a href="https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-1.md">创刊号</a></li> 
</ul></description>
</item>
<item>
<title>microsoft/retina</title>
<link>https://github.com/microsoft/retina</link>
<description>Content Length: 8176

<p>eBPF distributed networking observability tool for Kubernetes</p><hr /><h1>Retina</h1> 
<p><a href="https://github.com/codespaces/new?hide_repo_select=true&amp;ref=main&amp;repo=746962176"><img alt="Open in GitHub Codespaces" src="https://github.com/codespaces/badge.svg?sanitize=true" /></a></p> 
<p><a href="https://goreportcard.com/report/github.com/microsoft/retina"><img alt="goreport" src="https://goreportcard.com/badge/github.com/microsoft/retina" /></a> <img alt="GitHub release" src="https://img.shields.io/github/v/release/microsoft/retina.svg?sanitize=true" /> <a href="https://godoc.org/github.com/microsoft/retina"><img alt="retina-publish" src="https://godoc.org/github.com/microsoft/retina?status.svg?sanitize=true" /></a> <img alt="license" src="https://img.shields.io/badge/license-MIT-blue?link=https%3A%2F%2Fgithub.com%2Fmicrosoft%2Fretina%2Fblob%2Fmain%2FLICENSE" /></p> 
<p><a href="https://github.com/microsoft/retina/actions/workflows/test.yaml?query=branch%3Amain"><img alt="retina-test" src="https://github.com/microsoft/retina/actions/workflows/test.yaml/badge.svg?branch=main" /></a> <a href="https://retina.sh/"><img alt="retinash" src="https://github.com/microsoft/retina/actions/workflows/docs.yaml/badge.svg?branch=main" /></a> <a href="https://github.com/microsoft/retina/actions/workflows/images.yaml?query=branch%3Amain"><img alt="retina-publish" src="https://github.com/microsoft/retina/actions/workflows/images.yaml/badge.svg?branch=main" /></a> <img alt="retina-codeql-img" src="https://github.com/microsoft/retina/actions/workflows/codeql.yaml/badge.svg?branch=main" /> <img alt="retina-golangci-lint-img" src="https://github.com/microsoft/retina/actions/workflows/golangci-lint.yaml/badge.svg?branch=main" /></p> 
<h2>Overview</h2> 
<p>Retina is a cloud-agnostic, open-source <strong>Kubernetes network observability platform</strong> that provides a <strong>centralized hub for monitoring application health, network health, and security</strong>. It provides actionable insights to cluster network administrators, cluster security administrators, and DevOps engineers navigating DevOps, SecOps, and compliance use cases.</p> 
<p>Retina <strong>collects customizable telemetry</strong>, which can be exported to <strong>multiple storage options</strong> (such as Prometheus, Azure Monitor, and other vendors) and <strong>visualized in a variety of ways</strong> (like Grafana, Azure Log Analytics, and other vendors).</p> 
<h2>Features</h2> 
<ul> 
 <li><strong><a href="https://ebpf.io/what-is-ebpf#what-is-ebpf">eBPF</a>-based</strong> Network Observability platform for Kubernetes workloads.</li> 
 <li><strong>On-Demand</strong> and <strong>Configurable</strong>.</li> 
 <li>Actionable, industry-standard <strong>Prometheus metrics</strong>.</li> 
 <li>Streamlined <strong>Packet Captures</strong> for deep dives.</li> 
 <li><strong>Cloud-agnostic</strong>, supporting multiple OS (like Linux, Windows, Azure Linux).</li> 
</ul> 
<h2>Why Retina?</h2> 
<p>Retina lets you <strong>investigate network issues on-demand</strong> and <strong>continuously monitor your clusters</strong>. For scenarios where Retina shines, see the intro docs <a href="https://retina.sh/docs/intro">here</a></p> 
<h2>Documentation</h2> 
<p>See <a href="http://retina.sh">retina.sh</a> for documentation and examples.</p> 
<h2>Capabilities</h2> 
<p>Retina has two major features:</p> 
<ul> 
 <li><a href="https://retina.sh/docs/metrics/modes">Metrics</a></li> 
 <li><a href="https://retina.sh/docs/captures">Captures</a></li> 
</ul> 
<h3>Metrics Quick Install Guide</h3> 
<p>Prerequisites: Go, Helm</p> 
<ol> 
 <li> <p>Clone the repo, then install Retina on your Kubernetes cluster</p> <pre><code class="language-bash">make helm-install
</code></pre> </li> 
 <li> <p>Follow steps in <a href="https://retina.sh/docs/installation/prometheus-unmanaged">Using Prometheus and Grafana</a> to set up metrics collection and visualization.</p> </li> 
</ol> 
<h3>Captures Quick Start Guide</h3> 
<h4>Captures via CLI</h4> 
<p>Currently, Retina CLI only supports Linux.</p> 
<ul> 
 <li> <p>Option 1: Download from Release</p> <p>Download <code>kubectl-retina</code> from the latest <a href="https://github.com/microsoft/retina/releases">Retina release</a>. Feel free to move the binary to <code>/usr/local/bin/</code>, or add it to your <code>PATH</code> otherwise.</p> </li> 
 <li> <p>Option 2: Build from source</p> <p>Requirements:</p> 
  <ul> 
   <li>go 1.21 or newer</li> 
   <li>GNU make</li> 
  </ul> <p>Clone the Retina repo and execute:</p> <pre><code class="language-shell">make install-kubectl-retina
</code></pre> </li> 
</ul> 
<p>Execute Retina:</p> 
<pre><code class="language-shell">kubectl-retina capture create --help
</code></pre> 
<p>For further CLI documentation, see <a href="https://retina.sh/docs/captures/cli">Capture with Retina CLI</a>.</p> 
<h4>Captures via CRD</h4> 
<p>Prerequisites: Go, Helm</p> 
<ol> 
 <li> <p>Clone the repo, then install Retina with Capture operator support on your Kubernetes cluster</p> <pre><code class="language-bash">make helm-install-with-operator
</code></pre> </li> 
 <li> <p>Follow steps in <a href="https://retina.sh/docs/captures/#option-2-capture-crd-custom-resource-definition">Capture CRD</a> for documentation of the CRD and examples for setting up Captures.</p> </li> 
</ol> 
<h2>Contributing</h2> 
<p>This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit <a href="https://cla.opensource.microsoft.com">https://cla.opensource.microsoft.com</a>.</p> 
<p>When you submit a pull request, a CLA bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.</p> 
<p>This project has adopted the <a href="https://opensource.microsoft.com/codeofconduct/">Microsoft Open Source Code of Conduct</a>. For more information see the <a href="https://opensource.microsoft.com/codeofconduct/faq/">Code of Conduct FAQ</a> or contact <a href="mailto:opencode@microsoft.com">opencode@microsoft.com</a> with any additional questions or comments.</p> 
<p><a href="https://retina.sh/docs/contributing">Read more about how to begin contributing here.</a></p> 
<h3>Office Hours and Community Meetings</h3> 
<p>We host a periodic open community meeting. <a href="https://retina.sh/docs/contributing/#office-hours-and-community-meetings">Find the details here.</a></p> 
<h2>Trademarks</h2> 
<p>This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow <a href="https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general">Microsoft's Trademark &amp; Brand Guidelines</a>. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party's policies.</p> 
<h2>License</h2> 
<p>See the <a href="https://raw.githubusercontent.com/microsoft/retina/main/LICENSE">LICENSE</a>.</p> 
<h2>Code of Conduct</h2> 
<p>This project has adopted the <a href="https://opensource.microsoft.com/codeofconduct/">Microsoft Open Source Code of Conduct</a>. For more information see the <a href="https://opensource.microsoft.com/codeofconduct/faq/">Code of Conduct FAQ</a> or contact <a href="mailto:opencode@microsoft.com">opencode@microsoft.com</a> with any additional questions or comments.</p> 
<h2>Contact</h2> 
<p>For bugs or feature requests, open an <a href="https://github.com/microsoft/retina/issues">issue</a>.<br /> For security or vulnerability concerns, see <a href="https://raw.githubusercontent.com/microsoft/retina/main/SECURITY.md">SECURITY.md</a>.<br /> For other communication, contact the maintainers at <a href="mailto:retina@microsoft.com">retina@microsoft.com</a></p></description>
</item>
<item>
<title>unit-mesh/auto-dev</title>
<link>https://github.com/unit-mesh/auto-dev</link>
<description>Content Length: 9922

<p>🧙‍AutoDev: The AI-powered coding wizard with multilingual support 🌐, auto code generation 🏗️, and a helpful bug-slaying assistant 🐞! Customizable prompts 🎨 and a magic Auto Dev/Testing/Document/Agent feature 🧪 included! 🚀</p><hr /><p align="center"> <img alt="logo" height="160px" src="https://raw.githubusercontent.com/unit-mesh/auto-dev/master/plugin/src/main/resources/META-INF/pluginIcon.svg?sanitize=true" width="160px" /> </p> 
<h1 align="center">AutoDev</h1> 
<p align="center"> <a href="https://codecov.io/gh/unit-mesh/auto-dev"> <img src="https://codecov.io/gh/unit-mesh/auto-dev/graph/badge.svg?token=5RzcndjFPx" /> </a> <a href="https://github.com/unit-mesh/auto-dev/actions/workflows/build.yml"> <img alt="Build" src="https://github.com/unit-mesh/auto-dev/actions/workflows/build.yml/badge.svg?sanitize=true" /> </a> <a href="https://plugins.jetbrains.com/plugin/21520-autodev"> <img alt="Version" src="https://img.shields.io/jetbrains/plugin/v/21520-autodev.svg?sanitize=true" /> </a> <a href="https://plugins.jetbrains.com/plugin/21520-autodev"> <img alt="Downloads" src="https://img.shields.io/jetbrains/plugin/d/21520-autodev.svg?sanitize=true" /> </a> <a href="https://github.com/unit-mesh/chocolate-factory"> <img alt="Powered By" src="https://img.shields.io/badge/powered_by-chocolate_factory-blue?logo=kotlin&amp;logoColor=fff" /> </a> </p> 
<blockquote> 
 <p>🧙‍AutoDev: The AI-powered coding wizard with multilingual support 🌐, auto code generation 🏗️, and a helpful bug-slaying assistant 🐞! Customizable prompts 🎨 and a magic Auto Dev/Testing/Document/Agent feature 🧪 included! 🚀</p> 
</blockquote> 
<p><a href="https://ide.unitmesh.cc/quick-start">Quick Start →</a></p> 
<p><a href="https://ide.unitmesh.cc/devins">DevIns — AI Agent language for AutoDevelopment →</a> which you can use follow syntax as bridges for Human-AI-IDE:</p> 
<pre><code>/write:src/main/java/cc/unitmesh/Controller.java#L1-L12

```java
public class Controller {
    public void method() {
        System.out.println("Hello, World!");
    }
}
```
</code></pre> 
<p>With built-in syntax highlighting and auto-completion, you can use DevIns as next-generation AI Agent language.</p> 
<h2>AutoDev Architecture</h2> 
<p>Here is the AutoDev architecture:</p> 
<p><img alt="" src="https://raw.githubusercontent.com/unit-mesh/auto-dev/master/docs/autodev-arch.svg?sanitize=true" /></p> 
<h2>AutoDev Feature Overview</h2> 
<p align="center"> <img alt="Overview" height="100%" src="https://raw.githubusercontent.com/unit-mesh/auto-dev/master/docs/autodev-overview.svg?sanitize=true" width="100%" /> </p> 
<p>Features:</p> 
<ul> 
 <li>Languages support: Java, Kotlin, JavaScript/TypeScript, Rust, Python, Golang, C/C++/OC, or others...</li> 
 <li>Auto development mode. 
  <ul> 
   <li>AutoCRUD(Spring framework）. With DevTi Protocol (like <code>devti://story/github/1102</code>) will auto generate Model-Controller-Service-Repository code.</li> 
   <li>AutoSQL. Context-aware SQL generation.</li> 
   <li>AutoPage (React). Context-aware Web Page generation.</li> 
   <li>AutoArkUI (Mobile UI framework). Auto generate HarmonyOS ArkUI code.</li> 
   <li>AutoTesting. create unit test intention, auto run unit test and try to fix test.</li> 
   <li>AutoDocument. Auto generate document.</li> 
  </ul> </li> 
 <li>Copilot mode 
  <ul> 
   <li>AutoDev will help you find bug, explain code, trace exception, generate commits, and more.</li> 
   <li>Pattern specific. Based on your code context like (Controller, Service <code>import</code>), AutoDev will suggest the best code to you.</li> 
   <li>Related code. Based on recent file changes, AutoDev will call calculate similar chunk to generate the best code.</li> 
  </ul> </li> 
 <li>Chat mode 
  <ul> 
   <li>Chat with AI.</li> 
   <li>Chat with selection code.</li> 
   <li>Chat with code context-aware (To be implemented).</li> 
  </ul> </li> 
 <li>Customize. 
  <ul> 
   <li>Custom specification of prompt. For example, Controller, Service, Repository, Model, etc.</li> 
   <li>Custom intention action. You can add your own intention action.</li> 
   <li>Custom LLM Server. You can customize your LLM Server in <code>Settings</code> -&gt; <code>Tools</code> -&gt; <code>AutoDev</code></li> 
   <li>Custom Living documentation.</li> 
   <li>Team prompts. Customize your team prompts in codebase, and distribute to your team.</li> 
   <li>Custom AI Agent. You can integrate your own AI Agent into AutoDev.</li> 
   <li>Prompt override. You can override AutoDev's prompt in your codebase.</li> 
  </ul> </li> 
 <li>Infrastructure / DevOps 
  <ul> 
   <li>CI/CD support. AutoDev will auto generate CI/CD config file.</li> 
   <li>Dockerfile support. AutoDev will auto generate Dockerfile.</li> 
  </ul> </li> 
 <li>DevIns language 
  <ul> 
   <li>Executable AI Agent language.</li> 
  </ul> </li> 
 <li>Built-in LLM Fine-tune 
  <ul> 
   <li><a href="https://github.com/unit-mesh/unit-eval">UnitEval</a> evaluate llm result</li> 
   <li><a href="https://github.com/unit-mesh/unit-gen">UnitGen</a> generate code-llm fine-tune data.</li> 
  </ul> </li> 
</ul> 
<p>AutoDev fine-tune models:</p> 
<p>download from <a href="https://huggingface.co/unit-mesh">HuggingFace</a></p> 
<table> 
 <thead> 
  <tr> 
   <th>name</th> 
   <th>model download (HuggingFace)</th> 
   <th>finetune Notebook</th> 
   <th>model download (OpenBayes)</th> 
  </tr> 
 </thead> 
 <tbody> 
  <tr> 
   <td>DeepSeek 6.7B</td> 
   <td><a href="https://huggingface.co/unit-mesh/autodev-coder">AutoDev Coder</a></td> 
   <td><a href="https://raw.githubusercontent.com/unit-mesh/auto-dev/master/finetunes/deepseek">finetune.ipynb</a></td> 
   <td><a href="https://openbayes.com/console/phodal/models/rCmer1KQSgp/9/overview">AutoDev Coder</a></td> 
  </tr> 
 </tbody> 
</table> 
<h2>Language Features</h2> 
<h3>Language Support</h3> 
<p>We follow <a href="https://github.com/phodal/chapi">Chapi</a> AST analysis engine for language support tier.</p> 
<table> 
 <thead> 
  <tr> 
   <th>Features</th> 
   <th>Java</th> 
   <th>Python</th> 
   <th>Go</th> 
   <th>Kotlin</th> 
   <th>JS/TS</th> 
   <th>C/C++</th> 
   <th>C#</th> 
   <th>Scala</th> 
   <th>Rust</th> 
   <th>ArkTS</th> 
  </tr> 
 </thead> 
 <tbody> 
  <tr> 
   <td>Chat Language Context</td> 
   <td>✅</td> 
   <td>✅</td> 
   <td>✅</td> 
   <td>✅</td> 
   <td>✅</td> 
   <td>✅</td> 
   <td></td> 
   <td></td> 
   <td>✅</td> 
   <td>✅</td> 
  </tr> 
  <tr> 
   <td>Structure AST</td> 
   <td>✅</td> 
   <td></td> 
   <td>✅</td> 
   <td>✅</td> 
   <td>✅</td> 
   <td>✅</td> 
   <td></td> 
   <td></td> 
   <td></td> 
   <td></td> 
  </tr> 
  <tr> 
   <td>Doc Generation</td> 
   <td>✅</td> 
   <td>✅</td> 
   <td>✅</td> 
   <td>✅</td> 
   <td>✅</td> 
   <td></td> 
   <td></td> 
   <td></td> 
   <td>✅</td> 
   <td>✅</td> 
  </tr> 
  <tr> 
   <td>Precision Test Generation</td> 
   <td>✅</td> 
   <td>✅</td> 
   <td>✅</td> 
   <td>✅</td> 
   <td>✅</td> 
   <td></td> 
   <td></td> 
   <td></td> 
   <td>✅</td> 
   <td></td> 
  </tr> 
  <tr> 
   <td>Precision Code Generation</td> 
   <td>✅</td> 
   <td></td> 
   <td></td> 
   <td>✅</td> 
   <td></td> 
   <td></td> 
   <td></td> 
   <td></td> 
   <td></td> 
   <td></td> 
  </tr> 
  <tr> 
   <td>AutoCRUD</td> 
   <td>✅</td> 
   <td></td> 
   <td></td> 
   <td>✅</td> 
   <td></td> 
   <td></td> 
   <td></td> 
   <td></td> 
   <td></td> 
   <td></td> 
  </tr> 
 </tbody> 
</table> 
<h3>Extensions</h3> 
<p>see in <a href="https://raw.githubusercontent.com/unit-mesh/auto-dev/master/exts">exts</a></p> 
<h2>Demo</h2> 
<p>DevIns Language demo (Bilibili) - 中文</p> 
<p><a href="https://www.bilibili.com/video/BV12H4y1W7sE/"><img alt="Watch the video" src="https://img.youtube.com/vi/gVBTBdFV5hA/sddefault.jpg" /></a></p> 
<p>Video demo (YouTube) — English</p> 
<p><a href="https://youtu.be/gVBTBdFV5hA"><img alt="Watch the video" src="https://img.youtube.com/vi/gVBTBdFV5hA/sddefault.jpg" /></a></p> 
<p>Video demo (Bilibili) - 中文</p> 
<p><a href="https://www.bilibili.com/video/BV1yV4y1i74c/"><img alt="Watch the video" src="https://img.youtube.com/vi/gVBTBdFV5hA/sddefault.jpg" /></a></p> 
<h2>Useful Links</h2> 
<ul> 
 <li><a href="https://github.com/thakkarparth007/copilot-explorer">Copilot-Explorer</a> Hacky repo to see what the Copilot extension sends to the server.</li> 
 <li><a href="https://github.com/saschaschramm/github-copilot">GitHub Copilot</a> a small part of Copilot Performance logs.</li> 
 <li><a href="https://github.com/mengjian-github/copilot-analysis">花了大半个月，我终于逆向分析了Github Copilot</a></li> 
</ul> 
<h2>Who is using AutoDev?</h2> 
<p>Welcome to add your company here.</p> 
<ul> 
 <li>Thoughtworks, a leading technology consultancy.</li> 
</ul> 
<h2>License</h2> 
<ul> 
 <li>ChatUI based on: <a href="https://github.com/Cspeisman/chatgpt-intellij-plugin">https://github.com/Cspeisman/chatgpt-intellij-plugin</a></li> 
 <li>Multiple target inspired by: <a href="https://github.com/intellij-rust/intellij-rust">https://github.com/intellij-rust/intellij-rust</a></li> 
 <li>SimilarFile inspired by: JetBrains and GitHub Copilot</li> 
 <li>DevIn Language refs on <a href="https://github.com/JetBrains/intellij-community/tree/master/platform/markdown-utils">JetBrains' Markdown Util</a>, which is licensed under the Apache 2.0 license.</li> 
</ul> 
<p><strong>Known License issues</strong>: JetBrain plugin development is no walk in the park! Oops, we cheekily borrowed some code from the JetBrains Community version and the super cool JetBrains AI Assistant plugin in our codebase. But fret not, we are working our magic to clean it up diligently! 🧙‍♂️✨.</p> 
<p>Those codes will be removed in the future, you can check it in <code>src/main/kotlin/com/intellij/temporary</code>, if you want to use this plugin in your company, please remove those codes to avoid any legal issues.</p> 
<p>This code is distributed under the MPL 2.0 license. See <code>LICENSE</code> in this directory.</p></description>
</item>
<item>
<title>dotnet-smartcomponents/smartcomponents</title>
<link>https://github.com/dotnet-smartcomponents/smartcomponents</link>
<description>Content Length: 7117

<p>Experimental, end-to-end AI features for .NET apps</p><hr /><h1>Smart Components</h1> 
<p>Smart Components lets you <strong>add genuinely useful AI-powered features to your .NET apps quickly, easily, and without risking wasted effort.</strong></p> 
<p>You don't have to spend weeks of dev time redesigning your UX or researching machine learning and prompt engineering. Smart Components are prebuilt end-to-end AI features that you can drop into your existing UIs to upgrade them, truly making your app more productive for your end users.</p> 
<p>This is an experiment from the .NET team, and is initially available for <strong>ASP.NET Core 6.0 and later</strong> with either:</p> 
<ul> 
 <li><strong>Blazor</strong> (see: <a href="https://raw.githubusercontent.com/dotnet-smartcomponents/smartcomponents/main/docs/getting-started-blazor.md">Getting started with Smart Controls and Blazor</a>)</li> 
 <li><strong>MVC / Razor Pages</strong> (see: <a href="https://raw.githubusercontent.com/dotnet-smartcomponents/smartcomponents/main/docs/getting-started-mvc-razor-pages.md">Getting started with Smart Controls and MVC/Razor Pages</a>)</li> 
</ul> 
<p>We may add support for other UI tech (e.g., native apps) later, depending on feedback.</p> 
<h2>What's included</h2> 
<p>The set of components and features may expand over time. Currently, Smart Components includes:</p> 
<h3>Smart Paste</h3> 
<p>A button that fills out forms automatically using data from the user's clipboard. You can use this with any existing form in your web app. This helps users add data from external sources without re-typing.</p> 
<p><img alt="Screen capture of Smart Paste feature" src="https://raw.githubusercontent.com/dotnet-smartcomponents/smartcomponents/main/docs/images/smart-paste-address.gif" /></p> 
<p>Learn more: <a href="https://raw.githubusercontent.com/dotnet-smartcomponents/smartcomponents/main/docs/smart-paste.md">Smart Paste docs</a></p> 
<h3>Smart TextArea</h3> 
<p>An intelligent upgrade to the traditional textarea. You can configure how it should autocomplete whole sentences using your own preferred tone, policies, URLs, and so on. This helps users type faster and not have to remember URLs etc.</p> 
<p><img alt="Screen capture of Smart TextArea feature" src="https://raw.githubusercontent.com/dotnet-smartcomponents/smartcomponents/main/docs/images/smart-textarea-hr.gif" /></p> 
<p>Learn more: <a href="https://raw.githubusercontent.com/dotnet-smartcomponents/smartcomponents/main/docs/smart-textarea.md">Smart TextArea docs</a></p> 
<h3>Smart ComboBox</h3> 
<p>Upgrades the traditional combobox by making suggestions based on semantic matching. This helps users find what they're looking for.</p> 
<p><img alt="Screen capture of Smart ComboBox feature" src="https://raw.githubusercontent.com/dotnet-smartcomponents/smartcomponents/main/docs/images/smart-combobox-expenses.gif" /></p> 
<p>Learn more: <a href="https://raw.githubusercontent.com/dotnet-smartcomponents/smartcomponents/main/docs/smart-combobox.md">Smart ComboBox docs</a></p> 
<h3>Local Embeddings</h3> 
<p>Computes the level of semantic similarity between two natural language strings, or finds the closest match from a set of candidates. <strong>This runs entirely locally on your server's CPU</strong>, so doesn't need any external AI service.</p> 
<p>Example: evaluating the semantic similarity between two strings</p> 
<pre><code class="language-cs">var article1 = embedder.Embed("Vacation allowance policy");
var article2 = embedder.Embed("Returning a company vehicle");
var article3 = embedder.Embed("How to get your boss fired");

var searchTerm = embedder.Embed("car");
Console.WriteLine(searchTerm.Similarity(article1)); // Outputs: 0.41
Console.WriteLine(searchTerm.Similarity(article2)); // Outputs: 0.70
Console.WriteLine(searchTerm.Similarity(article3)); // Outputs: 0.38
</code></pre> 
<p>Example: finding closest matches</p> 
<pre><code class="language-cs">// Find closest matches to "ball game"
var candidates = embedder.EmbedRange(["Soccer", "Tennis", "Swimming", "Horse riding", "Golf", "Gymnastics"]);

var closest = LocalEmbedder.FindClosest(
    embedder.Embed("ball game"), candidates, maxResults: 3);

Console.WriteLine(string.Join(", ", closest)); // "Soccer, Golf, Tennis"
</code></pre> 
<p>Unlike the others, this isn't a prebuilt end-to-end UI feature; it's a general capability you can use to power your own features, such as search or <a href="https://en.wikipedia.org/wiki/Prompt_engineering#Retrieval-augmented_generation">retrieval-augmented generation (RAG)</a>.</p> 
<p>Learn more: <a href="https://raw.githubusercontent.com/dotnet-smartcomponents/smartcomponents/main/docs/local-embeddings.md">Local Embeddings docs</a></p> 
<h2>Running the samples</h2> 
<ol> 
 <li> <p>If you don't already have it, install a current <a href="https://dotnet.microsoft.com/download">.NET SDK for Windows, Linux, or Mac</a>.</p> </li> 
 <li> <p>Clone this repo</p> <pre><code>git clone https://github.com/dotnet-smartcomponents/smartcomponents.git
cd smartcomponents
</code></pre> </li> 
 <li> <p>If you want to run the Smart Paste or Smart TextArea samples, edit the <code>RepoSharedConfig.json</code> file at the root of the solution to add your API key. See <a href="https://raw.githubusercontent.com/dotnet-smartcomponents/smartcomponents/main/docs/configure-openai-backend.md">How to configure an OpenAI backend</a>.</p> <p>You can skip this if you only want to run the Smart ComboBox or Local Embeddings samples, since they run entirely locally.</p> </li> 
 <li> <p>Run it</p> <pre><code>cd samples/ExampleBlazorApp
dotnet run
</code></pre> </li> 
</ol> 
<p>Once you're ready to add Smart Components to your own app, see:</p> 
<ul> 
 <li><a href="https://raw.githubusercontent.com/dotnet-smartcomponents/smartcomponents/main/docs/getting-started-blazor.md">Getting started with Smart Controls and Blazor</a></li> 
 <li><a href="https://raw.githubusercontent.com/dotnet-smartcomponents/smartcomponents/main/docs/getting-started-mvc-razor-pages.md">Getting started with Smart Controls and MVC/Razor Pages</a></li> 
</ul> 
<h2>Feedback and support</h2> 
<p>The purpose of this experiment is to assess whether/how the .NET community would want to use prebuilt UI components for AI features.</p> 
<p><strong>Please give us your feedback, even if it's just to say "<em>Yes I want this</em>" or "<em>I won't use this because...</em>"</strong>. To give feedback, <a href="https://github.com/dotnet-smartcomponents/smartcomponents/issues">post an issue here</a>.</p> 
<p>Smart Components isn't yet an officially supported part of .NET. Whether or not it graduates to full support depends on community feedback and usage levels.</p> 
<h2>Contributing</h2> 
<p>This project has adopted the <a href="https://opensource.microsoft.com/codeofconduct/">Microsoft Open Source Code of Conduct</a>. For more information see the <a href="https://opensource.microsoft.com/codeofconduct/faq/">Code of Conduct FAQ</a> or contact <a href="mailto:opencode@microsoft.com">opencode@microsoft.com</a> with any additional questions or comments.</p></description>
</item>
<item>
<title>janhq/jan</title>
<link>https://github.com/janhq/jan</link>
<description>Content Length: 16332

<p>Jan is an open source alternative to ChatGPT that runs 100% offline on your computer</p><hr /><h1>Jan - Bring AI to your Desktop</h1> 
<p><img alt="Jan banner" src="https://github.com/janhq/jan/assets/89722390/35daac7d-b895-487c-a6ac-6663daaad78e" /></p> 
<p align="center"> 
 <!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section --> <img alt="GitHub commit activity" src="https://img.shields.io/github/commit-activity/m/janhq/jan" /> <img alt="Github Last Commit" src="https://img.shields.io/github/last-commit/janhq/jan" /> <img alt="Github Contributors" src="https://img.shields.io/github/contributors/janhq/jan" /> <img alt="GitHub closed issues" src="https://img.shields.io/github/issues-closed/janhq/jan" /> <img alt="Discord" src="https://img.shields.io/discord/1107178041848909847?label=discord" /> </p> 
<p align="center"> <a href="https://jan.ai/guides">Getting Started</a> - <a href="https://jan.ai/docs">Docs</a> - <a href="https://github.com/janhq/jan/releases">Changelog</a> - <a href="https://github.com/janhq/jan/issues">Bug reports</a> - <a href="https://discord.gg/AsJ8krTT3N">Discord</a> </p> 
<blockquote> 
 <p>⚠️ <strong>Jan is currently in Development</strong>: Expect breaking changes and bugs!</p> 
</blockquote> 
<p>Jan is an open-source ChatGPT alternative that runs 100% offline on your computer.</p> 
<p><strong>Jan runs on any hardware.</strong> From PCs to multi-GPU clusters, Jan supports universal architectures:</p> 
<ul> 
 <li><input checked="checked" disabled="disabled" type="checkbox" /> Nvidia GPUs (fast)</li> 
 <li><input checked="checked" disabled="disabled" type="checkbox" /> Apple M-series (fast)</li> 
 <li><input checked="checked" disabled="disabled" type="checkbox" /> Apple Intel</li> 
 <li><input checked="checked" disabled="disabled" type="checkbox" /> Linux Debian</li> 
 <li><input checked="checked" disabled="disabled" type="checkbox" /> Windows x64</li> 
</ul> 
<h2>Download</h2> 
<table> 
 <tbody>
  <tr style="text-align: center;"> 
   <td style="text-align: center;"><b>Version Type</b></td> 
   <td style="text-align: center;"><b>Windows</b></td> 
   <td colspan="2" style="text-align: center;"><b>MacOS</b></td> 
   <td colspan="2" style="text-align: center;"><b>Linux</b></td> 
  </tr> 
  <tr style="text-align: center;"> 
   <td style="text-align: center;"><b>Stable (Recommended)</b></td> 
   <td style="text-align: center;"> <a href="https://github.com/janhq/jan/releases/download/v0.4.9/jan-win-x64-0.4.9.exe"> <img src="https://raw.githubusercontent.com/janhq/jan/dev/docs/static/img/windows.png" style="height: 14px; width: 14px;" /> <b>jan.exe</b> </a> </td> 
   <td style="text-align: center;"> <a href="https://github.com/janhq/jan/releases/download/v0.4.9/jan-mac-x64-0.4.9.dmg"> <img src="https://raw.githubusercontent.com/janhq/jan/dev/docs/static/img/mac.png" style="height: 15px; width: 15px;" /> <b>Intel</b> </a> </td> 
   <td style="text-align: center;"> <a href="https://github.com/janhq/jan/releases/download/v0.4.9/jan-mac-arm64-0.4.9.dmg"> <img src="https://raw.githubusercontent.com/janhq/jan/dev/docs/static/img/mac.png" style="height: 15px; width: 15px;" /> <b>M1/M2</b> </a> </td> 
   <td style="text-align: center;"> <a href="https://github.com/janhq/jan/releases/download/v0.4.9/jan-linux-amd64-0.4.9.deb"> <img src="https://raw.githubusercontent.com/janhq/jan/dev/docs/static/img/linux.png" style="height: 14px; width: 14px;" /> <b>jan.deb</b> </a> </td> 
   <td style="text-align: center;"> <a href="https://github.com/janhq/jan/releases/download/v0.4.9/jan-linux-x86_64-0.4.9.AppImage"> <img src="https://raw.githubusercontent.com/janhq/jan/dev/docs/static/img/linux.png" style="height: 14px; width: 14px;" /> <b>jan.AppImage</b> </a> </td> 
  </tr> 
  <tr style="text-align: center;"> 
   <td style="text-align: center;"><b>Experimental (Nightly Build)</b></td> 
   <td style="text-align: center;"> <a href="https://delta.jan.ai/latest/jan-win-x64-0.4.9-341.exe"> <img src="https://raw.githubusercontent.com/janhq/jan/dev/docs/static/img/windows.png" style="height: 14px; width: 14px;" /> <b>jan.exe</b> </a> </td> 
   <td style="text-align: center;"> <a href="https://delta.jan.ai/latest/jan-mac-x64-0.4.9-341.dmg"> <img src="https://raw.githubusercontent.com/janhq/jan/dev/docs/static/img/mac.png" style="height: 15px; width: 15px;" /> <b>Intel</b> </a> </td> 
   <td style="text-align: center;"> <a href="https://delta.jan.ai/latest/jan-mac-arm64-0.4.9-341.dmg"> <img src="https://raw.githubusercontent.com/janhq/jan/dev/docs/static/img/mac.png" style="height: 15px; width: 15px;" /> <b>M1/M2</b> </a> </td> 
   <td style="text-align: center;"> <a href="https://delta.jan.ai/latest/jan-linux-amd64-0.4.9-341.deb"> <img src="https://raw.githubusercontent.com/janhq/jan/dev/docs/static/img/linux.png" style="height: 14px; width: 14px;" /> <b>jan.deb</b> </a> </td> 
   <td style="text-align: center;"> <a href="https://delta.jan.ai/latest/jan-linux-x86_64-0.4.9-341.AppImage"> <img src="https://raw.githubusercontent.com/janhq/jan/dev/docs/static/img/linux.png" style="height: 14px; width: 14px;" /> <b>jan.AppImage</b> </a> </td> 
  </tr> 
 </tbody>
</table> 
<p>Download the latest version of Jan at <a href="https://jan.ai/">https://jan.ai/</a> or visit the <strong><a href="https://github.com/janhq/jan/releases">GitHub Releases</a></strong> to download any previous release.</p> 
<h2>Demo</h2> 
<p><img alt="Demo" src="https://raw.githubusercontent.com/janhq/jan/dev/demo.gif" /></p> 
<p><em>Realtime Video: Jan v0.4.3-nightly on a Mac M1, 16GB Sonoma 14</em></p> 
<h2>Quicklinks</h2> 
<h4>Jan</h4> 
<ul> 
 <li><a href="https://jan.ai/">Jan website</a></li> 
 <li><a href="https://github.com/janhq/jan">Jan GitHub</a></li> 
 <li><a href="https://jan.ai/guides/">User Guides</a></li> 
 <li><a href="https://jan.ai/developer/">Developer docs</a></li> 
 <li><a href="https://jan.ai/api-reference/">API reference</a></li> 
 <li><a href="https://jan.ai/docs/">Specs</a></li> 
</ul> 
<h4>Nitro</h4> 
<p>Nitro is a high-efficiency C++ inference engine for edge computing. It is lightweight and embeddable, and can be used on its own within your own projects.</p> 
<ul> 
 <li><a href="https://nitro.jan.ai">Nitro Website</a></li> 
 <li><a href="https://github.com/janhq/nitro">Nitro GitHub</a></li> 
 <li><a href="https://nitro.jan.ai/docs">Documentation</a></li> 
 <li><a href="https://nitro.jan.ai/api-reference">API Reference</a></li> 
</ul> 
<h2>Troubleshooting</h2> 
<p>As Jan is in development mode, you might get stuck on a broken build.</p> 
<p>To reset your installation:</p> 
<ol> 
 <li> <p>Use the following commands to remove any dangling backend processes:</p> <pre><code class="language-sh">ps aux | grep nitro
</code></pre> <p>Look for processes like "nitro" and "nitro_arm_64," and kill them one by one with:</p> <pre><code class="language-sh">kill -9 &lt;PID&gt;
</code></pre> </li> 
 <li> <p><strong>Remove Jan from your Applications folder and Cache folder</strong></p> <pre><code class="language-bash">make clean
</code></pre> <p>This will remove all build artifacts and cached files:</p> 
  <ul> 
   <li>Delete Jan extension from your <code>~/jan/extensions</code> folder</li> 
   <li>Delete all <code>node_modules</code> in current folder</li> 
   <li>Clear Application cache in <code>~/Library/Caches/jan</code></li> 
  </ul> </li> 
</ol> 
<h2>Requirements for running Jan</h2> 
<ul> 
 <li>MacOS: 13 or higher</li> 
 <li>Windows: 
  <ul> 
   <li>Windows 10 or higher</li> 
   <li>To enable GPU support: 
    <ul> 
     <li>Nvidia GPU with CUDA Toolkit 11.7 or higher</li> 
     <li>Nvidia driver 470.63.01 or higher</li> 
    </ul> </li> 
  </ul> </li> 
 <li>Linux: 
  <ul> 
   <li>glibc 2.27 or higher (check with <code>ldd --version</code>)</li> 
   <li>gcc 11, g++ 11, cpp 11 or higher, refer to this <a href="https://jan.ai/guides/troubleshooting/gpu-not-used/#specific-requirements-for-linux">link</a> for more information</li> 
   <li>To enable GPU support: 
    <ul> 
     <li>Nvidia GPU with CUDA Toolkit 11.7 or higher</li> 
     <li>Nvidia driver 470.63.01 or higher</li> 
    </ul> </li> 
  </ul> </li> 
</ul> 
<h2>Contributing</h2> 
<p>Contributions are welcome! Please read the <a href="https://raw.githubusercontent.com/janhq/jan/dev/CONTRIBUTING.md">CONTRIBUTING.md</a> file</p> 
<h3>Pre-requisites</h3> 
<ul> 
 <li>node &gt;= 20.0.0</li> 
 <li>yarn &gt;= 1.22.0</li> 
 <li>make &gt;= 3.81</li> 
</ul> 
<h3>Instructions</h3> 
<ol> 
 <li> <p><strong>Clone the repository and prepare:</strong></p> <pre><code class="language-bash">git clone https://github.com/janhq/jan
cd jan
git checkout -b DESIRED_BRANCH
</code></pre> </li> 
 <li> <p><strong>Run development and use Jan Desktop</strong></p> <pre><code class="language-bash">make dev
</code></pre> </li> 
</ol> 
<p>This will start the development server and open the desktop app.</p> 
<ol start="3"> 
 <li> <p>(Optional) <strong>Run the API server without frontend</strong></p> <pre><code class="language-bash">yarn dev:server
</code></pre> </li> 
</ol> 
<h3>For production build</h3> 
<pre><code class="language-bash"># Do steps 1 and 2 in the previous section
# Build the app
make build
</code></pre> 
<p>This will build the app MacOS m1/m2 for production (with code signing already done) and put the result in <code>dist</code> folder.</p> 
<h3>Docker mode</h3> 
<ul> 
 <li> <p>Supported OS: Linux, WSL2 Docker</p> </li> 
 <li> <p>Pre-requisites:</p> 
  <ul> 
   <li> <p>Docker Engine and Docker Compose are required to run Jan in Docker mode. Follow the <a href="https://docs.docker.com/engine/install/ubuntu/">instructions</a> below to get started with Docker Engine on Ubuntu.</p> <pre><code class="language-bash">curl -fsSL https://get.docker.com -o get-docker.sh
sudo sh ./get-docker.sh --dry-run
</code></pre> </li> 
   <li> <p>If you intend to run Jan in GPU mode, you need to install <code>nvidia-driver</code> and <code>nvidia-docker2</code>. Follow the instruction <a href="https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/latest/install-guide.html">here</a> for installation.</p> </li> 
  </ul> </li> 
 <li> <p>Run Jan in Docker mode</p> </li> 
</ul> 
<table> 
 <thead> 
  <tr> 
   <th>Docker compose Profile</th> 
   <th>Description</th> 
  </tr> 
 </thead> 
 <tbody> 
  <tr> 
   <td><code>cpu-fs</code></td> 
   <td>Run Jan in CPU mode with default file system</td> 
  </tr> 
  <tr> 
   <td><code>cpu-s3fs</code></td> 
   <td>Run Jan in CPU mode with S3 file system</td> 
  </tr> 
  <tr> 
   <td><code>gpu-fs</code></td> 
   <td>Run Jan in GPU mode with default file system</td> 
  </tr> 
  <tr> 
   <td><code>gpu-s3fs</code></td> 
   <td>Run Jan in GPU mode with S3 file system</td> 
  </tr> 
 </tbody> 
</table> 
<table> 
 <thead> 
  <tr> 
   <th>Environment Variable</th> 
   <th>Description</th> 
  </tr> 
 </thead> 
 <tbody> 
  <tr> 
   <td><code>S3_BUCKET_NAME</code></td> 
   <td>S3 bucket name - leave blank for default file system</td> 
  </tr> 
  <tr> 
   <td><code>AWS_ACCESS_KEY_ID</code></td> 
   <td>AWS access key ID - leave blank for default file system</td> 
  </tr> 
  <tr> 
   <td><code>AWS_SECRET_ACCESS_KEY</code></td> 
   <td>AWS secret access key - leave blank for default file system</td> 
  </tr> 
  <tr> 
   <td><code>AWS_ENDPOINT</code></td> 
   <td>AWS endpoint URL - leave blank for default file system</td> 
  </tr> 
  <tr> 
   <td><code>AWS_REGION</code></td> 
   <td>AWS region - leave blank for default file system</td> 
  </tr> 
  <tr> 
   <td><code>API_BASE_URL</code></td> 
   <td>Jan Server URL, please modify it as your public ip address or domain name default <a href="http://localhost:1377">http://localhost:1377</a></td> 
  </tr> 
 </tbody> 
</table> 
<ul> 
 <li> <p><strong>Option 1</strong>: Run Jan in CPU mode</p> <pre><code class="language-bash"># cpu mode with default file system
docker compose --profile cpu-fs up -d

# cpu mode with S3 file system
docker compose --profile cpu-s3fs up -d
</code></pre> </li> 
 <li> <p><strong>Option 2</strong>: Run Jan in GPU mode</p> 
  <ul> 
   <li> <p><strong>Step 1</strong>: Check CUDA compatibility with your NVIDIA driver by running <code>nvidia-smi</code> and check the CUDA version in the output</p> <pre><code class="language-bash">nvidia-smi

# Output
+---------------------------------------------------------------------------------------+
| NVIDIA-SMI 531.18                 Driver Version: 531.18       CUDA Version: 12.1     |
|-----------------------------------------+----------------------+----------------------+
| GPU  Name                      TCC/WDDM | Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf            Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                                         |                      |               MIG M. |
|=========================================+======================+======================|
|   0  NVIDIA GeForce RTX 4070 Ti    WDDM | 00000000:01:00.0  On |                  N/A |
|  0%   44C    P8               16W / 285W|   1481MiB / 12282MiB |      2%      Default |
|                                         |                      |                  N/A |
+-----------------------------------------+----------------------+----------------------+
|   1  NVIDIA GeForce GTX 1660 Ti    WDDM | 00000000:02:00.0 Off |                  N/A |
|  0%   49C    P8               14W / 120W|      0MiB /  6144MiB |      0%      Default |
|                                         |                      |                  N/A |
+-----------------------------------------+----------------------+----------------------+
|   2  NVIDIA GeForce GTX 1660 Ti    WDDM | 00000000:05:00.0 Off |                  N/A |
| 29%   38C    P8               11W / 120W|      0MiB /  6144MiB |      0%      Default |
|                                         |                      |                  N/A |
+-----------------------------------------+----------------------+----------------------+

+---------------------------------------------------------------------------------------+
| Processes:                                                                            |
|  GPU   GI   CI        PID   Type   Process name                            GPU Memory |
|        ID   ID                                                             Usage      |
|=======================================================================================|
</code></pre> </li> 
   <li> <p><strong>Step 2</strong>: Visit <a href="https://catalog.ngc.nvidia.com/orgs/nvidia/containers/cuda/tags">NVIDIA NGC Catalog </a> and find the smallest minor version of image tag that matches your CUDA version (e.g., 12.1 -&gt; 12.1.0)</p> </li> 
   <li> <p><strong>Step 3</strong>: Update the <code>Dockerfile.gpu</code> line number 5 with the latest minor version of the image tag from step 2 (e.g. change <code>FROM nvidia/cuda:12.2.0-runtime-ubuntu22.04 AS base</code> to <code>FROM nvidia/cuda:12.1.0-runtime-ubuntu22.04 AS base</code>)</p> </li> 
   <li> <p><strong>Step 4</strong>: Run command to start Jan in GPU mode</p> <pre><code class="language-bash"># GPU mode with default file system
docker compose --profile gpu-fs up -d

# GPU mode with S3 file system
docker compose --profile gpu-s3fs up -d
</code></pre> </li> 
  </ul> </li> 
</ul> 
<p>This will start the web server and you can access Jan at <code>http://localhost:3000</code>.</p> 
<blockquote> 
 <p>Note: RAG feature is not supported in Docker mode with s3fs yet.</p> 
</blockquote> 
<h2>Acknowledgements</h2> 
<p>Jan builds on top of other open-source projects:</p> 
<ul> 
 <li><a href="https://github.com/ggerganov/llama.cpp">llama.cpp</a></li> 
 <li><a href="https://github.com/langchain-ai">LangChain</a></li> 
 <li><a href="https://github.com/NVIDIA/TensorRT">TensorRT</a></li> 
 <li><a href="https://github.com/NVIDIA/TensorRT-LLM">TensorRT-LLM</a></li> 
</ul> 
<h2>Contact</h2> 
<ul> 
 <li>Bugs &amp; requests: file a GitHub ticket</li> 
 <li>For discussion: join our Discord <a href="https://discord.gg/FTk2MvZwJH">here</a></li> 
 <li>For business inquiries: email <a href="mailto:hello@jan.ai">hello@jan.ai</a></li> 
 <li>For jobs: please email <a href="mailto:hr@jan.ai">hr@jan.ai</a></li> 
</ul> 
<h2>License</h2> 
<p>Jan is free and open source, under the AGPLv3 license.</p></description>
</item>
<item>
<title>jgthms/bulma</title>
<link>https://github.com/jgthms/bulma</link>
<description>Content Length: 12879

<p>Modern CSS framework based on Flexbox</p><hr /><h1><a href="https://bulma.io">Bulma</a></h1> 
<p>Bulma is a <strong>modern CSS framework</strong> based on <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Using_CSS_flexible_boxes">Flexbox</a>.</p> 
<p><img alt="Github" src="https://img.shields.io/github/v/release/jgthms/bulma?logo=Bulma" /> <a href="https://www.npmjs.com/package/bulma"><img alt="npm" src="https://img.shields.io/npm/v/bulma.svg?sanitize=true" /></a> <a href="https://www.npmjs.com/package/bulma"><img alt="npm" src="https://img.shields.io/npm/dm/bulma.svg?sanitize=true" /></a> <a href="https://www.jsdelivr.com/package/npm/bulma"><img alt="" src="https://data.jsdelivr.com/v1/package/npm/bulma/badge" /></a> <a href="https://github.com/awesome-css-group/awesome-css"><img alt="Awesome" src="https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg?sanitize=true" /></a> <a href="https://gitter.im/jgthms/bulma"><img alt="Join the chat at https://gitter.im/jgthms/bulma" src="https://badges.gitter.im/jgthms/bulma.svg?sanitize=true" /></a> <a href="https://travis-ci.org/jgthms/bulma"><img alt="Build Status" src="https://travis-ci.org/jgthms/bulma.svg?branch=master" /></a></p> 
<p><a href="https://bulma.io"><img alt="Bulma: a Flexbox CSS framework" src="https://raw.githubusercontent.com/jgthms/bulma/master/docs/images/bulma-banner.png" width="600" /></a></p> 
<h2>Quick install</h2> 
<p>Bulma is constantly in development! Try it out now:</p> 
<h3>NPM</h3> 
<pre><code class="language-sh">npm install bulma
</code></pre> 
<p><strong>or</strong></p> 
<h3>Yarn</h3> 
<pre><code class="language-sh">yarn add bulma
</code></pre> 
<h3>Bower</h3> 
<pre><code class="language-sh">bower install bulma
</code></pre> 
<h3>Import</h3> 
<p>After installation, you can import the CSS file into your project using this snippet:</p> 
<pre><code class="language-sh">@import 'bulma/css/bulma.css'
</code></pre> 
<h3>CDN</h3> 
<p><a href="https://www.jsdelivr.com/package/npm/bulma">https://www.jsdelivr.com/package/npm/bulma</a></p> 
<p>Feel free to raise an issue or submit a pull request.</p> 
<h2>CSS only</h2> 
<p>Bulma is a <strong>CSS</strong> framework. As such, the sole output is a single CSS file: <a href="https://github.com/jgthms/bulma/raw/master/css/bulma.css">bulma.css</a></p> 
<p>You can either use that file, "out of the box", or download the Sass source files to customize the <a href="https://bulma.io/documentation/overview/variables/">variables</a>.</p> 
<p>There is <strong>no</strong> JavaScript included. People generally want to use their own JS implementation (and usually already have one). Bulma can be considered "environment agnostic": it's just the style layer on top of the logic.</p> 
<h2>Browser Support</h2> 
<p>Bulma uses <a href="https://github.com/postcss/autoprefixer">autoprefixer</a> to make (most) Flexbox features compatible with earlier browser versions. According to <a href="https://caniuse.com/#feat=flexbox">Can I use</a>, Bulma is compatible with <strong>recent</strong> versions of:</p> 
<ul> 
 <li>Chrome</li> 
 <li>Edge</li> 
 <li>Firefox</li> 
 <li>Opera</li> 
 <li>Safari</li> 
</ul> 
<p>Internet Explorer (10+) is only partially supported.</p> 
<h2>Documentation</h2> 
<p>The documentation resides in the <a href="https://raw.githubusercontent.com/jgthms/bulma/main/docs">docs</a> directory, and is built with the Ruby-based <a href="https://jekyllrb.com/">Jekyll</a> tool.</p> 
<p>Browse the <a href="https://bulma.io/documentation/start/overview/">online documentation here.</a></p> 
<h2>Related projects</h2> 
<table> 
 <thead> 
  <tr> 
   <th>Project</th> 
   <th>Description</th> 
  </tr> 
 </thead> 
 <tbody> 
  <tr> 
   <td><a href="https://github.com/j5bot/bulma-attribute-selectors">Bulma with Attribute Modules</a></td> 
   <td>Adds support for attribute-based selectors</td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/joshuajansen/bulma-rails">Bulma with Rails</a></td> 
   <td>Integrates Bulma with the rails asset pipeline</td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/loogn/bulmarazor">BulmaRazor</a></td> 
   <td>A lightweight component library based on Bulma and Blazor.</td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/vue-bulma/vue-admin">Vue Admin (dead)</a></td> 
   <td>Vue Admin framework powered by Bulma</td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/jenil/bulmaswatch">Bulmaswatch</a></td> 
   <td>Free themes for Bulma</td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/Caiyeon/goldfish">Goldfish (read-only)</a></td> 
   <td>Vault UI with Bulma, Golang, and Vue Admin</td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/open-tux/ember-bulma">ember-bulma</a></td> 
   <td>Ember addon providing a collection of UI components for Bulma</td> 
  </tr> 
  <tr> 
   <td><a href="https://bloomer.js.org">Bloomer</a></td> 
   <td>A set of React components for Bulma</td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/kulakowka/react-bulma">React-bulma</a></td> 
   <td>React.js components for Bulma</td> 
  </tr> 
  <tr> 
   <td><a href="https://buefy.org/">Buefy</a></td> 
   <td>Lightweight UI components for Vue.js based on Bulma</td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/vouill/vue-bulma-components">vue-bulma-components</a></td> 
   <td>Bulma components for Vue.js with straightforward syntax</td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/VizuaaLOG/BulmaJS">BulmaJS</a></td> 
   <td>Javascript integration for Bulma. Written in ES6 with a data-* API</td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/postare/bulma-modal-fx">Bulma-modal-fx</a></td> 
   <td>A set of modal window effects with CSS transitions and animations for Bulma</td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/groenroos/bulma-stylus">Bulma Stylus</a></td> 
   <td>Up-to-date 1:1 translation to Stylus</td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/log1x/bulma.styl">Bulma.styl (read-only)</a></td> 
   <td>1:1 Stylus translation of Bulma 0.6.11</td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/surprisetalk/elm-bulma">elm-bulma</a></td> 
   <td>Bulma + Elm</td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/ahstro/elm-bulma-classes">elm-bulma-classes</a></td> 
   <td>Bulma classes prepared for usage with Elm</td> 
  </tr> 
  <tr> 
   <td><a href="https://bulma-customizer.bstash.io/">Bulma Customizer</a></td> 
   <td>Bulma Customizer – Create your own <strong>bespoke</strong> Bulma build</td> 
  </tr> 
  <tr> 
   <td><a href="https://fulma.github.io/Fulma/">Fulma</a></td> 
   <td>Wrapper around Bulma for <a href="https://github.com/fable-compiler/fable-react">fable-react</a></td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/laravel-enso/enso">Laravel Enso</a></td> 
   <td>SPA Admin Panel built with Bulma, VueJS and Laravel</td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/timonweb/django-bulma">Django Bulma</a></td> 
   <td>Integrates Bulma with Django</td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/dansup/bulma-templates">Bulma Templates</a></td> 
   <td>Free Templates for Bulma</td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/couds/react-bulma-components">React Bulma Components</a></td> 
   <td>Another React wrap on React for Bulma.io</td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/sectore/purescript-bulma">purescript-bulma</a></td> 
   <td>PureScript bindings for Bulma</td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/laravel-enso/vuedatatable">Vue Datatable</a></td> 
   <td>Bulma themed datatable based on Vue, Laravel &amp; JSON templates</td> 
  </tr> 
  <tr> 
   <td><a href="https://mubaidr.github.io/bulma-fluent/">bulma-fluent</a></td> 
   <td>Fluent Design Theme for Bulma inspired by Microsoft’s Fluent Design System</td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/4d11/csskrt-csskrt">csskrt-csskrt</a></td> 
   <td>Automatically add Bulma classes to HTML files</td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/hipstersmoothie/bulma-pagination-react">bulma-pagination-react</a></td> 
   <td>Bulma pagination as a react component</td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/jmaczan/bulma-helpers">bulma-helpers</a></td> 
   <td>Functional / Atomic CSS classes for Bulma</td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/hipstersmoothie/bulma-swatch-hook">bulma-swatch-hook</a></td> 
   <td>Bulma swatches as a react hook and a component</td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/tomhrtly/BulmaWP">BulmaWP (read-only)</a></td> 
   <td>Starter WordPress theme for Bulma</td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/aldi/ralma">Ralma</a></td> 
   <td>Stateless Ractive.js Components for Bulma</td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/python-discord/django-simple-bulma">Django Simple Bulma</a></td> 
   <td>Lightweight integration of Bulma and Bulma-Extensions for your Django app</td> 
  </tr> 
  <tr> 
   <td><a href="https://dfee.github.io/rbx">rbx</a></td> 
   <td>Comprehensive React UI Framework written in TypeScript</td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/aldi/awesome-bulma-templates">Awesome Bulma Templates</a></td> 
   <td>Free real-world Templates built with Bulma</td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/fibo/trunx">Trunx</a></td> 
   <td>Super Saiyan React components, son of awesome Bulma</td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/web-padawan/aybolit/tree/master/packages/bulma">@aybolit/bulma</a></td> 
   <td>Web Components library inspired by Bulma and Bulma-extensions</td> 
  </tr> 
  <tr> 
   <td><a href="https://www.drupal.org/project/drulma">Drulma</a></td> 
   <td>Drupal theme for Bulma.</td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/textbook/bulrush">Bulrush</a></td> 
   <td>A Bulma-based Python Pelican blog theme</td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/service-paradis/bulma-variables-export">Bulma Variable Export</a></td> 
   <td>Access Bulma Variables in Javascript/Typescript in project using Webpack</td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/gomah/bulmil">Bulmil</a></td> 
   <td>An agnostic UI components library based on Web Components, made with Bulma &amp; Stencil.</td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/elcobvg/svelte-bulma-components">Svelte Bulma Components</a></td> 
   <td>Library of UI components to be used in <a href="https://svelte.technology/">Svelte.js</a> or standalone.</td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/benninkcorien/nunjucks-starter-kit">Bulma Nunjucks Starterkit</a></td> 
   <td>Starterkit for Nunjucks with Bulma.</td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/aldi/bulma-social">Bulma-Social</a></td> 
   <td>Social Buttons and Colors for Bulma</td> 
  </tr> 
  <tr> 
   <td><a href="https://divjoy.com/?kit=bulma">Divjoy</a></td> 
   <td>React codebase generator with Bulma templates</td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/Megabit/Blazorise">Blazorise</a></td> 
   <td>Blazor component library with the support for Bulma CSS framework</td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/oruga-ui/theme-bulma">Oruga-Bulma</a></td> 
   <td>Bulma theme for <a href="https://oruga.io">Oruga UI</a></td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/daniil4udo/bulvar/tree/master/packages/bulma">@bulvar/bulma</a></td> 
   <td>Bulma with <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties">CSS Variables</a> support</td> 
  </tr> 
  <tr> 
   <td><a href="https://quinnjr.github.io/angular-bulma">@angular-bulma</a></td> 
   <td><a href="https://angular.io/">Angular</a> directives and components to use in your Bulma projects</td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/eliutdev/bulma-css-class-completion">Bulma CSS Class Completion</a></td> 
   <td>CSS class name completion for the HTML class attribute based on Bulma CSS classes.</td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/ckrybus/crispy-bulma">Crispy-Bulma</a></td> 
   <td>Bulma template pack for django-crispy-forms</td> 
  </tr> 
  <tr> 
   <td><a href="https://case.app">CASE</a></td> 
   <td>CASE is Lightweight Backend-as-a-Service with essential features: DB, Admin panel, API, JS SDK</td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/NicolasOmar/reactive-bulma">Reactive Bulma</a></td> 
   <td>A component library based on React, Bulma, Typescript and Rollup</td> 
  </tr> 
 </tbody> 
</table> 
<h2>Copyright and license <img alt="Github" src="https://img.shields.io/github/license/jgthms/bulma?logo=Github" /></h2> 
<p>Code copyright 2023 Jeremy Thomas. Code released under <a href="https://github.com/jgthms/bulma/raw/master/LICENSE">the MIT license</a>.</p></description>
</item>
<item>
<title>OpenInterpreter/01</title>
<link>https://github.com/OpenInterpreter/01</link>
<description>Content Length: 6811

<p>The open-source language model computer</p><hr /><h1 align="center">○</h1> 
<p align="center"> <a href="https://discord.gg/Hvz9Axh84z"><img alt="Discord" src="https://img.shields.io/discord/1146610656779440188?logo=discord&amp;style=social&amp;logoColor=black" /></a> <br /> <br /> <strong>The open-source language model computer.</strong><br /> 
 <!-- <br><a href="https://openinterpreter.com">Preorder the Light</a>‎ ‎ |‎ ‎ <a href="https://openinterpreter.com">Get Updates</a>‎ ‎ |‎ ‎ <a href="https://docs.openinterpreter.com/">Documentation</a><br> --> </p> 
<br /> 
<p><img alt="OI-O1-BannerDemo-2" src="https://www.openinterpreter.com/OI-O1-BannerDemo-3.jpg" /></p> 
<p>We want to help you build. <a href="https://0ggfznkwh4j.typeform.com/to/kkStE8WF">Apply for 1-on-1 support.</a></p> 
<br /> 
<hr /> 
<p>⚠️ <strong>WARNING:</strong> This experimental project is under rapid development and lacks basic safeguards. Until a stable <code>1.0</code> release, <strong>ONLY</strong> run this repository on devices without sensitive information or access to paid services. ⚠️</p> 
<hr /> 
<br /> 
<p><strong>The 01 Project</strong> is building an open-source ecosystem for AI devices.</p> 
<p>Our flagship operating system can power conversational devices like the Rabbit R1, Humane Pin, or <a href="https://www.youtube.com/watch?v=1ZXugicgn6U">Star Trek computer</a>.</p> 
<p>We intend to become the GNU/Linux of this space by staying open, modular, and free.</p> 
<br /> 
<h1>Software</h1> 
<pre><code class="language-shell">git clone https://github.com/OpenInterpreter/01 # Clone the repository
cd 01/software # CD into the source directory
</code></pre> 
<!-- > Not working? Read our [setup guide](https://docs.openinterpreter.com/getting-started/setup). --> 
<pre><code class="language-shell">brew install portaudio ffmpeg cmake # Install Mac OSX dependencies
poetry install # Install Python dependencies
export OPENAI_API_KEY=sk... # OR run `poetry run 01 --local` to run everything locally
poetry run 01 # Runs the 01 Light simulator (hold your spacebar, speak, release)
</code></pre> 
<br /> 
<h1>Hardware</h1> 
<ul> 
 <li>The <strong>01 Light</strong> is an ESP32-based voice interface. <a href="https://github.com/OpenInterpreter/01/tree/main/hardware/light">Build instructions are here.</a> It works in tandem with the <strong>01 Server</strong> (<a href="https://github.com/OpenInterpreter/01/raw/main/README.md#01-server">setup guide below</a>) running on your home computer.</li> 
 <li><strong>Mac OSX</strong> and <strong>Ubuntu</strong> are supported by running <code>poetry run 01</code>. This uses your spacebar to simulate the 01 Light.</li> 
 <li>(coming soon) The <strong>01 Heavy</strong> is a standalone device that runs everything locally.</li> 
</ul> 
<p><strong>We need your help supporting &amp; building more hardware.</strong> The 01 should be able to run on any device with input (microphone, keyboard, etc.), output (speakers, screens, motors, etc.), and an internet connection (or sufficient compute to run everything locally). <a href="https://github.com/OpenInterpreter/01/raw/main/CONTRIBUTING.md">Contribution Guide →</a></p> 
<br /> 
<h1>What does it do?</h1> 
<p>The 01 exposes a speech-to-speech websocket at <code>localhost:10001</code>.</p> 
<p>If you stream raw audio bytes to <code>/</code> in <a href="https://docs.openinterpreter.com/protocols/lmc-messages">LMC format</a>, you will receive its response in the same format.</p> 
<p>Inspired in part by <a href="https://twitter.com/karpathy/status/1723140519554105733">Andrej Karpathy's LLM OS</a>, we run a <a href="https://github.com/OpenInterpreter/open-interpreter">code-interpreting language model</a>, and call it when certain events occur at your computer's <a href="https://github.com/OpenInterpreter/01/raw/main/software/source/server/utils/kernel.py">kernel</a>.</p> 
<p>The 01 wraps this in a voice interface:</p> 
<br /> 
<p><img alt="LMC" src="https://github.com/OpenInterpreter/01/assets/63927363/52417006-a2ca-4379-b309-ffee3509f5d4" width="100%" /><br /><br /></p> 
<h1>Protocols</h1> 
<h2>LMC Messages</h2> 
<p>To communicate with different components of this system, we introduce <a href="https://docs.openinterpreter.com/protocols/lmc-messages">LMC Messages</a> format, which extends OpenAI’s messages format to include a "computer" role.</p> 
<h2>Dynamic System Messages</h2> 
<p>Dynamic System Messages enable you to execute code inside the LLM's system message, moments before it appears to the AI.</p> 
<pre><code class="language-python"># Edit the following settings in i.py
interpreter.system_message = r" The time is {{time.time()}}. " # Anything in double brackets will be executed as Python
interpreter.chat("What time is it?") # It will know, without making a tool/API call
</code></pre> 
<h1>Guides</h1> 
<h2>01 Server</h2> 
<p>To run the server on your Desktop and connect it to your 01 Light, run the following commands:</p> 
<pre><code class="language-shell">brew install ngrok/ngrok/ngrok
ngrok authtoken ... # Use your ngrok authtoken
poetry run 01 --server --expose
</code></pre> 
<p>The final command will print a server URL. You can enter this into your 01 Light's captive WiFi portal to connect to your 01 Server.</p> 
<h2>Local Mode</h2> 
<pre><code>poetry run 01 --local
</code></pre> 
<p>If you want to run local speech-to-text using Whisper, you must install Rust. Follow the instructions given <a href="https://www.rust-lang.org/tools/install">here</a>.</p> 
<h2>Customizations</h2> 
<p>To customize the behavior of the system, edit the <a href="https://docs.openinterpreter.com/settings/all-settings">system message, model, skills library path,</a> etc. in <code>i.py</code>. This file sets up an interpreter, and is powered by Open Interpreter.</p> 
<h2>Ubuntu Dependencies</h2> 
<pre><code class="language-bash">sudo apt-get install portaudio19-dev ffmpeg cmake
</code></pre> 
<h1>Contributors</h1> 
<p><a href="https://github.com/OpenInterpreter/01/graphs/contributors"><img alt="01 project contributors" src="https://contrib.rocks/image?repo=OpenInterpreter/01&amp;max=2000" /></a></p> 
<p>Please see our <a href="https://raw.githubusercontent.com/OpenInterpreter/01/main/CONTRIBUTING.md">contributing guidelines</a> for more details on how to get involved.</p> 
<br /> 
<h1>Roadmap</h1> 
<p>Visit <a href="https://raw.githubusercontent.com/OpenInterpreter/01/main/ROADMAP.md">our roadmap</a> to see the future of the 01.</p> 
<br /> 
<h2>Background</h2> 
<h3><a href="https://github.com/KillianLucas/01/raw/main/CONTEXT.md">Context ↗</a></h3> 
<p>The story of devices that came before the 01.</p> 
<h3><a href="https://github.com/KillianLucas/01/tree/main/INSPIRATION.md">Inspiration ↗</a></h3> 
<p>Things we want to steal great ideas from.</p> 
<br /> 
<p>○</p></description>
</item>
<item>
<title>Developer-Y/cs-video-courses</title>
<link>https://github.com/Developer-Y/cs-video-courses</link>
<description>Content Length: 166148

<p>List of Computer Science courses with video lectures.</p><hr /><h1>Computer Science courses with video lectures</h1> 
<!-- omit in toc --> 
<h2>Introduction</h2> 
<ul> 
 <li>Please check <a href="https://github.com/Developer-Y/cs-video-courses/raw/master/NOTES.md">NOTES</a> for general information about this list.</li> 
 <li>Please refer <a href="https://github.com/Developer-Y/cs-video-courses/raw/master/CONTRIBUTING.md">CONTRIBUTING.md</a> for contribution guidelines.</li> 
 <li>Please feel free to raise any genuine issue you may have, however, it has been noticed that few people open empty issues to raise their GitHub contribution on their account. Such spammers will be blocked.</li> 
 <li>You are welcome to contribute, please create PR for actual college/University level courses. Please do not add links for small MOOCs, basic tutorials, or advertisements for some sites/channels.</li> 
</ul> 
<hr /> 
<p>Table of Contents</p> 
<hr /> 
<ul> 
 <li><a href="https://raw.githubusercontent.com/Developer-Y/cs-video-courses/master/#introduction-to-computer-science">Introduction to Computer Science</a></li> 
 <li><a href="https://raw.githubusercontent.com/Developer-Y/cs-video-courses/master/#data-structures-and-algorithms">Data Structures and Algorithms</a></li> 
 <li><a href="https://raw.githubusercontent.com/Developer-Y/cs-video-courses/master/#systems-programming">Systems Programming</a></li> 
 <li><a href="https://raw.githubusercontent.com/Developer-Y/cs-video-courses/master/#database-systems">Database Systems</a></li> 
 <li><a href="https://raw.githubusercontent.com/Developer-Y/cs-video-courses/master/#software-engineering">Software Engineering</a></li> 
 <li><a href="https://raw.githubusercontent.com/Developer-Y/cs-video-courses/master/#artificial-intelligence">Artificial Intelligence</a></li> 
 <li><a href="https://raw.githubusercontent.com/Developer-Y/cs-video-courses/master/#machine-learning">Machine Learning</a></li> 
 <li><a href="https://raw.githubusercontent.com/Developer-Y/cs-video-courses/master/#computer-networks">Computer Networks</a></li> 
 <li><a href="https://raw.githubusercontent.com/Developer-Y/cs-video-courses/master/#math-for-computer-scientist">Math for Computer Scientist</a></li> 
 <li><a href="https://raw.githubusercontent.com/Developer-Y/cs-video-courses/master/#web-programming-and-internet-technologies">Web Programming and Internet Technologies</a></li> 
 <li><a href="https://raw.githubusercontent.com/Developer-Y/cs-video-courses/master/#theoretical-cs-and-programming-languages">Theoretical CS and Programming Languages</a></li> 
 <li><a href="https://raw.githubusercontent.com/Developer-Y/cs-video-courses/master/#embedded-systems">Embedded Systems</a></li> 
 <li><a href="https://raw.githubusercontent.com/Developer-Y/cs-video-courses/master/#real-time-system-evaluation">Real time system evaluation</a></li> 
 <li><a href="https://raw.githubusercontent.com/Developer-Y/cs-video-courses/master/#computer-organization-and-architecture">Computer Organization and Architecture</a></li> 
 <li><a href="https://raw.githubusercontent.com/Developer-Y/cs-video-courses/master/#security">Security</a></li> 
 <li><a href="https://raw.githubusercontent.com/Developer-Y/cs-video-courses/master/#computer-graphics">Computer Graphics</a></li> 
 <li><a href="https://raw.githubusercontent.com/Developer-Y/cs-video-courses/master/#image-processing-and-computer-vision">Image Processing and Computer Vision</a></li> 
 <li><a href="https://raw.githubusercontent.com/Developer-Y/cs-video-courses/master/#computational-physics">Computational Physics</a></li> 
 <li><a href="https://raw.githubusercontent.com/Developer-Y/cs-video-courses/master/#computational-biology">Computational Biology</a></li> 
 <li><a href="https://raw.githubusercontent.com/Developer-Y/cs-video-courses/master/#quantum-computing">Quantum Computing</a></li> 
 <li><a href="https://raw.githubusercontent.com/Developer-Y/cs-video-courses/master/#robotics-and-control">Robotics and Control</a></li> 
 <li><a href="https://raw.githubusercontent.com/Developer-Y/cs-video-courses/master/#computational-finance">Computational Finance</a></li> 
 <li><a href="https://raw.githubusercontent.com/Developer-Y/cs-video-courses/master/#blockchain-development">Blockchain Development</a></li> 
 <li><a href="https://raw.githubusercontent.com/Developer-Y/cs-video-courses/master/#misc">Misc</a></li> 
</ul> 
<!-- omit in toc --> 
<h2>Courses</h2> 
<hr /> 
<h3>Introduction to Computer Science</h3> 
<ul> 
 <li><a href="http://www.infocobuild.com/education/audio-video-courses/computer-science/cs10-spring2015-berkeley.html">CS 10 - The Beauty and Joy of Computing - Spring 2015 - Dan Garcia - UC Berkeley InfoCoBuild</a></li> 
 <li><a href="https://ocw.mit.edu/courses/6-0001-introduction-to-computer-science-and-programming-in-python-fall-2016/video_galleries/lecture-videos/">6.0001 - Introduction to Computer Science and Programming in Python - MIT OCW</a></li> 
 <li><a href="https://ocw.mit.edu/courses/6-001-structure-and-interpretation-of-computer-programs-spring-2005/video_galleries/video-lectures/">6.001 - Structure and Interpretation of Computer Programs, MIT</a></li> 
 <li><a href="https://computationalthinking.mit.edu/Fall22/">Introduction to Computational Thinking - MIT</a></li> 
 <li><a href="https://online-learning.harvard.edu/course/cs50-introduction-computer-science">CS 50 - Introduction to Computer Science, Harvard University</a> (<a href="http://cs50.tv/2017/fall/">cs50.tv</a>)</li> 
 <li><a href="https://cs61a.org/">CS 61A - Structure and Interpretation of Computer Programs [Python], UC Berkeley</a></li> 
 <li><a href="https://www.youtube.com/channel/UC7dEjIUwSxSNcW4PqNRQW8w/playlists?view=1&amp;flow=grid&amp;sort=da">CPSC 110 - Systematic Program Design [Racket], University of British Columbia</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLhQjrBD2T382p8amnvUp1rws1p7n7gJ2p">CS50's Understanding Technology</a></li> 
 <li><a href="https://courses.cs.washington.edu/courses/cse142/16sp/calendar.shtml">CSE 142 Computer Programming I (Java Programming), Spring 2016 - University of Washington</a></li> 
 <li><a href="https://www.cc.gatech.edu/classes/AY2016/cs1301c_fall/">CS 1301 Intro to computing - Gatech</a></li> 
 <li><a href="https://see.stanford.edu/Course/CS106A">CS 106A - Programming Methodology, Stanford University</a> (<a href="https://www.youtube.com/playlist?list=PL84A56BC7F4A1F852">Lecture Videos</a>)</li> 
 <li><a href="https://see.stanford.edu/Course/CS106B">CS 106B - Programming Abstractions, Stanford University</a> (<a href="https://www.youtube.com/playlist?list=PLnfg8b9vdpLn9exZweTJx44CII1bYczuk">Lecture Videos</a>)</li> 
 <li><a href="https://web.stanford.edu/class/cs106l/">CS 106L - Standard C++ Programming</a>(<a href="https://www.youtube.com/playlist?list=PLCgD3ws8aVdolCexlz8f3U-RROA0s5jWA">Lecture Videos</a>)</li> 
 <li><a href="http://web.stanford.edu/class/cs106x/">CS 106X - Programming Abstractions in C++</a> (<a href="https://www.youtube.com/playlist?list=PLrivl8gTKLcpIJ-ktHCxMEgWOn8LawYhb">Lecture Videos</a>)</li> 
 <li><a href="https://see.stanford.edu/Course/CS107">CS 107 - Programming Paradigms, Stanford University</a></li> 
 <li><a href="http://ProgramArcadeGames.com">CmSc 150 - Introduction to Programming with Arcade Games, Simpson College</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLw454N-VXALSIzIe_eL5U8L4S68v2X_ak">LINFO 1104 - Paradigms of computer programming, Peter Van Roy, Université catholique de Louvain, Belgium - EdX</a></li> 
 <li><a href="https://ocw.tudelft.nl/courses/introduction-to-functional-programming/">FP 101x - Introduction to Functional Programming, TU Delft</a></li> 
 <li><a href="https://nptel.ac.in/courses/106104074/">Introduction to Problem Solving and Programming - IIT Kanpur</a></li> 
 <li><a href="https://nptel.ac.in/courses/106104128/">Introduction to programming in C - IIT Kanpur</a></li> 
 <li><a href="https://nptel.ac.in/courses/106105151/">Programming in C++ - IIT Kharagpur</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLKW2Azk23ZtSeBcvJi0JnL7PapedOvwz9">Python Boot Camp Fall 2016 - Berkeley Institute for Data Science (BIDS)</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLAwxTw4SYaPmjFQ2w9j05WDX8Jtg5RXWW">CS 101 - Introduction to Computer Science - Udacity</a></li> 
 <li><a href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-00sc-introduction-to-computer-science-and-programming-spring-2011/">6.00SC - Introduction to Computer Science and Programming (Spring 2011) - MIT OCW</a></li> 
 <li><a href="https://ocw.mit.edu/courses/6-00-introduction-to-computer-science-and-programming-fall-2008/video_galleries/video-lectures/">6.00 - Introduction to Computer Science and Programming (Fall 2008) - MIT OCW</a></li> 
 <li><a href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-01sc-introduction-to-electrical-engineering-and-computer-science-i-spring-2011/">6.01SC - Introduction to Electrical Engineering and Computer Science I - MIT OCW</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLgnQpQtFTOGR50iIOtO36nK6aNPtVq98C">Modern C++ Course (2018) - Bonn University</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLgnQpQtFTOGRM59sr3nSL8BmeMZR9GCIA">Modern C++ (Lecture &amp; Tutorials, 2020, Vizzo &amp; Stachniss) - University of Bonn</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLXY5xcFHqg33srpQjC7q7jqITLxcErPCM">UW Madison CS 368 C++ for Java Programmers Fall 2020, by Michael Doescher</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLXY5xcFHqg32r5MZ-HfpA2Tr8Ke2lDYwI">UW Madison CS 354 Machine Organization and Programming spring 2020, 2021, by Michael Doescher</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLcVqWUh-bHiFN2CY1KMTw0-L39iDXlemi">Cornell ECE 4960 Computational and Software Engineering spring 2017, by Edwin Kan</a></li> 
</ul> 
<hr /> 
<h3>Data Structures and Algorithms</h3> 
<ul> 
 <li><a href="https://lupteach.gitlab.io/courses/ucd-ecs36c/online/">ECS 36C - Data Structures and Algorithms (C++) - Spring 2020 - Joël Porquet-Lupine - UC Davis</a></li> 
 <li><a href="https://www.cmi.ac.in/~madhavan/courses/python2021sep/">Programming and Data Structures with Python, 2021-2022, Sem I - by Prof. Madhavan Mukund, CMI</a></li> 
 <li><a href="https://ocw.mit.edu/courses/6-006-introduction-to-algorithms-spring-2020/video_galleries/lecture-videos/">6.006 - Introduction to Algorithms, MIT OCW</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLUl4u3cNGP63EdVPNLG3ToM6LaEUuStEY">MIT 6.006 Introduction to Algorithms, Spring 2020</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLXFMmlk03Dt7Q0xr1PIAriY5623cKiH7V">Algorithms: Design and Analysis 1 - Stanford University</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLXFMmlk03Dt5EMI2s2WQBsLsZl7A5HEK6">Algorithms: Design and Analysis 2 - Stanford University</a></li> 
 <li><a href="https://www.youtube.com/watch?v=1QZDe28peZk&amp;list=PLRdD1c6QbAqJn0606RlOR6T3yUqFWKwmX&amp;index=1">COS 226 Algorithms, Youtube, Princeton - by Robert Sedgewick and Kevin Wayne</a></li> 
 <li><a href="http://www-student.cse.buffalo.edu/~atri/cse331/fall17/index.html">CSE 331 Introduction to Algorithm Design and Analysis, SUNY University at Buffalo, NY - Fall 2017</a> (<a href="https://www.youtube.com/playlist?list=PLZBCR-EGqNpoiHeO17FlLADJ38Kb3EiPU">Lectures</a>) (<a href="https://www.youtube.com/playlist?list=PLZBCR-EGqNpoVyQCIUDHiXnL-zdFD_ixk">Homework Walkthroughs</a>)</li> 
 <li><a href="http://www.cs.sunysb.edu/~algorith/video-lectures/">CSE 373 - Analysis of Algorithms, Stony Brook - Prof Skiena</a></li> 
 <li><a href="http://www.cise.ufl.edu/~sahni/cop3530/">COP 3530 Data Structures and Algorithms, Prof Sahni, UFL</a> (<a href="http://www.cise.ufl.edu/academics/courses/preview/cop3530sahni/">Videos</a>)</li> 
 <li><a href="https://cs.illinois.edu/courses/profile/CS225">CS225 - Data Structures - University of Illinois at Urbana-Champaign</a>(<a href="https://www.youtube.com/playlist?list=PLRdSp8jtJxBqG3KNQPKKB-0Z2hh9omoDo">Video lectures</a>)</li> 
 <li><a href="https://www.youtube.com/playlist?list=PLE621E25B3BF8B9D1">CS2 - Data Structures and Algorithms - Richard Buckland - UNSW</a></li> 
 <li><a href="https://itunes.apple.com/us/course/data-structures/id546468797">Data Structures - Pepperdine University</a></li> 
 <li><a href="http://openclassroom.stanford.edu/MainFolder/CoursePage.php?course=IntroToAlgorithms">CS 161 - Design and Analysis of Algorithms, Prof. Tim Roughgarden, Stanford University</a></li> 
 <li><a href="https://ocw.mit.edu/courses/6-046j-introduction-to-algorithms-sma-5503-fall-2005/">6.046J - Introduction to Algorithms - Fall 2005, MIT OCW</a></li> 
 <li><a href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-006-introduction-to-algorithms-spring-2020/">Introduction to Algorithms (Spring 2020), MIT OCW</a></li> 
 <li><a href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-046j-design-and-analysis-of-algorithms-spring-2015/lecture-videos/">6.046 - Design and Analysis of Algorithms, Spring 2015 - MIT OCW</a></li> 
 <li><a href="https://courses.engr.illinois.edu/cs473/sp2016/lectures.html">CS 473 - Algorithms - University of Illinois at Urbana-Champaign</a> (<a href="http://jeffe.cs.illinois.edu/teaching/algorithms/">Notes - Jeff Erickson</a>) (<a href="https://www.youtube.com/playlist?list=PL0v718LJg-78SFq81e4kJh_rS8XbKZ7Kn">YouTube</a>)</li> 
 <li><a href="https://www.youtube.com/playlist?list=PL07B3F10B48592010">COMP300E - Programming Challenges, Prof Skiena, Hong Kong University of Science and Technology - 2009</a></li> 
 <li><a href="http://www.cs.virginia.edu/~shelat/16s-4102/">16s-4102 - Algorithms, University of Virginia</a> (<a href="https://www.youtube.com/channel/UCxXYk53cSZof2bR_Ax0uJYQ/videos">Youtube</a>)</li> 
 <li><a href="https://inst.eecs.berkeley.edu/~cs61b/">CS 61B - Data Structures (Java) - UC Berkeley</a>(<a href="https://www.youtube.com/watch?v=gG4--V_PpEk&amp;list=PLjuu7kFWxFtZBm-5GifiVpqdAxeW7Hsax">Youtube</a>)</li> 
 <li><a href="https://cs170.org/">CS 170 Algorithms - UCBerkeley</a> <a href="https://www.youtube.com/watch?v=fd5P-8IQwMY&amp;list=PLkFD6_40KJIx8lWWbE-Uk069aZ1R-W-VU&amp;index=2&amp;t=0s">Fall 2018, Youtube</a> <a href="https://www.bilibili.com/video/av43955743/?p=1">Fall 2018,Bilibili</a> <a href="https://www.bilibili.com/video/av26670685/">2013 Bilibili</a></li> 
 <li><a href="http://web.cs.ucdavis.edu/~gusfield/cs122f10/videolist.html">ECS 122A - Algorithm Design and Analysis, UC Davis</a></li> 
 <li><a href="https://courses.cs.washington.edu/courses/csep521/13wi/">CSEP 521 - Applied Algorithms, Winter 2013 - University of Washington</a> (<a href="https://courses.cs.washington.edu/courses/csep521/13wi/video/">Videos</a>)</li> 
 <li><a href="https://nptel.ac.in/courses/106102064/">Data Structures And Algorithms - IIT Delhi</a></li> 
 <li><a href="https://nptel.ac.in/courses/106101060/">Design and Analysis of Algorithms - IIT Bombay</a></li> 
 <li><a href="https://nptel.ac.in/courses/106106127/">Programming, Data Structures and Algorithms - IIT Madras</a></li> 
 <li><a href="https://nptel.ac.in/courses/106106131/">Design and Analysis of Algorithms - IIT Madras</a></li> 
 <li><a href="https://nptel.ac.in/courses/106105157/">Fundamental Algorithms:Design and Analysis - IIT Kharagpur</a></li> 
 <li><a href="https://nptel.ac.in/courses/106105085/">Programming and Data Structure - IIT Kharagpur</a></li> 
 <li><a href="https://nptel.ac.in/courses/106106133/">Programming, Data structures and Algorithms - IIT Madras</a></li> 
 <li><a href="https://nptel.ac.in/courses/106106145/">Programming, Data Structures and Algorithms in Python - IIT Madras</a></li> 
 <li><a href="https://nptel.ac.in/courses/106106130/">Programming and Data structures (PDS) - IIT Madras</a></li> 
 <li><a href="http://www.cise.ufl.edu/~sahni/cop5536/index.html">COP 5536 Advanced Data Structures, Prof Sahni - UFL</a> (<a href="http://www.cise.ufl.edu/academics/courses/preview/cop5536sahni/">Videos</a>)</li> 
 <li><a href="http://theory.stanford.edu/~tim/w16/w16.html">CS 261 - A Second Course in Algorithms, Stanford University</a> (<a href="https://www.youtube.com/playlist?list=PLEGCF-WLh2RJh2yDxlJJjnKswWdoO8gAc">Youtube</a>)</li> 
 <li><a href="http://people.seas.harvard.edu/~minilek/cs224/fall14/index.html">CS 224 - Advanced Algorithms, Harvard University</a> (<a href="http://people.seas.harvard.edu/~minilek/cs224/fall14/lec.html">Lecture Videos</a>) (<a href="https://www.youtube.com/playlist?list=PL2SOU6wwxB0uP4rJgf5ayhHWgw7akUWSf">Youtube</a>)</li> 
 <li><a href="https://www.youtube.com/playlist?list=PLbuogVdPnkCp8X9FHOglnLqFjyvqGLftx">CS 6150 - Advanced Algorithms (Fall 2016), University of Utah</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLbuogVdPnkCqS9Z419eky9m6gJP7zfhO9">CS 6150 - Advanced Algorithms (Fall 2017), University of Utah</a></li> 
 <li><a href="http://web.cs.ucdavis.edu/~gusfield/cs222f07/videolist.html">ECS 222A - Graduate Level Algorithm Design and Analysis, UC Davis</a></li> 
 <li><a href="http://courses.csail.mit.edu/6.851/spring14/lectures/">6.851 - Advanced Data Structures, MIT</a> (<a href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-851-advanced-data-structures-spring-2012/lecture-videos/">MIT OCW</a>)</li> 
 <li><a href="https://www.youtube.com/playlist?list=PL6ogFv-ieghdoGKGg2Bik3Gl1glBTEu8c">6.854 - Advanced Algorithms, MIT</a> (<a href="https://www.youtube.com/channel/UCtv9PiQVUDzsT4yl7524DCg/videos">Prof. Karger lectures</a>)</li> 
 <li><a href="http://theory.stanford.edu/~tim/f14/f14.html">CS264 Beyond Worst-Case Analysis, Fall 2014 - Tim Roughgarden Lecture</a> (<a href="https://www.youtube.com/playlist?list=PLEGCF-WLh2RL8jsZpaf2tLHa5LotFEt5b">Youtube</a>)</li> 
 <li><a href="https://www.youtube.com/playlist?list=PLEGCF-WLh2RJBqmxvZ0_ie-mleCFhi2N4">CS364A Algorithmic Game Theory, Fall 2013 - Tim Roughgarden Lectures</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLEGCF-WLh2RI77PL4gwLld_OU9Zh3TCX9">CS364B Advanced Mechanism Design, Winter 2014 - Tim Roughgarden Lectures</a></li> 
 <li><a href="http://aduni.org/courses/algorithms/index.php?view=cw">Algorithms - Aduni</a></li> 
 <li><a href="http://courses.csail.mit.edu/6.889/fall11/lectures/">6.889 - Algorithms for Planar Graphs and Beyond (Fall 2011) MIT</a></li> 
 <li><a href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-890-algorithmic-lower-bounds-fun-with-hardness-proofs-fall-2014/">6.890 Algorithmic Lower Bounds: Fun with Hardness Proofs - MIT OCW</a></li> 
 <li><a href="https://nptel.ac.in/courses/106104019/">Computer Algorithms - 2 - IIT Kanpur</a></li> 
 <li><a href="https://nptel.ac.in/courses/106104120/">Parallel Algorithm - IIT Kanpur</a></li> 
 <li><a href="https://nptel.ac.in/courses/106108054/">Graph Theory - IISC Bangalore</a></li> 
 <li><a href="https://www.youtube.com/watch?v=92S4zgXN17o&amp;list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P">Data Structures - mycodeschool</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLyzcvvgje7aD_DjpmhFzQ9DVS8zzhrgp6">Algorithmic Game Theory, Winter 2020/21 - Uni Bonn</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLlIlhe_rS4U1MfB0NzG4IWb7CM0xKkx4d">NETS 4120: Algorithmic Game Theory, Spring 2023 - UPenn</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PL3eEm6KzZ3lF2TlVOnPyJHyGWJhUogn-D">Introduction to Game Theory and Mechanism Design - IIT Kanpur</a></li> 
 <li><a href="https://scs.hosted.panopto.com/Panopto/Pages/Sessions/List.aspx#folderID=%2253c58248-7fd4-4f71-8774-af85013a570a%22&amp;page=1">15-850 Advanced Algorithms - CMU Spring 2023</a></li> 
 <li><a href="https://people.eecs.berkeley.edu/~prasad/spring2021.html">CS 270. Combinatorial Algorithms and Data Structures, Spring 2021</a> (<a href="https://www.youtube.com/playlist?list=PLfkeJ2f4i0AfWApBP8X8YvQfN4WbRQTC3">Youtube</a>)</li> 
 <li><a href="https://scs.hosted.panopto.com/Panopto/Pages/Sessions/List.aspx#folderID=%2253c58248-7fd4-4f71-8774-af85013a570a%22&amp;page=1">CMU 15 850 Advanced Algorithms spring 2023, by Anupam Gupta</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PL682UO4IMem-SSHdZel8BJ0Ti2yp65spI">UC Berkeley CS 294-165 Sketching Algorithms fall 2020, by Jelani Nelson</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PL682UO4IMem_OA8_wY3nnSDLOSWr3PgYa">UIUC CS 498 ABD / CS 598 CSC Algorithms for Big Data fall 2020, by Chandra Chekuri</a></li> 
 <li><a href="https://people.scs.carleton.ca/~maheshwa/courses/ADS/ADS-S20.html">Algorithms for Data Science spring 2021, by Anil Maheshwari </a></li> 
 <li><a href="http://www.cs.cmu.edu/~dwoodruf/teaching/15859-fall20/index.html">CMU 15 859 Algorithms for Big Data fall 2020, by David Woodruff</a></li> 
</ul> 
<hr /> 
<h3>Systems Programming</h3> 
<ul> 
 <li><a href="https://scs.hosted.panopto.com/Panopto/Pages/Sessions/List.aspx#folderID=%22b96d90ae-9871-4fae-91e2-b1627b43e25e%22&amp;maxResults=150">15-213 Introduction to Computer Systems, Fall 2015 - CMU</a></li> 
 <li><a href="https://www.cs.uic.edu/CS361fall13">CS361 - COMPUTER SYSTEMS - UIC</a></li> 
 <li><a href="https://web.archive.org/web/20210423030302/https://ntuck-neu.site/2020-09/cs3650/">CS 3650 - Computer Systems - Fall 2020 - Nat Tuck - NEU</a> (<a href="https://www.youtube.com/playlist?list=PLtg_A_3rzLAtBuwQp6mA3WveYw9Q7GzIZ">Lectures - YouTube</a>)</li> 
 <li><a href="https://www.eng.utah.edu/~cs4400/">CS 4400 – Computer Systems Fall 2016 - UoUtah</a></li> 
 <li><a href="http://aduni.org/courses/systems/index.php?view=cw">Systems - Aduni</a></li> 
 <li><a href="https://web.stanford.edu/class/archive/cs/cs110/cs110.1202/">CS110: Principles of Computer Systems - Stanford</a></li> 
 <li><strong>Operating Systems</strong> 
  <ul> 
   <li><a href="https://lupteach.gitlab.io/courses/ucd-ecs150/online/">ECS 150 - Operating Systems and Systems Programming - Fall 2020 - Joël Porquet-Lupine - UC Davis</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL3swII2vlVoVbav6FV98pidq6BsTN4u56">CS124 Operating Systems - California Institute of Technology, Fall 2018 - Youtube</a></li> 
   <li><a href="https://archive.org/details/ucberkeley-webcast-PL-XXv-cvA_iBDyz-ba4yDskqMDY6A1w_c?sort=titleSorter">CS 162 Operating Systems and Systems Programming, Spring 2015 - University of California, Berkeley</a></li> 
   <li><a href="http://rust-class.org/pages/classes.html">CS 4414 - Operating Systems, University of Virginia (rust-class)</a></li> 
   <li><a href="https://www.cs.virginia.edu/~cr4bd/4414/F2018/schedule.html">CS 4414 Operating Systems, Fall 2018 - University of Virginia</a></li> 
   <li><a href="https://www.ops-class.org/courses/buffalo/CSE421_Spring2016/">CSE 421/521 - Introduction to Operating Systems, SUNY University at Buffalo, NY - Spring 2016</a> (<a href="https://www.youtube.com/playlist?list=PLE6LEE8y2Jp-kbEcVR2W3vfx0Pdca0BD3">Lectures - YouTube</a>) (<a href="https://www.youtube.com/playlist?list=PLE6LEE8y2Jp_YJn8wu9aJTPOgeWqiaJDF">Recitations 2016</a>) (<a href="https://www.youtube.com/playlist?list=PLE6LEE8y2Jp9PC8fyzc2meL4XvrVSyP8O">Assignment walkthroughs</a>)</li> 
   <li><a href="https://www.youtube.com/playlist?list=PLacuG5pysFbDTmsCRGWsMW_PzIOpXnckw">CS 377 - Operating Systems, Fall 16 - Umass OS</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLfciLKR3SgqNJKKIKUliWoNBBH1VHL3AP">6.828 - Operating System Engineering [Fall 2014]</a></li> 
   <li><a href="https://pdos.csail.mit.edu/6.828/2020/schedule.html">6.S081 - Operating System Engineering [Fall 2020]</a></li> 
   <li><a href="https://www.youtube.com/view_play_list?p=AB7D5CA7E262B0E2">CSE 30341 - Operating Systems, Spr 2008</a></li> 
   <li><a href="https://courses.cs.washington.edu/courses/csep551/14au/video/">CSEP 551 Operating Systems Autumn 2014 - University of Washington</a></li> 
   <li><a href="https://nptel.ac.in/courses/106106144/">Introduction to Operating Systems - IIT Madras</a></li> 
   <li><a href="http://www.infocobuild.com/education/audio-video-courses/computer-science/cs194-spring2013-berkeley.html">CS194 Advanced Operating Systems Structures and Implementation, Spring 2013 InfoCoBuild, UC Berkeley</a></li> 
   <li><a href="https://www.youtube.com/view_play_list?p=22B10D854588E20C">CSE 60641 - Graduate Operating Systems, Fall 08</a></li> 
   <li><a href="https://stevens.netmeister.org/631/">Advanced Programming in the UNIX Environment</a></li> 
  </ul> </li> 
 <li><strong>Distributed Systems</strong> 
  <ul> 
   <li><a href="https://www.youtube.com/playlist?list=PLacuG5pysFbC68w0PW3huMHDDRNsDCTjp">CS 677 - Distributed Operating Systems, Spring 16 - Umass OS</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLawkBQ15NDEkDJ5IyLIJUTZ1rRM9YQq6N">CS 436 - Distributed Computer Systems - U Waterloo</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLkcQbKbegkMqiWf7nF8apfMRL4P4sw8UL">6.824 - Distributed Systems, Spring 2015 - MIT</a></li> 
   <li><a href="https://pdos.csail.mit.edu/6.824/schedule.html">6.824 Distributed Systems - Spring 2020 - MIT</a> (<a href="https://www.youtube.com/playlist?list=PLrw6a1wE39_tb2fErI4-WkMbsvGQk9_UB">Youtube</a>)</li> 
   <li><a href="https://www.youtube.com/playlist?list=PLeKd45zvjcDFUEv_ohr_HdUFe97RItdiB">Distributed Systems Lecture Series</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL700757A5D4B3F368">Distributed Algorithms, https://canvas.instructure.com/courses/902299</a></li> 
   <li><a href="https://courses.cs.washington.edu/courses/csep552/13sp/">CSEP 552 - PMP Distributed Systems, Spring 2013 - University of Washington</a> (<a href="https://courses.cs.washington.edu/courses/csep552/13sp/video/">Videos</a>)</li> 
   <li><a href="https://courses.cs.washington.edu/courses/cse490h/08au/lectures.htm">CSE 490H - Scalable Systems: Design, Implementation and Use of Large Scale Clusters, Autumn 2008 - University of Washington</a> (<a href="https://courses.cs.washington.edu/courses/cse490h/08au/video.htm">Videos</a>)</li> 
   <li><a href="https://www.youtube.com/playlist?list=PLFd87qVsaLhOkTLvfp6MC94iFa_1c9wrU">MOOC - Cloud Computing Concepts - UIUC</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLUJ7JmcrTifBROWODSG8wgyl20XgBuE-N">Distributed Systems (Prof. Pallab Dasgupta)</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLx3mQFFeHPjndmQ0iP9j6C58b90hqGa0X">EdX KTHx ID2203 Reliable Distributed Algorithms</a></li> 
   <li><a href="http://www.ifis.cs.tu-bs.de/teaching/ss-15/ddm">Distributed Data Management - Technische Universität Braunschweig, Germany</a></li> 
   <li><a href="http://www.ifis.cs.tu-bs.de/teaching/ws-1516/IRWS">Information Retrieval and Web Search Engines - Technische Universität Braunschweig, Germany</a></li> 
   <li><a href="https://www.tele-task.de/series/729/">Middleware and Distributed Systems (WS 2009/10) - Dr. Martin von Löwis - HPI</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLNPUF5QyWU8O0Wd8QDh9KaM1ggsxspJ31">CSE 138 - Distributed Systems - UC Santa Cruz, Spring 2020</a> (<a href="https://www.youtube.com/playlist?list=PLNPUF5QyWU8PydLG2cIJrCvnn5I_exhYx">2021</a>)</li> 
  </ul> </li> 
 <li><strong>Real-Time Systems</strong> 
  <ul> 
   <li><a href="http://faculty.cs.tamu.edu/bettati/Courses/663/Video/presentation.html">CPCS 663 - Real-Time Systems: Video Material - TAMU</a></li> 
   <li><a href="https://nptel.ac.in/courses/106105036/">Real Time Systems - IIT Kharagpur</a></li> 
  </ul> </li> 
 <li><a href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-172-performance-engineering-of-software-systems-fall-2018/">6.172 Performance Engineering of Software Systems - MIT OCW</a></li> 
 <li><a href="https://nptel.ac.in/courses/106106048/">Performance Evaluation of Computer Systems - IIT Madras</a></li> 
 <li><a href="https://nptel.ac.in/courses/106108058/">Storage Systems - IISC Bangalore</a></li> 
 <li><a href="http://www.cse.fau.edu/~bob/courses/map6264/">MAP6264 - Queueing Theory - FAU</a>(<a href="https://vimeo.com/album/171324/">Video Lectures</a>)</li> 
 <li><a href="http://web.stanford.edu/class/ee380/">EE 380 Colloquium on Computer Systems - Stanford University</a> (<a href="https://www.youtube.com/playlist?list=PLoROMvodv4rMWw6rRoeSpkiseTHzWj6vu">Lecture videos</a>)</li> 
</ul> 
<hr /> 
<h3>Database Systems</h3> 
<ul> 
 <li><a href="http://www.cse.psu.edu/~wul2/cmpsc431w/">CMPSC 431W Database Management Systems, Fall 2015 - Penn State University</a> <a href="https://www.youtube.com/playlist?list=PLstRzn3gXZMdXqAiVJ1NN2CoyXHqma7pQ">Lectures - YouTube</a></li> 
 <li><a href="http://users.cms.caltech.edu/~donnie/cs121/">CS121 - Introduction to Relational Database Systems, Fall 2016 - Caltech</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLbuogVdPnkCrercQNP9tTsjjPdgRVYvC7">CS 5530 - Database Systems, Spring 2016 - University of Utah</a></li> 
 <li><a href="https://www.tele-task.de/series/1224/">Distributed Data Management (WT 2018/19) - HPI University of Potsdam</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PL6hGtHedy2Z4EkgY76QOcueU8lAC4o6c3">MOOC - Database Stanford Dbclass</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLTPQEx-31JXjQYrUKvAjUTWgCYluHGs_L">CSEP 544, Database Management Systems, Au 2015 - University of Washington</a></li> 
 <li><a href="https://nptel.ac.in/courses/106106093/">Database Design - IIT Madras</a></li> 
 <li><a href="https://nptel.ac.in/courses/106104135/">Fundamentals of Database Systems - IIT Kanpur</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLdQddgMBv5zEhlpqdiUcf9aTNEtmESgyl">Principles of Database Management, Bart Baesens</a></li> 
 <li><a href="https://itunes.apple.com/us/podcast/fit9003-database-systems-design/id306569364">FIT9003 Database Systems Design - Monash University</a></li> 
 <li><a href="https://15445.courses.cs.cmu.edu/fall2022/">15-445 - Introduction to Database Systems, CMU</a> (<a href="https://www.youtube.com/playlist?list=PLSE8ODhjZXjYutVzTeAds8xUt1rcmyT7x">YouTube-2017</a>, <a href="https://www.youtube.com/playlist?list=PLSE8ODhjZXja3hgmuwhf89qboV1kOxMx7">YouTube-2018</a>, <a href="https://www.youtube.com/playlist?list=PLSE8ODhjZXjbohkNBWQs_otTrBTrjyohi">YouTube-2019</a>, <a href="https://www.youtube.com/playlist?list=PLSE8ODhjZXjZaHA6QcxDfJ0SIWBzQFKEG">YouTube-2021</a>, <a href="https://www.youtube.com/playlist?list=PLSE8ODhjZXjaKScG3l0nuOiDTTqpfnWFf">YouTube-2022</a>)</li> 
 <li><a href="http://15721.courses.cs.cmu.edu/spring2017">15-721 - Database Systems, CMU</a> (<a href="https://www.youtube.com/playlist?list=PLSE8ODhjZXjYgTIlqf4Dy9KQpQ7kn1Tl0">YouTube-2017</a>, <a href="https://www.youtube.com/playlist?list=PLSE8ODhjZXjbisIGOepfnlbfxeH7TW-8O">YouTube-2016</a>)</li> 
 <li><a href="https://www.youtube.com/playlist?list=PLSE8ODhjZXja7K1hjZ01UTVDnGQdx5v5U">15-721 Advanced Database Systems (Spring 2019) - CMU</a></li> 
 <li><a href="http://users.cms.caltech.edu/~donnie/cs122/">CS122 - Relational Database System Implementation, Winter 2014-2015 - Caltech</a></li> 
 <li><a href="https://sites.google.com/site/cs186spring2015/home/schedule-and-notes">CS 186 - Database Systems, UC Berkeley, Spring 2015</a> (<a href="http://www.infocobuild.com/education/audio-video-courses/computer-science/cs186-spring2015-berkeley.html">Lectures- InfoCoBuild</a>)</li> 
 <li><a href="https://www.cs.utah.edu/~lifeifei/cs6530/">CS 6530 - Graduate-level Database Systems, Fall 2016, University of Utah</a> (<a href="https://www.youtube.com/playlist?list=PLbuogVdPnkCqwHUcieMrytP453Ep0y6eI">Lectures - YouTube</a>)</li> 
 <li><a href="https://www.youtube.com/playlist?list=PLfciLKR3SgqOxCy1TIXXyfTqKzX2enDjK">6.830/6.814 - Database Systems [Fall 2014]</a></li> 
 <li><a href="http://groups.inf.ed.ac.uk/vision/VIDEO/2014/da.htm">Informatics 1 - Data &amp; Analysis 2014/15- University of Edinburgh</a></li> 
 <li><a href="http://aduni.org/courses/databases/index.php?view=cw">Database Management Systems, Aduni</a></li> 
 <li><a href="https://ocw.mit.edu/resources/res-ll-005-d4m-signal-processing-on-databases-fall-2012/">D4M - Signal Processing on Databases</a></li> 
 <li><a href="https://open.hpi.de/courses/imdb2013/items/72j6pftms3dOSunM98JhfW">In-Memory Data Management (2013)Prof. Hasso Plattner - HPI</a></li> 
 <li><a href="https://www.tele-task.de/series/1285/">Distributed Data Management (WT 2019/20) - Dr. Thorsten Papenbrock - HPI</a></li> 
 <li><a href="https://uci.yuja.com/V/PlayList?node=9933576&amp;a=1583628376&amp;autoplay=1">CS122d - NoSQL Data Management (Spring 21) - Prof. Mike Carey - UC Irvine</a></li> 
</ul> 
<hr /> 
<h3>Software Engineering</h3> 
<ul> 
 <li><strong>Object Oriented Design</strong> 
  <ul> 
   <li><a href="https://engineering.purdue.edu/OOSD/F2008/F2008.html">ECE 462 Object-Oriented Programming using C++ and Java - Purdue</a></li> 
   <li><a href="http://aduni.org/courses/java/index.php?view=cw">Object-oriented Program Design and Software Engineering - Aduni</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL6iDJCG2nkhfNlig8NY5ePPfGvtQX6yLa">OOSE - Object-Oriented Software Engineering, Dr. Tim Lethbridge</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL6XklZATqYx9dj72MKG6wLYjljeB2odra">Object Oriented Systems Analysis and Design (Systems Analysis and Design in a Changing World)</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLZ9NgFYEMxp4ZsvD10uXmClGnukcu3Uff">CS 251 - Intermediate Software Design (C++ version) - Vanderbilt University</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLJ9pm_Rc9HesnkwKlal_buSIHA-jTZMpO">OOSE - Software Dev Using UML and Java</a></li> 
   <li><a href="https://nptel.ac.in/courses/106105153/">Object-Oriented Analysis and Design - IIT Kharagpur</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL0C5D85DBA20E685C">CS3 - Design in Computing - Richard Buckland UNSW</a></li> 
   <li><a href="http://groups.inf.ed.ac.uk/vision/VIDEO/2014/inf1op.htm">Informatics 1 - Object-Oriented Programming 2014/15- University of Edinburgh</a></li> 
   <li><a href="http://groups.inf.ed.ac.uk/vision/VIDEO/2015/seoc.htm">Software Engineering with Objects and Components 2015/16- University of Edinburgh</a></li> 
  </ul> </li> 
 <li><strong>Software Engineering</strong> 
  <ul> 
   <li><a href="https://www.youtube.com/playlist?list=PL-XXv-cvA_iCfQHHS7rxlfHFsU4aQW1IF">Computer Science 169- Software Engineering - Spring 2015 - UCBerkeley</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLkFD6_40KJIxCKgzL0uysjsAtfY3JawLS">Computer Science 169- Software Engineering - Fall 2019 - UCBerkeley</a></li> 
   <li><a href="http://www.cs.cornell.edu/courses/cs5150/2014fa/materials.html">CS 5150 - Software Engineering, Fall 2014 - Cornell University</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLBdajHWwi0JCn87QuFT3e58mekU0-6WUT">Introduction to Service Design and Engineering - University of Trento, Italy</a></li> 
   <li><a href="https://www.youtube.com/watch?v=3zdfCR6c8vw&amp;list=PLuhjguFxSeVLvKvWwTUIpVwXdLtZPX1ZS">CS 164 Software Engineering - Harvard</a></li> 
   <li><a href="https://nptel.ac.in/courses/106108102/">System Analysis and Design - IISC Bangalore</a></li> 
   <li><a href="https://nptel.ac.in/courses/106101061/">Software Engineering - IIT Bombay</a></li> 
   <li><a href="https://www.tele-task.de/series/1005/">Dependable Systems (SS 2014)- HPI University of Potsdam</a></li> 
   <li><a href="https://nptel.ac.in/courses/106105150/">Software Testing - IIT Kharagpur</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLAwxTw4SYaPkWVHeC_8aSIbSxE_NXI76g">Software Testing - Udacity, course-cs258 | 2015</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLAwxTw4SYaPkxK63TiT88oEe-AIBhr96A">Software Debugging - Udacity, course-cs259 | 2015</a></li> 
   <li><a href="https://www.youtube.com/watch?v=jouBM4AH0jw&amp;list=PLjEglKdMOevU2STTGq79duxTXDFuO-k1H&amp;index=2">Software Engineering - Bauhaus-Uni Weimar</a></li> 
  </ul> </li> 
 <li><strong>Software Architecture</strong> 
  <ul> 
   <li><a href="http://video.bilkent.edu.tr/course_videos.php?courseid=10">CS 411 - Software Architecture Design - Bilkent University</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLAwxTw4SYaPkMTetlG7xKWaI5ZAZFX8fL">MOOC - Software Architecture &amp; Design - Udacity</a></li> 
  </ul> </li> 
 <li><strong>Concurrency</strong> 
  <ul> 
   <li><a href="http://cs.brown.edu/courses/cs176/course_information.shtml">CS176 - Multiprocessor Synchronization - Brown University</a> (<a href="http://www.brown.edu/cis/sta/dev/herlihy_csci1760_fa12/#vid">Videos from 2012</a>)</li> 
   <li><a href="https://www.youtube.com/playlist?list=PLZ9NgFYEMxp4KSJPUyaQCj7x--NQ6kvcX">CS 282 (2014): Concurrent Java Network Programming in Android</a></li> 
   <li><a href="https://courses.cs.washington.edu/courses/csep506/11sp/Home.html">CSE P 506 – Concurrency, Spring 2011 - University of Washington</a> (<a href="https://courses.cs.washington.edu/courses/csep506/11sp/Videos.html">Videos</a>)</li> 
   <li><a href="https://courses.cs.washington.edu/courses/csep524/10sp/">CSEP 524 - Parallel Computation - University of Washington</a> (<a href="https://courses.cs.washington.edu/courses/csep524/10sp/lectures/video.html">Videos</a>)</li> 
   <li><a href="https://www.tele-task.de/series/977/">Parallel Programming Concepts (WT 2013/14) - HPI University of Potsdam</a></li> 
   <li><a href="https://www.tele-task.de/series/924/">Parallel Programming Concepts (WT 2012/13) - HPI University of Potsdam</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL6RdenZrxrw-UKfRL5smPfFFpeqwN3Dsz">UIUC ECE 408 / CS 408 Applied Parallel Programming spring 2018, fall 2022, by Wen-mei Hwu, Sanjay Patel</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLRRuQYjFhpmspsME4LmLbuCG1VHbJmIcy">UIUC ECE 508 / CS 508 Manycore Parallel Algorithms spring 2019, by Wen-mei Hwu</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL682UO4IMem9cAjfy_RPjAc6k-HPYpTa9">UIUC CS 420 / ECE 492 / CSE 402 Introduction to Parallel Programming for Scientists and Engineers fall 2015, by Sanjay Kale</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLAtMgFDMfGy2mysjPHN_d1cf9sR1muRkq">Stanford CME 213 Introduction to Parallel Computing using MPI, openMP, and CUDA winter 2020, by Eric Darve</a></li> 
  </ul> </li> 
 <li><strong>Mobile Application Development</strong> 
  <ul> 
   <li><a href="https://www.youtube.com/playlist?list=PLkHsKoi6eZnwilGXUc95CqS7Vw4uLLDLG">MOOC Programming Mobile Applications for Android Handheld Systems - University of Maryland</a></li> 
   <li><a href="https://cs193p.sites.stanford.edu/">CS 193p - Developing Applications for iOS, Stanford University</a></li> 
   <li><a href="http://cs76.tv/2013/summer/">CS S-76 Building Mobile Applications - Harvard</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLZ9NgFYEMxp7lylj-XC8h1kjatOjbh9ne">CS 251 (2015): Intermediate Software Design</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL6gx4Cwl9DGBsvRxJJOzG4r4k_zLKrnxl">Android App Development for Beginners Playlist - thenewboston</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL2F07DBCDCC01493A">Android Application Development Tutorials - thenewboston</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLAwxTw4SYaPnMwH5-FNkErnnq_aSy706S">MOOC - Developing Android Apps - Udacity</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLAwxTw4SYaPmETCT07vnDSiIaUBuyut0X">MOOC - Advanced Android App Development - Udacity</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLF3EEB647F6B52F03">CSSE490 Android Development Rose-Hulman Winter 2010-2011, Dave Fisher</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL96C635E4DCD393A8">iOS Course, Dave Fisher</a></li> 
   <li><a href="https://itunes.apple.com/us/course/developing-ipad-applications/id499050344">Developing iPad Applications for Visualization and Insight - Carnegie Mellon University</a></li> 
   <li><a href="https://nptel.ac.in/courses/106106147/">Mobile Computing - IIT Madras</a></li> 
   <li><a href="https://www.youtube.com/watch?v=8EmbrZJwMOI&amp;list=PLjEglKdMOevWv4zPW0diw7iJFdT7s4sTP">Mobile Information Systems - Bauhaus-Uni Weimar</a></li> 
  </ul> </li> 
</ul> 
<hr /> 
<h3>Artificial Intelligence</h3> 
<ul> 
 <li><a href="https://cs50.harvard.edu/ai/2023/">CS50 - Introduction to Artificial Intelligence with Python (and Machine Learning), Harvard OCW</a></li> 
 <li><a href="http://www.infocobuild.com/education/audio-video-courses/computer-science/cs188-spring2015-berkeley.html">CS 188 - Introduction to Artificial Intelligence, UC Berkeley - Spring 2015</a></li> 
 <li><a href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-034-artificial-intelligence-fall-2010/lecture-videos/">6.034 Artificial Intelligence, MIT OCW</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLoROMvodv4rO1NB9TD4iUZ3qghGEGtqNX">CS221: Artificial Intelligence: Principles and Techniques - Autumn 2019 - Stanford University</a></li> 
 <li><a href="http://www.cs.cmu.edu/~zkolter/course/15-780-s14/lectures.html">15-780 - Graduate Artificial Intelligence, Spring 14, CMU</a></li> 
 <li><a href="https://courses.cs.washington.edu/courses/csep573/03wi/lectures/index.htm">CSE 592 Applications of Artificial Intelligence, Winter 2003 - University of Washington</a></li> 
 <li><a href="http://www.cs.ubc.ca/~mack/CS322/">CS322 - Introduction to Artificial Intelligence, Winter 2012-13 - UBC</a> (<a href="https://www.youtube.com/playlist?list=PLDPnGbm0sUmpzvcGvktbz446SLdFbfZVU">YouTube</a>)</li> 
 <li><a href="https://www.youtube.com/playlist?list=PLUenpfvlyoa1iiSbGy9BBewgiXjzxVgBd">CS 4804: Introduction to Artificial Intelligence, Fall 2016</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLUenpfvlyoa0PB6_kqJ9WU7m6i6z1RhfJ">CS 5804: Introduction to Artificial Intelligence, Spring 2015</a></li> 
 <li><a href="https://nptel.ac.in/courses/106105077/">Artificial Intelligence - IIT Kharagpur</a></li> 
 <li><a href="https://nptel.ac.in/courses/106106126/">Artificial Intelligence - IIT Madras</a></li> 
 <li><a href="https://nptel.ac.in/courses/106105079/">Artificial Intelligence(Prof.P.Dasgupta) - IIT Kharagpur</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLAwxTw4SYaPlqMkzr4xyuD6cXTIgPuzgn">MOOC - Intro to Artificial Intelligence - Udacity</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLAwxTw4SYaPkCSYXw6-a_aAoXVKLDwnHK">MOOC - Artificial Intelligence for Robotics - Udacity</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLbQ3Aya0VERDoDdbMogU9EASJGWris9qG">Graduate Course in Artificial Intelligence, Autumn 2012 - University of Washington</a></li> 
 <li><a href="http://groups.inf.ed.ac.uk/vision/VIDEO/2015/abs.htm">Agent-Based Systems 2015/16- University of Edinburgh</a></li> 
 <li><a href="http://groups.inf.ed.ac.uk/vision/VIDEO/2014/inf2d.htm">Informatics 2D - Reasoning and Agents 2014/15- University of Edinburgh</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PL39B5D3AFC249556A">Artificial Intelligence - Hochschule Ravensburg-Weingarten</a></li> 
 <li><a href="http://www.ifis.cs.tu-bs.de/teaching/ws-1516/KBS">Deductive Databases and Knowledge-Based Systems - Technische Universität Braunschweig, Germany</a></li> 
 <li><a href="https://nptel.ac.in/courses/106106140/">Artificial Intelligence: Knowledge Representation and Reasoning - IIT Madras</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLoOmvuyo5UAeihlKcWpzVzB51rr014TwD">Semantic Web Technologies by Dr. Harald Sack - HPI</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLoOmvuyo5UAcBXlhTti7kzetSsi1PpJGR">Knowledge Engineering with Semantic Web Technologies by Dr. Harald Sack - HPI</a></li> 
 <li><a href="https://sites.wustl.edu/jeffheaton/t81-558/">T81-558: Applications of Deep Neural Networks by Jeff Heaton, 2022, Washington University in St. Louis</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLZ-krWGO-UEz84TseDMIlx2Set6xZp0YP">MSU programming for AI</a></li> 
</ul> 
<hr /> 
<h3>Machine Learning</h3> 
<ul> 
 <li><strong>Introduction to Machine Learning</strong> 
  <ul> 
   <li><a href="https://course18.fast.ai/ml">Introduction to Machine Learning for Coders</a></li> 
   <li><a href="http://www.dataschool.io/15-hours-of-expert-machine-learning-videos/">MOOC - Statistical Learning, Stanford University</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLgKuh-lKre11GbZWneln-VZDLHyejO7YD">Foundations of Machine Learning Boot Camp, Berkeley Simons Institute</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLuz4CTPOUNi6BfMrltePqMAHdl5W33-bC">CS155 - Machine Learning &amp; Data Mining, 2017 - Caltech</a> (<a href="http://www.yisongyue.com/courses/cs155/2017_winter/">Notes</a>) (<a href="https://www.youtube.com/playlist?list=PL5HdMttxBY0BVTP9y7qQtzTgmcjQ3P0mb">2016</a>)</li> 
   <li><a href="https://work.caltech.edu/lectures.html">CS 156 - Learning from Data, Caltech</a></li> 
   <li><a href="http://www.cs.cmu.edu/~ninamf/courses/601sp15/lectures.shtml">10-601 - Introduction to Machine Learning (MS) - Tom Mitchell - 2015, CMU</a> (<a href="https://www.youtube.com/playlist?list=PLAJ0alZrN8rD63LD0FkzKFiFgkOmEtltQ">YouTube</a>)</li> 
   <li><a href="https://www.youtube.com/playlist?list=PL7k0r4t5c10-g7CWCnHfZOAxLaiNinChk">10-601 Machine Learning | CMU | Fall 2017</a></li> 
   <li><a href="http://www.cs.cmu.edu/~tom/10701_sp11/lectures.shtml">10-701 - Introduction to Machine Learning (PhD) - Tom Mitchell, Spring 2011, CMU</a> (<a href="https://www.youtube.com/playlist?list=PL7y-1rk2cCsDZCVz2xS7LrExqidHpJM3B">Fall 2014</a>) (<a href="https://www.youtube.com/playlist?list=PLZSO_6-bSqHTTV7w9u7grTXBHMH-mw3qn">Spring 2015 by Alex Smola</a>)</li> 
   <li><a href="https://www.youtube.com/playlist?list=PLpqQKYIU-snAPM89YPPwyQ9xdaiAdoouk">10 - 301/601 - Introduction to Machine Learning - Spring 2020 - CMU</a></li> 
   <li><a href="https://scs.hosted.panopto.com/Panopto/Pages/Sessions/List.aspx#folderID=%22d5bf275d-ff88-4bf6-a865-b065010f55c2%22">10 - 301/601 - Introduction to Machine Learning - Fall 2023 - CMU</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLxC_ffO4q_rW0bqQB80_vcQB09HOA3ClV">6.036 - Machine Learning, Broderick - MIT Fall 2020</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLF-wkqRv4u1Y-Bret-wrcPypPCZ3Gg_3L">Mediterranean Machine Learning summer school 2023</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL2UML_KCiC0UlY7iCQDSiGDMovaupqc83">Applied Machine Learning (Cornell Tech CS 5787, Fall 2020)</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLoROMvodv4rNH7qL6-efu_q2_bPuy0adh">Stanford CS229: Machine Learning Course | Summer 2019 (Anand Avati)</a> (<a href="https://www.youtube.com/playlist?list=PLoROMvodv4rNyWOpJg_Yh4NSqI4Z4vOYy">Spring 2022</a>)</li> 
   <li><a href="https://www.youtube.com/playlist?list=PLVNifWxslHCDlbyitaLLYBOAEPbmF1AHg">CMS 165 Foundations of Machine Learning and Statistical Inference - 2020 - Caltech</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL34iyE0uXtxo7vPXGFkmm6KbgZQwjf9Kf">Microsoft Research - Machine Learning Course</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLQcasX5-oG91TgY6A_gz-IW7YSpwdnD2O">CS 446 - Machine Learning, Fall 2016, UIUC</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLE6Wd9FR--Ecf_5nCbnSQMHqORpiChfJf">undergraduate machine learning at UBC 2012, Nando de Freitas</a></li> 
   <li><a href="https://see.stanford.edu/Course/CS229">CS 229 - Machine Learning - Stanford University</a> (<a href="https://www.youtube.com/playlist?list=PLoROMvodv4rMiGQp3WXShtMGgzqpfVfbU">Autumn 2018</a>)</li> 
   <li><a href="https://people.eecs.berkeley.edu/~jrs/189/">CS 189/289A Introduction to Machine Learning, Prof Jonathan Shewchuk - UCBerkeley</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLWmXHcz_53Q02ZLeAxigki1JZFfCO6M-b">CPSC 340: Machine Learning and Data Mining (2018) - UBC</a></li> 
   <li><a href="http://www.cs.cornell.edu/courses/cs4780/2013fa/">CS4780/5780 Machine Learning, Fall 2013 - Cornell University</a></li> 
   <li><a href="http://www.cs.cornell.edu/courses/cs4780/2018fa/page18/index.html">CS4780/5780 Machine Learning, Fall 2018 - Cornell University</a> (<a href="https://www.youtube.com/playlist?list=PLl8OlHZGYOQ7bkVbuRthEsaLr7bONzbXS">Youtube</a>)</li> 
   <li><a href="https://www.youtube.com/playlist?list=PLEQDy5tl3xkMzk_zlo2DPzXteCquHA8bQ">CSE474/574 Introduction to Machine Learning - SUNY University at Buffalo</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLbuogVdPnkCozRSsdueVwX7CF9N4QWL0B">CS 5350/6350 - Machine Learning, Fall 2016, University of Utah</a></li> 
   <li><a href="https://filebox.ece.vt.edu/~s15ece5984/">ECE 5984 Introduction to Machine Learning, Spring 2015 - Virginia Tech</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLUenpfvlyoa0rMoE5nXA8kdctBKE9eSob">CSx824/ECEx242 Machine Learning, Bert Huang, Fall 2015 - Virginia Tech</a></li> 
   <li><a href="http://www.cs.toronto.edu/~rsalakhu/STA4273_2015/lectures.html">STA 4273H - Large Scale Machine Learning, Winter 2015 - University of Toronto</a></li> 
   <li><a href="https://www.youtube.com/channel/UCR4_akQ1HYMUcDszPQ6jh8Q/videos">CS 485/685 Machine Learning, Shai Ben-David, University of Waterloo</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLehuLRPyt1HzXDemu7K4ETcF0Ld_B5adG">STAT 441/841 Classification Winter 2017 , Waterloo</a></li> 
   <li><a href="https://www.youtube.com/channel/UCIE4UdPoCJZMAZrTLuq-CPQ/videos">10-605 - Machine Learning with Large Datasets, Fall 2016 - CMU</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLruBu5BI5n4aFpG32iMbdWoRVAA-Vcso6">Information Theory, Pattern Recognition, and Neural Networks - University of Cambridge</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLVxFQjPUB2cnYGZPAGG52OQc9SpWVKjjB">Python and machine learning - Stanford Crowd Course Initiative</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLAwxTw4SYaPl0N6-e1GvyLp5-MUMUjOKo">MOOC - Machine Learning Part 1a - Udacity/Georgia Tech</a> (<a href="https://www.youtube.com/playlist?list=PLAwxTw4SYaPlkESDcHD-0oqVx5sAIgz7O">Part 1b</a> <a href="https://www.youtube.com/playlist?list=PLAwxTw4SYaPmaHhu-Lz3mhLSj-YH-JnG7">Part 2</a> <a href="https://www.youtube.com/playlist?list=PLAwxTw4SYaPnidDwo9e2c7ixIsu_pdSNp">Part 3</a>)</li> 
   <li><a href="http://groups.inf.ed.ac.uk/vision/VIDEO/2015/mlpr.htm">Machine Learning and Pattern Recognition 2015/16- University of Edinburgh</a></li> 
   <li><a href="http://groups.inf.ed.ac.uk/vision/VIDEO/2015/iaml.htm">Introductory Applied Machine Learning 2015/16- University of Edinburgh</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLuRaSnb3n4kRDZVU6wxPzGdx1CN12fn0w">Pattern Recognition Class (2012)- Universität Heidelberg</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLcXJymqaE9PPGGtFsTNoDWKl-VNVX5d6b">Introduction to Machine Learning and Pattern Recognition - CBCSL OSU</a></li> 
   <li><a href="https://nptel.ac.in/courses/106105152/">Introduction to Machine Learning - IIT Kharagpur</a></li> 
   <li><a href="https://nptel.ac.in/courses/106106139/">Introduction to Machine Learning - IIT Madras</a></li> 
   <li><a href="https://nptel.ac.in/courses/117108048/">Pattern Recognition - IISC Bangalore</a></li> 
   <li><a href="https://nptel.ac.in/courses/117105101/">Pattern Recognition and Application - IIT Kharagpur</a></li> 
   <li><a href="https://nptel.ac.in/courses/106106046/">Pattern Recognition - IIT Madras</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLqJm7Rc5-EXFv6RXaPZzzlzo93Hl0v91E">Machine Learning Summer School 2013 - Max Planck Institute for Intelligent Systems Tübingen</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLauepKFT6DK_1_plY78bXMDj-bshv7UsQ">Machine Learning - Professor Kogan (Spring 2016) - Rutgers</a></li> 
   <li><a href="http://sli.ics.uci.edu/Classes/2015W-273a">CS273a: Introduction to Machine Learning</a> (<a href="https://www.youtube.com/playlist?list=PLkWzaBlA7utJMRi89i9FAKMopL0h0LBMk">YouTube</a>)</li> 
   <li><a href="https://www.youtube.com/playlist?list=PLyGKBDfnk-iD5dK8N7UBUFVVDBBtznenR">Machine Learning Crash Course 2015</a></li> 
   <li><a href="http://inverseprobability.com/mlai2015/">COM4509/COM6509 Machine Learning and Adaptive Intelligence 2015-16</a></li> 
   <li><a href="https://sites.google.com/site/10715advancedmlintro2017f/lectures">10715 Advanced Introduction to Machine Learning</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLzn6LN6WhlN273tsqyfdrBUsA-o5nUESV">Introduction to Machine Learning - Spring 2018 - ETH Zurich</a></li> 
   <li><a href="https://www.youtube.com/user/UWCSE/playlists?view=50&amp;sort=dd&amp;shelf_id=16">Machine Learning - Pedro Domingos- University of Washington</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLY-OA_xnxFwSe98pzMGVR4bjAZZYrNT7L">Advanced Machine Learning - 2019 - ETH Zürich</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLyH-5mHPFffFwz7Twap0XuVeUJ8vuco9t">Machine Learning (COMP09012)</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL05umP7R6ij1tHaOFY96m5uX3J21a6yNd">Probabilistic Machine Learning 2020 - University of Tübingen</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL05umP7R6ij2XCvrRzLokX6EoHWaGA2cC">Statistical Machine Learning 2020 - Ulrike von Luxburg - University of Tübingen</a></li> 
   <li><a href="https://www.cs.columbia.edu/~amueller/comsw4995s20/schedule/">COMS W4995 - Applied Machine Learning - Spring 2020 - Columbia University</a></li> 
   <li><a href="https://apmonitor.com/pds">Machine Learning for Engineers 2022</a> (<a href="https://www.youtube.com/watch?v=Gh5rbBLh4JY&amp;list=PLLBUgWXdTBDg1K1bu60lHypSzSP-WSBmx">YouTube</a>)</li> 
   <li><a href="https://www.youtube.com/playlist?list=PL4CxkUJbvNVihRKP4bXufvRLIWzeS-ieP">10-418 / 10-618 (Fall 2019) Machine Learning for Structured Data</a></li> 
   <li><a href="https://people.orie.cornell.edu/mru8/orie4741/lectures.html">ORIE 4741/5741: Learning with Big Messy Data - Cornell</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLeZoXD_TLsLbW_ILvL9TlhBYdW8wJyON-">Machine Learning in IoT</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLoROMvodv4rP8nAmISxFINlGKSK4rbLKh">Stanford CS229M: Machine Learning Theory - Fall 2021</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLTKMiZHVd_2KyGirGEvKlniaWeLOHhUF3">Intro to Machine Learning and Statistical Pattern Classification - Prof Sebastian Raschka</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL-Fhd_vrvisNup9YQs_TdLW7DQz-lda0G">CMU's Multimodal Machine Learning course (11-777), Fall 2020</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLoROMvodv4rN_Uy7_wmS051_q1d6akXmK">EE104: Introduction to Machine Learning - Stanford University</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLWmXHcz_53Q2BXsWviGgEqdlSHmfsjSzC">CPSC 330: Applied Machine Learning (2020) - UBC</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLE6Wd9FR--EdyJ5lbFl8UuGjecvVw66F6">Machine Learning 2013 - Nando de Freitas, UBC</a></li> 
   <li><a href="https://www.cs.ox.ac.uk/people/nando.defreitas/machinelearning/">Machine Learning, 2014-2015, University of Oxford</a></li> 
   <li><a href="https://www.stat.cmu.edu/~ryantibs/statml/">10-702/36-702 - Statistical Machine Learning - Larry Wasserman, Spring 2016, CMU</a> (<a href="https://www.youtube.com/playlist?list=PLjbUi5mgii6BWEUZf7He6nowWvGne_Y8r">Spring 2015</a>)</li> 
   <li><a href="http://www.cs.cmu.edu/~bapoczos/Classes/ML10715_2015Fall/">10-715 Advanced Introduction to Machine Learning - CMU</a> (<a href="https://www.youtube.com/playlist?list=PL4DwY1suLMkcu-wytRDbvBNmx57CdQ2pJ">YouTube</a>)</li> 
   <li><a href="http://alex.smola.org/teaching/berkeley2012/syllabus.html">CS 281B - Scalable Machine Learning, Alex Smola, UC Berkeley</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLKnIA16_Rmvbr7zKYQuBfsVkjoLcJgxHH">100 Days of Machine Learning - CampusX (Hindi)</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLKnIA16_RmvbAlyx4_rdtR66B7EHX5k3z">CampusX Data Science Mentorship Program 2022-23 (Hindi)</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLPrxGIUWsqP2g7cpk0nFFt0c4aRcREq2s">Statistical Machine Learning - S2023 - Benyamin Ghojogh</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL80kAHvQbh-pT4lCkDT53zT8DKmhE0idB">MIT 6.5940 EfficientML.ai Lecture, Fall 2023</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL7rtKJAz_mPe6kAbiH6Ucq02Vpa95qvBJ">TinyML - Tiny Machine Learning at UPenn</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL0mFAhrXqy9CuopJhAB8GVu_Oy7J0ery6">Machine Learning Hardware and Systems (Cornell Tech, Spring 2022)</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLDqMkB5cbBA5oDg8VXM110GKc-CmvUqEZ">ECE 4760 (Digital Systems Design Using Microcontrollers) at Cornell for the Fall, 2022</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL80kAHvQbh-pT4lCkDT53zT8DKmhE0idB">EfficientML.ai Lecture, Fall 2023, MIT 6.5940</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL682UO4IMem9vOoABWiaTQ5qN-kHjFCR-">CS189 Machine Learning 2022 - UCB</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL682UO4IMem_2ks8_z8ln7yvkHmVBOZCP">ETH Zurich Statistical Learning Theory spring 2021, by Joachim M. Buhmann</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL_5SuHtr8fsp95AhIKeTHbpcVdhlhB9h6">SFU CMPT 727 Statistical Machine Learning spring 2022, 2023, by Maxwell Libbrecht</a></li> 
   <li><a href="https://eecs189.org/">UC Berkeley CS 189 / 289A Introduction to Machine Learning fall 2023, by Jennifer Listgarten &amp; Jitendra Malik</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL682UO4IMem9vOoABWiaTQ5qN-kHjFCR-">UC Berkeley CS 189 / 289A Introduction to Machine Learning spring 2022, by Jonathan Shewchuk</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLCuQm2FL98HTlRmlwMk2AuFEM9n1c06HE">UC Berkeley CS 189 Introduction to Machine Learning (CDSS offering) spring 2022, by Marvin Zhang</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLQEw29vp6f1Ae9dp8vkKB8H6sF1PHvP5N">MIT 6.036 Introduction to Machine Learning spring 2019, by Leslie Kaelbling</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLN_qg0-2-0SwLCXGUyM3FNSRwG6GNgONr">UCLA STAT C161 Introduction to Pattern Recognition and Machine Learning winter 2023, by Arash Amini</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL682UO4IMem-57hfHijQyk24vR9wq7CWV">UT Austin Machine Learning Algorithms &amp; Statistical Learning by Adam Klivans &amp; Qiang Liu</a></li> 
   <li><a href="https://www.youtube.com/watch?v=kMf0qDtQ_PM&amp;list=PLZ-krWGO-UEyPHsZfOjYH03_TyIN2pPhl&amp;pp=iAQB">MSU Machine Learning</a></li> 
  </ul> </li> 
 <li><strong>Data Mining</strong> 
  <ul> 
   <li><a href="https://courses.cs.washington.edu/courses/csep546/16sp/">CSEP 546, Data Mining - Pedro Domingos, Sp 2016 - University of Washington</a> (<a href="https://www.youtube.com/playlist?list=PLTPQEx-31JXgtDaC6-3HxWcp7fq4N8YGr">YouTube</a>)</li> 
   <li><a href="https://www.cs.utah.edu/~jeffp/teaching/cs5140.html">CS 5140/6140 - Data Mining, Spring 2016, University of Utah</a> (<a href="https://www.youtube.com/playlist?list=PLbuogVdPnkCpXfb43Wvc7s5fXWzedwTPB">Youtube</a>)</li> 
   <li><a href="http://www.cs.utah.edu/~jeffp/teaching/cs5955.html">CS 5955/6955 - Data Mining, University of Utah</a> (<a href="https://www.youtube.com/channel/UCcrlwW88yMcXujhGjSP2WBg/videos">YouTube</a>)</li> 
   <li><a href="http://www.stats202.com/original_index.html">Statistics 202 - Statistical Aspects of Data Mining, Summer 2007 - Google</a> (<a href="https://www.youtube.com/playlist?list=PLFE776F2C513A744E">YouTube</a>)</li> 
   <li><a href="https://www.youtube.com/playlist?list=PLLssT5z_DsK8Xwnh_0bjN4KNT81bekvtt">MOOC - Text Mining and Analytics by ChengXiang Zhai</a></li> 
   <li><a href="https://itunes.apple.com/us/itunes-u/information-retrieval-ss-2014/id874200291">Information Retrieval SS 2014, iTunes - HPI</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLm4W7_iX_v4NqPUjceOGd-OKNVO4c_cPD">MOOC - Data Mining with Weka</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLB4CCA346A5741C4C">CS 290 DataMining Lectures</a></li> 
   <li><a href="https://web.stanford.edu/class/cs246/">CS246 - Mining Massive Data Sets, Winter 2016, Stanford University</a> (<a href="https://www.youtube.com/channel/UC_Oao2FYkLAUlUVkBfze4jg/videos">YouTube</a>)</li> 
   <li><a href="https://www.youtube.com/playlist?list=PLY-OA_xnxFwRHZO6L6yT253VPgrZazQs6">Data Mining: Learning From Large Datasets - Fall 2017 - ETH Zurich</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLzn6LN6WhlN1ktkDvNurPSDwTQ_oGQisn">Information Retrieval - Spring 2018 - ETH Zurich</a></li> 
   <li><a href="http://www.cse.fau.edu/~taghi/classes/cap6673/">CAP6673 - Data Mining and Machine Learning - FAU</a>(<a href="https://vimeo.com/album/1505953">Video lectures</a>)</li> 
   <li><a href="http://www.ifis.cs.tu-bs.de/teaching/ws-1617/dwh">Data Warehousing and Data Mining Techniques - Technische Universität Braunschweig, Germany</a></li> 
  </ul> </li> 
 <li><strong>Data Science</strong> 
  <ul> 
   <li><a href="http://data8.org/">Data 8: The Foundations of Data Science - UC Berkeley</a> (<a href="http://data8.org/su17/">Summer 17</a>)</li> 
   <li><a href="https://www.youtube.com/playlist?list=PLOtl7M3yp-DVBdLYatrltDJr56AKZ1qXo">CSE519 - Data Science Fall 2016 - Skiena, SBU</a></li> 
   <li><a href="http://cs109.github.io/2015/pages/videos.html">CS 109 Data Science, Harvard University</a> (<a href="https://www.youtube.com/playlist?list=PLb4G5axmLqiuneCqlJD2bYFkBwHuOzKus">YouTube</a>)</li> 
   <li><a href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-0002-introduction-to-computational-thinking-and-data-science-fall-2016/lecture-videos/">6.0002 Introduction to Computational Thinking and Data Science - MIT OCW</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLPHXc20GewP8J56CisONS_mFZWZAfa7jR">Data 100 - Summer 19- UC Berkeley</a></li> 
   <li><a href="https://www.tele-task.de/series/1179/">Distributed Data Analytics (WT 2017/18) - HPI University of Potsdam</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL-XXv-cvA_iDsSPnMJlnhIyADGUmikoIO">Statistics 133 - Concepts in Computing with Data, Fall 2013 - UC Berkeley</a></li> 
   <li><a href="https://www.tele-task.de/series/1027/">Data Profiling and Data Cleansing (WS 2014/15) - HPI University of Potsdam</a></li> 
   <li><a href="http://people.seas.harvard.edu/~minilek/cs229r/fall15/lec.html">CS 229r - Algorithms for Big Data, Harvard University</a> (<a href="https://www.youtube.com/playlist?list=PL2SOU6wwxB0v1kQTpqpuu5kEJo2i-iUyf">Youtube</a>)</li> 
   <li><a href="https://nptel.ac.in/courses/106106142/">Algorithms for Big Data - IIT Madras</a></li> 
   <li><a href="https://github.com/APMonitor/data_science">Python Data Science with the TCLab</a> (<a href="https://www.youtube.com/watch?v=pAgW_bZVo88&amp;list=PLLBUgWXdTBDg1Qgmwt4jKtVn9BWh5-zgy">YouTube</a>)</li> 
  </ul> </li> 
 <li><strong>Probabilistic Graphical Modeling</strong> 
  <ul> 
   <li><a href="https://www.youtube.com/playlist?list=PLvfF4UFg6Ejj6SX-ffw-O4--SPbB9P7eP">MOOC - Probabilistic Graphical Models - Coursera</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLbuogVdPnkCpvxdF-Gy3gwaBObx7AnQut">CS 6190 - Probabilistic Modeling, Spring 2016, University of Utah</a></li> 
   <li><a href="https://www.cs.cmu.edu/~epxing/Class/10708-20/lectures.html">10-708 - Probabilistic Graphical Models, Carnegie Mellon University</a></li> 
   <li><a href="http://openclassroom.stanford.edu/MainFolder/CoursePage.php?course=ProbabilisticGraphicalModels">Probabilistic Graphical Models, Daphne Koller, Stanford University</a></li> 
   <li><a href="https://www.cs.helsinki.fi/en/courses/582636/2015/K/K/1">Probabilistic Models - UNIVERSITY OF HELSINKI</a></li> 
   <li><a href="http://groups.inf.ed.ac.uk/vision/VIDEO/2015/pmr.htm">Probabilistic Modelling and Reasoning 2015/16- University of Edinburgh</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLd-PuDzW85AcV4bgdu7wHPL37hm60W4RM">Probabilistic Graphical Models, Spring 2018 - Notre Dame</a></li> 
  </ul> </li> 
 <li><strong>Deep Learning</strong> 
  <ul> 
   <li><a href="https://www.youtube.com/watch?v=-Iob-FW5jVM&amp;list=PL1T8fO7ArWleMMI8KPJ_5D5XSlovTW_Ur">Full Stack Deep Learning - Course 2022</a></li> 
   <li><a href="https://www.youtube.com/watch?v=fGxWfEuUu0w&amp;list=PL1T8fO7ArWlcWg04OgNiJy91PywMKT2lv">Full Stack Deep Learning - Course 2021</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLLHTzKZzVU9eaEyErdV26ikyolxOsz6mq">NYU Deep Learning Spring 2020</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLLHTzKZzVU9e6xUfG10TkTWApKSZCzuBI">NYU Deep Learning Spring 2021</a></li> 
   <li><a href="http://introtodeeplearning.com/">6.S191: Introduction to Deep Learning - MIT</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLTKMiZHVd_2KJtIXOW0zFhFfBaJJilH51">Intro to Deep Learning and Generative Models Course - Prof Sebastian Raschka</a></li> 
   <li><a href="https://www.youtube.com/channel/UC8hYZGEkI2dDO8scT8C5UQA/videos">Deep Learning CMU</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLkt2uSq6rBVctENoVBg1TpCC7OQi31AlC">CS231n Deep Learning for Computer Vision - Winter 2016 Andrej Karpathy - Stanford University</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL_iWQOsE6TfVmKkQHucjPAoRtIJYt8a5A">Deep Learning: CS 182 Spring 2021</a></li> 
   <li><a href="https://dlsyscourse.org/lectures/">10-414/714: Deep Learning Systems - CMU</a> (<a href="https://www.youtube.com/@deeplearningsystemscourse1116/videos">Youtube</a>)</li> 
   <li><a href="https://course.fast.ai/">Part 1: Practical Deep Learning for Coders, v3 - fast.ai</a></li> 
   <li><a href="https://course19.fast.ai/part2">Part 2: Deep Learning from the Foundations - fast.ai</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLE6Wd9FR--EfW8dtjAuPoTuPcqmOV53Fu">Deep learning at Oxford 2015 - Nando de Freitas</a></li> 
   <li><a href="https://uni-tuebingen.de/fakultaeten/mathematisch-naturwissenschaftliche-fakultaet/fachbereiche/informatik/lehrstuehle/autonomous-vision/lectures/self-driving-cars/">Self-Driving Cars — Andreas Geiger, 2021/22</a> (<a href="https://www.youtube.com/watch?v=wAaSJUAKPuY&amp;list=PL05umP7R6ij321zzKXK6XCQXAaaYjQbzr">YouTube</a>)</li> 
   <li><a href="https://www.youtube.com/playlist?list=PLrAXtmErZgOeiKm4sgNOknGvNjby9efdf">6.S094: Deep Learning for Self-Driving Cars - MIT</a></li> 
   <li><a href="https://bcourses.berkeley.edu/courses/1453965/pages/cs294-129-designing-visualizing-and-understanding-deep-neural-networks">CS294-129 Designing, Visualizing and Understanding Deep Neural Networks</a> (<a href="https://www.youtube.com/playlist?list=PLkFD6_40KJIxopmdJF_CLNqG3QuDFHQUm">YouTube</a>)</li> 
   <li><a href="https://www.youtube.com/playlist?list=PLoROMvodv4rOABXSygHTsbvUz4G_YQhOb">CS230: Deep Learning - Autumn 2018 - Stanford University</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLZSO_6-bSqHQHBCoGaObUljoXAyyqhpFW">STAT-157 Deep Learning 2019 - UC Berkeley</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL_Ig1a5kxu5645uORPL8xyvHr91Lg8G1l">Full Stack DL Bootcamp 2019 - UC Berkeley</a></li> 
   <li><a href="http://openclassroom.stanford.edu/MainFolder/CoursePage.php?course=DeepLearning">Deep Learning, Stanford University</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLoRl3Ht4JOcdU872GhiYWf6jwrk_SNhz9">MOOC - Neural Networks for Machine Learning, Geoffrey Hinton 2016 - Coursera</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLwRJQ4m4UJjPiJP3691u-qWwPGVKzSlNP">Deep Unsupervised Learning -- Berkeley Spring 2020</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLehuLRPyt1Hyi78UOkMPWCGRxGcA9NVOE">Stat 946 Deep Learning - University of Waterloo</a></li> 
   <li><a href="http://info.usherbrooke.ca/hlarochelle/neural_networks/content.html">Neural networks class - Université de Sherbrooke</a> (<a href="https://www.youtube.com/playlist?list=PL6Xpj9I5qXYEcOhn7TqghAJ6NAPrNmUBH">YouTube</a>)</li> 
   <li><a href="https://www.youtube.com/channel/UCf4SX8kAZM_oGcZjMREsU9w/videos">CS294-158 Deep Unsupervised Learning SP19</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL-5eMc3HQTBavDoZpFcX-bff5WgQqSLzR">DLCV - Deep Learning for Computer Vision - UPC Barcelona</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL-5eMc3HQTBagIUjKefjcTbnXC0wXC_vd">DLAI - Deep Learning for Artificial Intelligence @ UPC Barcelona</a></li> 
   <li><a href="https://nptel.ac.in/courses/117105084/">Neural Networks and Applications - IIT Kharagpur</a></li> 
   <li><a href="http://uvadlc.github.io/#lecture">UVA DEEP LEARNING COURSE</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLTIkHmXc-7an8xbwhAJX-LQ4D4Uf-ar5I">Nvidia Machine Learning Class</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL05umP7R6ij3NTWIdtMbfvX7Z-4WEXRqD">Deep Learning - Winter 2020-21 - Tübingen Machine Learning</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLn2-dEmQeTfQ8YVuHBOvAhUlnIPYxkeu3">Geometric Deep Learning - AMMI</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL05umP7R6ij0bo4UtMdzEJ6TiLOqj4ZCm">Math for Deep Learning — Andreas Geiger</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLNsFwZQ_pkE_QaTwYxoTmmRJHtMXyIAU6">Applied Deep Learning 2022 - TU Wien</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLAqhIrjkxbuWI23v9cThsA9GvCAUhRvKZ">Neural Networks: Zero to Hero - Andrej Karpathy</a></li> 
   <li><a href="https://www.youtube.com/@cis522-deeplearning8/playlists">CIS 522 - Deep Learning - U Penn</a></li> 
   <li><a href="http://uvadlc.github.io/#lecture">UVA DEEP LEARNING COURSE</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL-fZD610i7yB7gDnPDpFcKpHI9X8z3OQ7">Deep Learning (Fall 2020) - Georgia Tech</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLyqSpQzTE6M9gCgajvQbc68Hk_JKGBAYT">CS7015 - Deep Learning - Prof. Mitesh M. Khapra - IIT Madras</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLJkYEExhe7rYY5HjpIJbgo-tDZ3bIAqAm">ETH Zürich | Deep Learning in Scientific Computing 2023</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL682UO4IMem_lRk9A7mOEj0jwhko0X_Tc">CMU 10 707 Deep Learning fall 2017 by Ruslan Salakhutdinov</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL682UO4IMem_B72vmX4r0v3UrAjPRFAnE">UT Austin CS 394D Deep Learning fall 2021, by Philipp KrahenBühl</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLoROMvodv4rNiJRchCzutFw5ItR_Z27CM">Stanford CS25 - Transformers United 2023</a></li> 
  </ul> </li> 
 <li><strong>Reinforcement Learning</strong> 
  <ul> 
   <li><a href="https://www.youtube.com/playlist?list=PLoROMvodv4rOSOPzutgyCTapiGlY2Nd8u">CS234: Reinforcement Learning - Winter 2019 - Stanford University</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLqYmG7hTraZDM-OYHWgPebj2MfCFzFObQ">Introduction to reinforcement learning - UCL</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLqYmG7hTraZDNJre23vqCGIVpfZ_K2RZs">Advanced Deep Learning &amp; Reinforcement Learning - UCL</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLyqSpQzTE6M_FwzHFAyf4LSkz_IjMyjD9">Reinforcement Learning - IIT Madras</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLdAoL1zKcqTXFJniO3Tqqn6xMBBL07EDc">CS885 Reinforcement Learning - Spring 2018 - University of Waterloo</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLkFD6_40KJIwhWJpGazJ9VSj9CFMkb79A">CS 285 - Deep Reinforcement Learning- UC Berkeley</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLkFD6_40KJIxJMR-j5A1mkxK26gh_qg37">CS 294 112 - Reinforcement Learning</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLllwxvcS7ca5wOmRLKm6ri-OaC0INYehv">NUS CS 6101 - Deep Reinforcement Learning</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL_Nk3YvgORJs1tCLQnlnSRsOJArj_cP9u">ECE 8851: Reinforcement Learning</a></li> 
   <li><a href="http://rll.berkeley.edu/deeprlcourse/">CS294-112, Deep Reinforcement Learning Sp17</a> (<a href="https://www.youtube.com/playlist?list=PLkFD6_40KJIwTmSbCv9OVJB3YaO4sFwkX">YouTube</a>)</li> 
   <li><a href="http://www0.cs.ucl.ac.uk/staff/d.silver/web/Teaching.html">UCL Course 2015 on Reinforcement Learning by David Silver from DeepMind</a> (<a href="https://www.youtube.com/watch?v=2pWv7GOvuf0">YouTube</a>)</li> 
   <li><a href="https://sites.google.com/view/deep-rl-bootcamp/lectures">Deep RL Bootcamp - Berkeley Aug 2017</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLyqSpQzTE6M_FwzHFAyf4LSkz_IjMyjD9">Reinforcement Learning - IIT Madras</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL21JFJEtbq0JLNo53UIkbIwkc2njCVUUR">Reinforcement Learning Course at KTH (FDD3359 - 2022)</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLmH30BG15SIoXhxLldoio0BhsIY84YMDj">Reinforcement Learning Course at ASU, Spring 2022</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLQVNhPb8ajtCjWSKUvKU8cX5lueYP9s3X">CS 4789/5789: Introduction to Reinforcement Learning - Cornell</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLDREIwGwrHBdiBm1q0cVJLZn4Cn6Hig2s">S20/IE613 - Online (Machine) Learning/ Bandit Algorithms</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLImtCgowF_ES_JdF_UcM60EXTcGZg67Ua">Reinforcement Learning - Fall 2021 chandar-lab</a></li> 
   <li><a href="https://scs.hosted.panopto.com/Panopto/Pages/Sessions/List.aspx#folderID=%22ee5794a2-cb54-4edc-836b-aefc01023243%22">CMU 10 703 Deep Reinforcement Learning &amp; Control fall 2022, by Katerina Fragkiadaki</a></li> 
  </ul> </li> 
 <li><strong>Advanced Machine Learning</strong> 
  <ul> 
   <li><a href="https://www.cmi.ac.in/~madhavan/courses/aml2021">Advanced Machine Learning, 2021-2022, Sem I - by Prof. Madhavan Mukund, CMI</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLB3sDpSRdrOvI1hYXNsa6Lety7K8FhPpx">18.409 Algorithmic Aspects of Machine Learning Spring 2015 - MIT</a></li> 
   <li><a href="https://cs330.stanford.edu/">CS 330 - Deep Multi-Task and Meta Learning - Fall 2019 - Stanford University</a> (<a href="https://www.youtube.com/playlist?list=PLoROMvodv4rMC6zfYmnD7UG3LVvwaITY5">Youtube</a>)</li> 
   <li><a href="https://www.youtube.com/playlist?list=PLoROMvodv4rNjRoawgt72BBNwL2V7doGI">Stanford CS330: Deep Multi-Task and Meta Learning I Autumn 2022</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLftoLyLEwECBEJyfRBJoSBd0UaTjEcs3I">ES 661 (2023): Probabilistic Machine Learning - IIT Gandhinagar</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLaE1lKCe0jH3ePp9wCU1ygTquVOXY-UYv">Information Retrieval in High Dimensional Data</a></li> 
  </ul> </li> 
 <li><strong>Natural Language Processing</strong> 
  <ul> 
   <li><a href="http://web.stanford.edu/class/cs224n/">CS 224N -Natural Language Processing with Deep Learning - Stanford University</a> (<a href="https://youtube.com/playlist?list=PLoROMvodv4rOhcuXMZkNm7j3fVwBBY42z">Lectures - Winter 2019</a>) (<a href="https://youtube.com/playlist?list=PLoROMvodv4rOSH4v6133s9LFPRHjEmbmJ">Lectures - Winter 2021</a>)</li> 
   <li><a href="https://web.stanford.edu/~jurafsky/NLPCourseraSlides.html">CS 224N - Natural Language Processing, Stanford University</a> (<a href="https://academictorrents.com/details/d2c8f8f1651740520b7dfab23438d89bc8c0c0ab">Lecture videos</a>)</li> 
   <li><a href="https://www.youtube.com/playlist?list=PLoROMvodv4rOwvldxftJTmoR3kRcWkJBp">Stanford XCS224U: Natural Language Understanding I Spring 2023</a></li> 
   <li><a href="https://www.cs.utexas.edu/~gdurrett/courses/online-course/materials.html">CS388: Natural Language Processing - UT Austin</a></li> 
   <li><a href="https://www.youtube.com/channel/UC_48v322owNVtORXuMeRmpA/playlists?view=50&amp;sort=dd&amp;shelf_id=2">CS 124 - From Languages to Information - Stanford University</a></li> 
   <li><a href="https://karpathy.ai/zero-to-hero.html">Neural Networks: Zero to Hero - Andrej Karpathy</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLtmWHNX-gukKocXQOkQjuVxglSDYWsSh9">fast.ai Code-First Intro to Natural Language Processing</a> (<a href="https://github.com/fastai/course-nlp">Github</a>)</li> 
   <li><a href="https://www.youtube.com/playlist?list=PLLssT5z_DsK8BdawOVCCaTCO99Ya58ryR">MOOC - Natural Language Processing - Coursera, University of Michigan</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLofp2YXfp7Tbk88uH4jejfXPd2OpWuSLq">Natural Language Processing at UT Austin (Greg Durrett)</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLoROMvodv4rObpMCir6rNNUlFAn56Js20">CS224U: Natural Language Understanding - Spring 2019 - Stanford University</a></li> 
   <li><a href="https://github.com/oxford-cs-deepnlp-2017/lectures">Deep Learning for Natural Language Processing, 2017 - Oxford University</a></li> 
   <li><a href="http://groups.inf.ed.ac.uk/vision/VIDEO/2015/anlp.htm">Accelerated Natural Language Processing 2015/16- University of Edinburgh</a></li> 
   <li><a href="https://nptel.ac.in/courses/106101007/">Natural Language Processing - IIT Bombay</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL8PYTP1V4I8AYSXn_GKVgwXVluCT9chJ6">CMU Advanced NLP 2021</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL8PYTP1V4I8AkaHEJ7lOOrlex-pcxS-XV">CMU Neural Nets for NLP 2021</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLA212ij5XG8OTDRl8IWFiJgHR9Ve2k9pv">Natural Language Processing - Michael Collins - Columbia University</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL8PYTP1V4I8CHhppU6n1Q9-04m96D9gt5">CMU CS11-737 - Multilingual Natural Language Processing</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLWnsVgP6CzadI4-FT2Po4wsEK7MHCIQ-d">UMass CS685: Advanced Natural Language Processing (Spring 2022)</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLwrUPjGidcJ4UkSoi7_rmn-1kcedLqgdL">Natural Language Processing (CMSC 470)</a></li> 
  </ul> </li> 
 <li><strong>ML based Computer Vision</strong> 
  <ul> 
   <li><a href="https://www.youtube.com/playlist?list=PL3FW7Lu3i5JvHM8ljYj-zLfQRF3EO8sYv">CS 231n - Convolutional Neural Networks for Visual Recognition, Stanford University</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLzWRmD0Vi2KVsrCqA4VnztE4t71KnTnP5">CS 198-126: Modern Computer Vision Fall 2022 (UC Berkeley)</a></li> 
   <li><a href="https://vision.in.tum.de/teaching/ws2013/ml_ws13">Machine Learning for Robotics and Computer Vision, WS 2013/2014 - TU München</a> (<a href="https://www.youtube.com/playlist?list=PLTBdjV_4f-EIiongKlS9OKrBEp8QR47Wl">YouTube</a>)</li> 
   <li><a href="http://groups.inf.ed.ac.uk/vision/VIDEO/2015/inf1cs.htm">Informatics 1 - Cognitive Science 2015/16- University of Edinburgh</a></li> 
   <li><a href="http://www.inf.ed.ac.uk/teaching/courses/inf2a/schedule.html">Informatics 2A - Processing Formal and Natural Languages 2016-17 - University of Edinburgh</a></li> 
   <li><a href="http://groups.inf.ed.ac.uk/vision/VIDEO/2015/ccs.htm">Computational Cognitive Science 2015/16- University of Edinburgh</a></li> 
   <li><a href="https://nptel.ac.in/courses/108/105/108105103/">NOC:Deep Learning For Visual Computing - IIT Kharagpur</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL5-TkQAfAZFbzxjBHtzdVCWE0Zbhomg7r">Deep Learning for Computer Vision - University of Michigan</a></li> 
   <li><a href="https://www.youtube.com/watch?v=v0rAVyF4rWA&amp;list=PLXtAHOcKKDTk43wjXud9GQS-l-QA5DQxH&amp;pp=iAQB"> Extreme Classification </a></li> 
  </ul> </li> 
 <li><strong>Time Series Analysis</strong> 
  <ul> 
   <li><a href="https://www.youtube.com/playlist?list=PLtiTxpFJ4k6TZ0g496fVcQpt_-XJRNkbi">02417 Time Series Analysis</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLl0FT6O_WWDBm-4W-eoK34omYmEMseQDX">Applied Time Series Analysis</a></li> 
  </ul> </li> 
 <li><strong>Optimization</strong> 
  <ul> 
   <li><a href="https://www.youtube.com/playlist?list=PLyqSpQzTE6M-pmLzCoMu_ANU6atEFyyJl">Optimisation for Machine Learning: Theory and Implementation (Hindi) - IIT</a></li> 
   <li><a href="http://web.stanford.edu/class/ee364a/videos.html">EE364a: Convex Optimization I - Stanford University</a></li> 
   <li><a href="http://www.stat.cmu.edu/~ryantibs/convexopt-S15/">10-725 Convex Optimization, Spring 2015 - CMU</a></li> 
   <li><a href="http://www.stat.cmu.edu/~ryantibs/convexopt/">10-725 Convex Optimization: Fall 2016 - CMU</a></li> 
   <li><a href="http://www.cs.cmu.edu/~ggordon/10725-F12/schedule.html">10-725 Optimization Fall 2012 - CMU</a></li> 
   <li><a href="http://www.cs.cmu.edu/~suvrit/teach/aopt.html">10-801 Advanced Optimization and Randomized Methods - CMU</a> (<a href="https://www.youtube.com/playlist?list=PLjTcdlvIS6cjdA8WVXNIk56X_SjICxt0d">YouTube</a>)</li> 
   <li><a href="http://am207.github.io/2016/index.html">AM 207 - Stochastic Methods for Data Analysis, Inference and Optimization, Harvard University</a></li> 
  </ul> </li> 
 <li><strong>Misc Machine Learning Topics</strong> 
  <ul> 
   <li><a href="https://www.youtube.com/playlist?list=PLOFEBzvs-VvqJwybFxkTiDzhf5E11p8BI">Quantum Machine Learning | 2021 Qiskit Global Summer School</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLbuogVdPnkCpRvi-qSMCdOwyn4UYoPxTI">CS 6955 - Clustering, Spring 2015, University of Utah</a></li> 
   <li><a href="http://blogs.ischool.berkeley.edu/i290-abdt-s12/">Info 290 - Analyzing Big Data with Twitter, UC Berkeley school of information</a> (<a href="https://www.youtube.com/playlist?list=PLE8C1256A28C1487F">YouTube</a>)</li> 
   <li><a href="http://granite.ices.utexas.edu/coursewiki/index.php/Main_Page">CAM 383M - Statistical and Discrete Methods for Scientific Computing, University of Texas</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLoROMvodv4rPLKxIpqhjhPgdQy7imNkDn">CS224W Machine Learning with Graphs | Spring 2021 | Stanford University</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLyGKBDfnk-iDj3FBd0Avr_dLbrU8VG73O">9.520 - Statistical Learning Theory and Applications, Fall 2015 - MIT</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLacBNHqv7n9gp9cBMrA6oDbzz_8JqhSKo">Reinforcement Learning - UCL</a></li> 
   <li><a href="http://academictorrents.com/details/493251615310f9b6ae1f483126292378137074cd">Regularization Methods for Machine Learning 2016</a> (<a href="https://www.youtube.com/playlist?list=PLbF0BXX_6CPJ20Gf_KbLFnPWjFTvvRwCO">YouTube</a>)</li> 
   <li><a href="http://fields2015bigdata2inference.weebly.com/materials.html">Statistical Inference in Big Data - University of Toronto</a></li> 
   <li><a href="http://groups.inf.ed.ac.uk/vision/VIDEO/2015/rl.htm">Reinforcement Learning 2015/16- University of Edinburgh</a></li> 
   <li><a href="https://nptel.ac.in/courses/106106143/">Reinforcement Learning - IIT Madras</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLDcUM9US4XdMdZOhJWJJD4mDBMnbTWw_z">Statistical Rethinking Winter 2015 - Richard McElreath</a></li> 
   <li><a href="http://marsyas.cs.uvic.ca/mirBook/course/">Music Information Retrieval - University of Victoria, 2014</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL2A65507F7D725EFB">PURDUE Machine Learning Summer School 2011</a></li> 
   <li><a href="https://bloomberg.github.io/foml/#home">Foundations of Machine Learning - Blmmoberg Edu</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLqYmG7hTraZDM-OYHWgPebj2MfCFzFObQ">Introduction to reinforcement learning - UCL</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLqYmG7hTraZDNJre23vqCGIVpfZ_K2RZs">Advanced Deep Learning &amp; Reinforcement Learning - UCL</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLAQopGWlIcya-9yzQ8c8UtPOuCv0mFZkr">Web Information Retrieval (Proff. L. Becchetti - A. Vitaletti)</a></li> 
   <li><a href="https://www.tele-task.de/series/1286/">Big Data Systems (WT 2019/20) - Prof. Dr. Tilmann Rabl - HPI</a></li> 
   <li><a href="https://www.tele-task.de/series/1179/">Distributed Data Analytics (WT 2017/18) - Dr. Thorsten Papenbrock - HPI</a></li> 
   <li><a href="https://dcai.csail.mit.edu/">Introduction to Data-Centric AI - MIT</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLCAl7tjCwWyGjdzOOnlbGnVNZk0kB8VSa">Parallel Computing and Scientific Machine Learning</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLlvnxKilk3aKx0oFua-HTtFf-d_inQ8Qn">Machine Learning System Design - System Design Fight Club</a></li> 
   <li><a href="https://docs.google.com/document/d/1r6jXNd1DD9o8v4q4XqxShRXWYdhtLMjEXWDzuv0T6LU/edit">UT Austin ECE 381V Bandits and Online Learning fall 2021, by Sanjay Shakkottai</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLHZhjPByiV3L94AeJ9FcK1yrnRDOt3Vit">UCSD MATH 273B Information Geometry and its Applications winter 2022, by Melvin Leok</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL0mFAhrXqy9CuopJhAB8GVu_Oy7J0ery6">Cornell ECE 5545 Machine Learning Hardware and Systems spring 2022, by Mohamed Abdelfattah</a></li> 
   <li><a href="https://rolandspeicher.com/lectures/course-on-high-dimensional-analysis-random-matrices-and-machine-learning-summer-term-2023/">High Dimensional Analysis: Random Matrices and Machine Learning by Roland Speicher</a>(<a href="https://www.youtube.com/playlist?list=PLY11JnnnTUCabY4nc0hKptrd5qEWtLoo2">Youtube</a>)</li> 
   <li><a href="https://www.youtube.com/playlist?list=PLcByDTr7vRTYJ2s6DL-3bzjGwtQif33y3">ACP SUMMER SCHOOL 2023 on Machine Learning for Constraint Programming</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL682UO4IMem-9ID1nBaWYCFCh_qU7yYNd">EPFL COM 516 Markov Chains and Algorithmic Applications spring 2020, by Olivier Leveque</a></li> 
  </ul> </li> 
</ul> 
<hr /> 
<h3>Computer Networks</h3> 
<ul> 
 <li><a href="http://www.scs.stanford.edu/10au-cs144/">CS 144 Introduction to Computer Networking - Stanford University, Fall 2013</a> (<a href="https://www.youtube.com/playlist?list=PLvFG2xYBrYAQCyz4Wx3NPoYJOFjvU7g2Z">Lecture videos</a>)</li> 
 <li><a href="https://www.youtube.com/playlist?list=PLm556dMNleHc1MWN5BX9B2XkwkNE2Djiu">Computer Networking: A Top-Down Approach</a></li> 
 <li><a href="https://www.ecse.rpi.edu/Homepages/koushik/shivkuma-teaching/video_index.html">Computer Communication Networks, Rensselaer Polytechnic Institute - Fall 2001</a> (<a href="https://www.ecse.rpi.edu/Homepages/koushik/shivkuma-teaching/video_index.html#ccn_video">Videos</a>) (<a href="https://www.ecse.rpi.edu/Homepages/koushik/shivkuma-teaching/video_index.html#ccn_foils">Slides</a>)</li> 
 <li><a href="http://www.cse.wustl.edu/~jain/videos.htm">Audio/Video Recordings and Podcasts of Professor Raj Jain's Lectures - Washington University in St. Louis</a> (<a href="https://www.youtube.com/user/ProfRajJain/playlists">YouTube</a>)</li> 
 <li><a href="http://media.pearsoncmg.com/ph/streaming/esm/tanenbaum5e_videonotes/tanenbaum_videoNotes.html">Computer Networks, Tanenbaum, Wetherall Computer Networks 5e - Video Lectures</a></li> 
 <li><a href="https://courses.cs.washington.edu/courses/csep561/13au/">CSEP 561 - PMP Network Systems, Fall 2013 - University of Washington</a> (<a href="https://courses.cs.washington.edu/courses/csep561/13au/video/">Videos</a>)</li> 
 <li><a href="https://courses.cs.washington.edu/courses/csep561/08au/">CSEP 561 – Network Systems, Autumn 2008 - University of Washington</a> (<a href="https://courses.cs.washington.edu/courses/csep561/08au/lectures/">Videos</a>)</li> 
 <li><a href="https://nptel.ac.in/courses/106105081/">Computer Networks - IIT Kharagpur</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLvifRcqOOwF8u4iC7hFTMVC_WD6SEpnkx">Introduction to Data Communications 2013, Steven Gordon - Thammasat University, Thailand</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLE9AAD550EA21F3DC">Introduction to Complex Networks - RIT</a></li> 
 <li><a href="http://www.leonidzhukov.net/hse/2015/networks/">Structural Analysis and Visualization of Networks</a></li> 
 <li><a href="https://nptel.ac.in/courses/106105082/">Data Communication - IIT Kharagpur</a></li> 
 <li><a href="https://nptel.ac.in/courses/117108044/">Error Correcting Codes - IISC Bangalore</a></li> 
 <li><a href="https://nptel.ac.in/courses/117101053/">Information Theory and Coding - IIT Bombay</a></li> 
 <li><a href="https://nptel.ac.in/courses/106105154/">Complex Network : Theory and Application - IIT Kharagpur</a></li> 
 <li><a href="https://nptel.ac.in/courses/117104099/">Advanced 3G and 4G Wireless Mobile Communications - IIT Kanpur</a></li> 
 <li><a href="https://nptel.ac.in/courses/117101050/">Broadband Networks: Concepts and Technology - IIT Bombay</a></li> 
 <li><a href="https://nptel.ac.in/courses/117106031/">Coding Theory - IIT Madras</a></li> 
 <li><a href="https://nptel.ac.in/courses/117101051/">Digital Communication - IIT Bombay</a></li> 
 <li><a href="https://nptel.ac.in/courses/117105081/">Digital Voice &amp; Picture Communication - IIT Kharagpur</a></li> 
 <li><a href="https://nptel.ac.in/courses/106105160/">Wireless Ad Hoc and Sensor Networks - IIT Kharagpur</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLoOmvuyo5UAfY5VrkObHTckZHwPsS1VCA">Internetworking with TCP/IP by Prof. Dr. Christoph Meinel - HPI</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLFB088DB91845CA34">CS798: Mathematical Foundations of Computer Networking - University of Waterloo</a></li> 
</ul> 
<hr /> 
<h3>Math for Computer Scientist</h3> 
<ul> 
 <li><a href="https://www.khanacademy.org/math/">Maths courses all topics covered - Khan Academy</a></li> 
 <li><strong>Calculus</strong> 
  <ul> 
   <li><a href="https://ocw.mit.edu/courses/mathematics/18-01-single-variable-calculus-fall-2006/">18.01 Single Variable Calculus, Fall 2006 - MIT OCW</a></li> 
   <li><a href="https://ocw.mit.edu/courses/mathematics/18-02-multivariable-calculus-fall-2007/">18.02 Multivariable Calculus, Fall 2007 - MIT OCW</a></li> 
   <li><a href="https://ocw.mit.edu/courses/mathematics/18-03-differential-equations-spring-2010/">18.03 Differential Equations, Spring 2010 - MIT OCW</a></li> 
   <li><a href="https://ocw.mit.edu/resources/res-18-005-highlights-of-calculus-spring-2010/">Highlights of Calculus - Gilbert Strang, MIT OCW</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLkZjai-2JcxnYmkg6fpzz4WFumGVl7MOa">Vector Calculus for Engineers - HKUST</a></li> 
  </ul> </li> 
 <li><strong>Discrete Math</strong> 
  <ul> 
   <li><a href="https://ocw.mit.edu/courses/6-042j-mathematics-for-computer-science-fall-2010/video_galleries/video-lectures/">6.042J - Mathematics for Computer Science, MIT OCW</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=-XXv-cvA_iD8wQm8U0gG_Z1uHjImKXFy">Computer Science 70, 001 - Spring 2015</a></li> 
   <li><a href="http://www3.cs.stonybrook.edu/~algorith/math-video/">CSE 547 Discrete Mathematics, Prof Skiena, University of Stony Brook</a></li> 
   <li><a href="https://itunes.apple.com/us/course/discrete-structures-summer/id698728837">Discrete Structures (Summer 2011) - Rutgers, The State University of New Jersey</a></li> 
   <li><a href="https://www.inf.ed.ac.uk/teaching/courses/dmmr/">Discrete Mathematics and Mathematical Reasoning 2015/16 - University of Edinburgh</a></li> 
   <li><a href="https://nptel.ac.in/courses/106106094/">Discrete Mathematical Structures - IIT Madras</a></li> 
   <li><a href="https://itunes.apple.com/us/course/discrete-structures/id546468789">Discrete Structures - Pepperdine University</a></li> 
  </ul> </li> 
 <li><strong>Probability &amp; Statistics</strong> 
  <ul> 
   <li><a href="https://www.youtube.com/playlist?list=PL8dPuuaLjXtNM_Y-bUAhblSAdWRnmBUcr">Statistics - CrashCourse</a></li> 
   <li><a href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-041sc-probabilistic-systems-analysis-and-applied-probability-fall-2013/">6.041 Probabilistic Systems Analysis and Applied Probability - MIT OCW</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLUl4u3cNGP60hI9ATjSFgLZpbNJ7myAg6">MIT RES.6-012 Introduction to Probability, Spring 2018 - MIT</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL2SOU6wwxB0uwwH80KTQ6ht66KWxbzTIo">Statistics 110 - Probability - Harvard University</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL_Ig1a5kxu56TfFnGlRlH2YpOBWGiYsQD">STAT 2.1x: Descriptive Statistics | UC Berkeley</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL_Ig1a5kxu57qPZnHm-ie-D7vs9g7U-Cl">STAT 2.2x: Probability | UC Berkeley</a></li> 
   <li><a href="http://academictorrents.com/details/a0cbaf3e03e0893085b6fbdc97cb6220896dddf2">MOOC - Statistics: Making Sense of Data, Coursera</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLycnP7USbo1V3jlyjAzWUB201cLxPq4NP">MOOC - Statistics One - Coursera</a></li> 
   <li><a href="https://nptel.ac.in/courses/117105085/">Probability and Random Processes - IIT Kharagpur</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLgIPpm6tJZoSvrYM54BUqJJ4CWrYeGO40">MOOC - Statistical Inference - Coursera</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLqOZ6FD_RQ7k-j-86QUC2_0nEu0QOP-Wy">131B - Introduction to Probability and Statistics, UCI</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL432AB57AF9F43D4F">STATS 250 - Introduction to Statistics and Data Analysis, UMichigan</a></li> 
   <li><a href="http://matterhorn.dce.harvard.edu/engage/ui/index.html#/1999/01/82347">Sets, Counting and Probability - Harvard</a></li> 
   <li><a href="http://www.opinionatedlessons.org/">Opinionated Lessons in Statistics</a> (<a href="https://www.youtube.com/playlist?list=PLUAHeOPjkJseXJKbuk9-hlOfZU9Wd6pS0">Youtube</a>)</li> 
   <li><a href="https://www.youtube.com/user/BCFoltz/playlists">Statistics - Brandon Foltz</a></li> 
   <li><a href="https://github.com/rmcelreath/statrethinking_winter2019">Statistical Rethinking: A Bayesian Course Using R and Stan</a> (<a href="https://www.youtube.com/playlist?list=PLDcUM9US4XdPz-KxHM4XHt7uUVGWWVSus">Lectures</a>) (<a href="http://www.stat.columbia.edu/~gelman/book/">Book</a>)</li> 
   <li><a href="https://www.youtube.com/playlist?list=PLMn2aW3wpAtPC8tZHQy6nwWsFG7P6sPqw">02402 Introduction to Statistics E12 - Technical University of Denmark</a> (<a href="https://www.youtube.com/playlist?list=PLgowegO9Se58_BnUNnaARajEE_bX-GJEz">F17</a>)</li> 
   <li><a href="https://www.youtube.com/playlist?list=PLuh62Q4Sv7BU1dN2G6ncyiMbML7OXh_Jx">Engineering Probability (ECSE-2500) - RPI</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL4FSfq6xtSvyqsbgrYDeyV0WWXlXqwy2M">Purdue ECE302 Introduction to Probability for Data Science</a></li> 
   <li><a href="https://www.math.uci.edu/~rvershyn/teaching/ugp/ugp.html">Undergraduate Probability with Professor Roman Vershynin</a></li> 
   <li><a href="https://www.math.uci.edu/~rvershyn/teaching/hdp/hdp.html">High-Dimensional Probability</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLLyj1Zd4UWrOk5-wIki_oOxHJnNj0_437">Mathematical Statistics</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLBqnAso5Dy7O0IVoVn2b-WtetXQk5CDk6">Bayesian Data Analysis</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLLyj1Zd4UWrP3rME2XvFvE4Q5vI3H_7_Z">Markov Processes - Spring 2023</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLoazKTcS0RzZ1SUgeOgc6SWt51gfT80N0">Causal Inference Course - Brady Neal</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLyvUJLHD8IsJCB7ALqwjRG1BjL5JxE__H">Causal Inference -- Online Lectures (M.Sc/PhD Level)</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLxq_lXOUlvQAoWZEqhRqHNezS30lI49G-">Machine Learning &amp; Causal Inference: A Short Course</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLzERW_Obpmv-_EXTV1zTmlv-Ab5Tfbp8X">Causal Inference Jonas Peters</a></li> 
  </ul> </li> 
 <li><strong>Linear Algebra</strong> 
  <ul> 
   <li><a href="https://willett.psd.uchicago.edu/teaching/mathematical-foundations-of-machine-learning-fall-2021/">Mathematical Foundations of Machine Learning (Fall 2021) - University of Chicago - Rebecca Willett</a></li> 
   <li><a href="https://ocw.mit.edu/courses/mathematics/18-06sc-linear-algebra-fall-2011/">18.06 - Linear Algebra, Prof. Gilbert Strang, MIT OCW</a></li> 
   <li><a href="https://ocw.mit.edu/courses/18-065-matrix-methods-in-data-analysis-signal-processing-and-machine-learning-spring-2018/video_galleries/video-lectures/">18.065 Matrix Methods in Data Analysis, Signal Processing, and Machine Learning - MIT OCW</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLGqzsq0erqU7w7ZrTZ-pWWk4-AOkiGEGp">Linear Algebra (Princeton University)</a></li> 
   <li><a href="http://academictorrents.com/details/54cd86f3038dfd446b037891406ba4e0b1200d5a">MOOC: Coding the Matrix: Linear Algebra through Computer Science Applications - Coursera</a></li> 
   <li><a href="http://cs.brown.edu/courses/cs053/current/lectures.htm">CS 053 - Coding the Matrix - Brown University</a> (<a href="https://cs.brown.edu/video/channels/coding-matrix-fall-2014/">Fall 14 videos</a>)</li> 
   <li><a href="http://www.cs.cmu.edu/~zkolter/course/linalg/outline.html">Linear Algebra Review - CMU</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL44B6B54CBF6A72DF">A first course in Linear Algebra - N J Wildberger - UNSW</a></li> 
   <li><a href="http://ma.mathforcollege.com/youtube/index.html">INTRODUCTION TO MATRIX ALGEBRA</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLtmWHNX-gukIc92m1K0P6bIOnZb-mg0hY">Computational Linear Algebra - fast.ai</a> (<a href="https://github.com/fastai/numerical-linear-algebra">Github</a>)</li> 
   <li><a href="https://www.youtube.com/playlist?list=PLoROMvodv4rMz-WbFQtNUsUElIh2cPmN9">ENGR108: Introduction to Applied Linear Algebra—Vectors, Matrices, and Least Squares - Stanford University</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLUl4u3cNGP62EaLLH92E_VCN4izBKK6OE">MIT 18.S096 Matrix Calculus For Machine Learning And Beyond</a></li> 
  </ul> </li> 
 <li><a href="https://www.youtube.com/playlist?list=PL7y-1rk2cCsA339crwXMWUaBRuLBvPBCg">10-600 Math Background for ML - CMU</a></li> 
 <li><a href="https://ocw.mit.edu/courses/mathematics/18-065-matrix-methods-in-data-analysis-signal-processing-and-machine-learning-spring-2018/video-lectures/">MIT 18.065 Matrix Methods in Data Analysis, Signal Processing, and Machine Learning</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PL5EvFKC69QIyRLFuxWRnH6hIw6e1-bBXB">Direct Methods for Sparse Linear Systems - Prof Tim Davis - UFL</a></li> 
 <li><a href="http://www.stat.cmu.edu/~larry/=stat705/">36-705 - Intermediate Statistics - Larry Wasserman, CMU</a> (<a href="https://www.youtube.com/playlist?list=PLcW8xNfZoh7eI7KSWneVWq-7wr8ffRtHF">YouTube</a>)</li> 
 <li><a href="https://nptel.ac.in/courses/106108051/">Combinatorics - IISC Bangalore</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLd-PuDzW85Ae4pzlylMLzq_a-RHPx8ryA">Advanced Engineering Mathematics - Notre Dame</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLd-PuDzW85AeltIRcjDY7Z4q49NEAuMcA">Statistical Computing for Scientists and Engineers - Notre Dame</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLd-PuDzW85AcSgNGnT5TUHt85SrCljT3V">Statistical Computing, Fall 2017 - Notre Dame</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PL05umP7R6ij1a6KdEy8PVE9zoCv6SlHRS">Mathematics for Machine Learning, Lectures by Ulrike von Luxburg - Tübingen Machine Learning</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLLy_2iUCG87D1CXFxE-SxCFZUiJzQ3IvE">Essential Mathematics for Machine Learning- July 2018 - IIT Roorkee - YouTube Lectures</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PL05umP7R6ij2lwDdj7IkuHoP9vHlEcH0s">Numerics of Machine Learning (Winter 2022/23) - Tübingen Machine Learning</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLbN57C5Zdl6j_qJA-pARJnKsmROzPnO9V">Nonlinear Dynamics and Chaos - Steven Strogatz, Cornell University</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLUeHTafWecAUqSh3Gy0NNr7H3OsXoC-aK">Nonlinear Dynamics &amp; Chaos - Virginia Tech</a></li> 
 <li><a href="https://www.nicolasboumal.net/book/">An introduction to Optimization on smooth manifolds (with book) - EPFL</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLXsDp0z6VWFT5ZM86xh8i1AMFYxnrefLk">Math Modelling</a></li> 
 <li><a href="https://www.youtube.com/@large-scaleconvexoptimizat2973/videos">Large-Scale Convex Optimization: Algorithms &amp; Analyses via Monotone Operators by Ernest Ryu and Wotao Yin</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLIismQEEd55Fnzllb-HEYK6k8dMmz2ctj">An Overview of Variational Analysis 2021 by Tyrrell Rockafellar</a></li> 
 <li><a href="https://faculty.washington.edu/kutz/am584/am584.html">UW AMATH 584 Applied Linear Algebra &amp; Numerical Analysis by Nathan Kutz</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PL682UO4IMem-NKDk9uLzRaTOnHPpr4knp">UW AMATH 584 Applied Linear Algebra &amp; Introductory Numerical Analysis fall 2005, by Loyce Adams</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PL682UO4IMem97Nk-jJCqUiYZmwpCxMuYF">Stanford CME 206 Introduction to Numerical Methods for Engineering spring 2005, by Charbel Farhat</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PL682UO4IMem-ZiiCDz7C6bVRjxJ5P35zk">Stanford CME 200 Linear Algebra with Application to Engineering Computations autumn 2004, by Margot Gerritsen</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PL682UO4IMem-OlrG8LXfWQJ2kV_4mpAau">Stanford CME 302 Numerical Linear Algebra autumn 2007, by Gene Golub</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLRb3xghOQGNKbUt8zIRpwrQ-SZ6aIZNvt">TUe Numerical Linear Algebra 2021, by Martijn Anthonissen</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLep-kTP3NkcMdmrw07VsKFt87FT584Cpd">Numerical Linear Algebra fall 2018, by Jaegul Choo</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLQ3UicqQtfNv_Io_NT1b0Nzr9YDqpK3Lb">MIT 6.S955 Applied Numerical Algorithms fall 2023, by Justin Solomon</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLaVBOvvdB5ctaLM6AmkUaODhd4JhyP_zC">UC Berkeley Math 55 Discrete Mathematics fall 2021, by Nikhil Srivastava</a></li> 
 <li><a href="https://www.youtube.com/@citqualityeducation803/videos">Fundamental Mathematics for Robotics spring 2020, by Ken Tomiyama</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLcip-Gs_jEK_l2pNG8V_0UDK9jyPtLyuq">Short Course on Casual Inference, by Sanjay Shakkottai</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLN_qg0-2-0SzrzpEoojAa4anJdaKa49GM">UCLA STAT 100C Linear Models spring 2023, by Arash Amini</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLZ-krWGO-UEyLqtyA2pACX_tXXBTLWkI1">MSU Math for Computing</a></li> 
</ul> 
<hr /> 
<h3>Web Programming and Internet Technologies</h3> 
<ul> 
 <li><a href="https://www.edx.org/course/cs50s-web-programming-with-python-and-javascript">CS50's Web Programming with Python and JavaScript</a></li> 
 <li><a href="http://wdd.io/">Web Design Decal - HTML/CSS/JavaScript Course, University of California, Berkeley</a></li> 
 <li><a href="http://cs75.tv/2012/summer/">CS 75 Building Dynamic Websites - Harvard University</a></li> 
 <li><a href="https://nptel.ac.in/courses/106105084/">Internet Technology - IIT Kharagpur</a></li> 
 <li><a href="https://nptel.ac.in/courses/106106156/">Introduction to Modern Application Development - IIT Madras</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLk97mPCd8nvbxGGfkYkBXrSEvpTc1xTF8">CSE 199 - How the Internet Works, Fall 2016 - University of Buffalo</a></li> 
 <li><a href="https://www.schneems.com/ut-rails">Open Sourced Elective: Database and Rails - Intro to Ruby on Rails, University of Texas</a> (<a href="https://www.youtube.com/playlist?list=PL7A85FD7803A8CB1F">Lectures - Youtube</a>)</li> 
 <li><a href="https://courses.cs.washington.edu/courses/csep545/12wi/">CSEP545 - Transaction Processing for E-Commerce, Winter 2012 - University of Washington</a> (<a href="https://courses.cs.washington.edu/courses/csep545/12wi/video/">Videos</a>)</li> 
 <li><a href="https://www.cs.colostate.edu/~ct310/yr2016sp/home_progress.php">CT 310 Web Development - Colorado State University</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLvifRcqOOwF9cfLMTE-42fiBsWvBsOEkS">Internet Technologies and Applications 2012, Steven Gordon - Thammasat University, Thailand</a></li> 
 <li><a href="https://itunes.apple.com/WebObjects/MZStore.woa/wa/viewPodcast?id=454017618">CSCI 3110 Advanced Topics in Web Development, Fall 2011 - ETSU iTunes</a></li> 
 <li><a href="https://itunes.apple.com/us/itunes-u/e-commerce-implementation/id1020427670">CSCI 5710 e-Commerce Implementation, Fall 2015 - ETSU iTunes</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLAwxTw4SYaPlLXUhUNt1wINWrrH9axjcI">MOOC - Web Development - Udacity</a></li> 
 <li><a href="https://open.hpi.de/courses/webtech2015/items/4oqxq6euKfhXgHOMwFBxbn">Web Technologies Prof. Dr. Christoph Meinel - HPI</a></li> 
</ul> 
<hr /> 
<h3>Theoretical CS and Programming Languages</h3> 
<ul> 
 <li><a href="https://archive.org/details/academictorrents_e31e54905c7b2669c81fe164de2859be4697013a">MOOC - Compilers - Stanford University</a></li> 
 <li><a href="https://www.cs.cornell.edu/courses/cs6120/2020fa/self-guided/">CS 6120: Advanced Compilers: The Self-Guided Online Course - Cornell University</a></li> 
 <li><a href="https://sites.google.com/a/bodik.org/cs164/home">CS 164 Hack your language, UC Berkeley</a> (<a href="https://www.youtube.com/playlist?list=PLuhjguFxSeVLvKvWwTUIpVwXdLtZPX1ZS">Lectures - Youtube</a>)</li> 
 <li><a href="http://www.aduni.org/courses/theory/index.php?view=cw">Theory of computation - Shai Simonson</a></li> 
 <li><a href="http://cs.brown.edu/courses/cs173/2012/Videos/">CS 173 Programming Languages, Brown University</a> (<a href="http://cs.brown.edu/courses/cs173/2012/book/">Book</a>)</li> 
 <li><a href="https://www.youtube.com/playlist?list=PLm3J0oaFux3ZYpFLwwrlv_EHH9wtH6pnX">CS Theory Toolkit at CMU 2020</a></li> 
 <li><a href="https://courses.engr.illinois.edu/cs421/fa2014/">CS 421 - Programming Languages and Compilers, UIUC</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLzV58Zm8FuBL6OAv1Yu6AwXZrnsFbbR0S">CSC 253 - CPython internals: A ten-hour codewalk through the Python interpreter source code, University of Rochester</a></li> 
 <li><a href="https://courses.cs.washington.edu/courses/cse341/13sp/">CSE341 - Programming Languages, Dan Grossman, Spring 2013 - University of Washington</a></li> 
 <li><a href="https://courses.cs.washington.edu/courses/csep501/09au/lectures/video.html">CSEP 501 - Compiler Construction, University of Washington</a> (<a href="https://www.youtube.com/playlist?list=PLTPQEx-31JXhfAWGnGzwbfhB2zUB7Jd4C">Lectures - Youtube</a>)</li> 
 <li><a href="https://courses.cs.washington.edu/courses/csep505/15wi/video/">CSEP 505 Programming Languages, Winter 2015 - University of Washington</a></li> 
 <li><a href="http://cs.wheaton.edu/~tvandrun/dmfp/">DMFP - Discrete Mathematics and Functional Programming, Wheaton College</a></li> 
 <li><a href="https://courses.engr.illinois.edu/cs498374/fa2014/lectures.html">CS 374 - Algorithms &amp; Models of Computation (Fall 2014), UIUC</a> (<a href="https://www.youtube.com/playlist?list=PL0v718LJg-7_4Zwx3CE7kZ398mhlB2TqF473">Lecture videos</a>)</li> 
 <li><a href="https://stellar.mit.edu/S/course/6/sp15/6.045/materials.html">6.045 Automata, Computability, and Complexity, MIT</a> (<a href="http://stellar.mit.edu/S/course/6/sp15/6.045/special/videos/index.html">Lecture Videos</a>)</li> 
 <li><a href="https://www.youtube.com/playlist?list=PL82C4B8475CAC3F95">MOOC - Automata - Jeffrey Ullman - Coursera</a></li> 
 <li><a href="http://web.cecs.pdx.edu/~harry/videos/">CS581 Theory of Computation - Portland State University</a> (<a href="https://www.youtube.com/playlist?list=PLbtzT1TYeoMjNOGEiaRmm_vMIwUAidnQz">Lectures - Youtube</a>)</li> 
 <li><a href="https://www.youtube.com/playlist?list=PLslgisHe5tBM8UTCt1f66oMkpmjCblzkt">Theory of Computation - Fall 2011 UC Davis</a></li> 
 <li><a href="http://www.cse.chalmers.se/edu/course/TDA555/index.html">TDA555 Introduction to Functional Programming - Chalmers University of Technology</a> (<a href="https://www.youtube.com/playlist?list=PLIQ9jYeUxhgqEnjey91yRTITaXqZQy3Ta">Lectures - YouTube</a>)</li> 
 <li><a href="https://www.youtube.com/playlist?list=PLm3J0oaFux3bLpmu56cDd1PUTp-aJVaTo">Ryan O'Donnell Theoretical Computer Science Talks</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLtRG9GLtNcHBv4cuh2w1cz5VsgY6adoc3">Philip Wadler Haskell lecture recordings</a></li> 
 <li><a href="http://www.cs.nott.ac.uk/~pszgmh/pgp.html">Functional Programming (2021) - University of Nottingham</a></li> 
 <li><a href="http://www.inf.ed.ac.uk/teaching/courses/inf1/fp/">Functional Programming - University of Edinburgh - 2016-17</a></li> 
 <li><a href="https://www.youtube.com/user/afigfigueira/playlists?sort=dd&amp;view=50&amp;shelf_id=9">MOOC - Functional Programming Principles in Scala by Martin Odersky</a></li> 
 <li><a href="https://people.eecs.berkeley.edu/~bodik/cs294fa12">CS294 - Program Synthesis for Everyone</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLMhMDErmC1TdBMxd3KnRfYiBV2ELvLyxN">MOOC - Principles of Reactive Programming, Scala - Coursera</a></li> 
 <li><a href="https://bartoszmilewski.com/2014/10/28/category-theory-for-programmers-the-preface/">Category Theory for Programmers, 2014 - Bartosz Milewski</a> (<a href="https://www.youtube.com/playlist?list=PLbgaMIhjbmEnaH_LTkxLI7FMa2HsnawM_">YouTube</a>)</li> 
 <li>Oregon Programming Languages Summer School (Proof theory, type theory, category theory, verification) 
  <ul> 
   <li><a href="https://www.cs.uoregon.edu/research/summerschool/summer12/curriculum.html">2012 Lectures</a></li> 
   <li><a href="https://www.cs.uoregon.edu/research/summerschool/summer13/curriculum.html">2013 Lectures</a></li> 
   <li><a href="https://www.cs.uoregon.edu/research/summerschool/summer14/curriculum.html">2014 Lectures</a></li> 
   <li><a href="https://www.cs.uoregon.edu/research/summerschool/summer15/curriculum.html">2015 Lectures</a></li> 
   <li><a href="https://www.cs.uoregon.edu/research/summerschool/summer16/curriculum.php">2016 Lectures</a></li> 
   <li><a href="https://www.youtube.com/@OPLSS/playlists"> Latest YT playlists</a></li> 
  </ul> </li> 
 <li><a href="http://www.inf.ed.ac.uk/teaching/courses/inf1/cl/">Inf1 - Computation and Logic 2015 - University of Edinburgh</a></li> 
 <li><a href="http://www.inf.ed.ac.uk/teaching/courses/inf1/fp/">INFORMATICS 1 - FUNCTIONAL PROGRAMMING - University of Edinburgh</a> (<a href="http://groups.inf.ed.ac.uk/vision/VIDEO/2015/inf1fp.htm">Videos</a>)</li> 
 <li><a href="https://nptel.ac.in/courses/106108052/">Compiler Design - IISC Bangalore</a></li> 
 <li><a href="https://nptel.ac.in/courses/106104123/">Compiler Design - IIT Kanpur</a></li> 
 <li><a href="https://nptel.ac.in/courses/106102067/">Principles of Programming Languages - IIT Delhi</a></li> 
 <li><a href="https://nptel.ac.in/courses/106108113/">Principles of Compiler Design - IISC Bangalore</a></li> 
 <li><a href="https://nptel.ac.in/courses/106106137/">Functional Programming in Haskell - IIT Madras</a></li> 
 <li><a href="https://nptel.ac.in/courses/106104148/">Theory of Computation - IIT Kanpur</a></li> 
 <li><a href="https://nptel.ac.in/courses/106106049/">Theory of Automata, Formal Languages and Computation - IIT Madras</a></li> 
 <li><a href="https://nptel.ac.in/courses/106104028/">Theory of Computation - IIT Kanpur</a></li> 
 <li><a href="https://nptel.ac.in/courses/106102013/">Logic for CS - IIT Delhi</a></li> 
 <li><a href="https://www.cs.swarthmore.edu/~jpolitz/cs75/s16/index.html">Principles of Compiler Design - Swarthmore College</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLm3J0oaFux3YL5vLXpzOyJiLtqLp6dCW2">Undergrad Complexity Theory at CMU</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLm3J0oaFux3b8Gg1DdaJOzYNsaXYLAOKH">Graduate Complexity Theory at CMU</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLm3J0oaFux3aafQm568blS9blxtA_EWQv">Great Ideas in Theoretical Computer Science at CMU</a> 
  <ul> 
   <li><a href="https://www.cs251.com/">Another link</a></li> 
  </ul> </li> 
 <li><a href="https://www.youtube.com/playlist?list=PLm3J0oaFux3YypJNaF6sRAf2zC1QzMuTA">Analysis of Boolean Functions at CMU</a></li> 
 <li><a href="http://ais.informatik.uni-freiburg.de/teaching/ss15/bridging/">Theoretical Computer Science (Bridging Course)(Tutorial) - SS 2015</a></li> 
 <li><a href="https://norswap.com/compilers/">Languages &amp; Translators - UCLouvain LINFO2132</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLf3ZkSCyj1tf3rPAkOKY5hUzDrDoekAc7">Compiler Design by Sorav Bansal</a></li> 
</ul> 
<hr /> 
<h3>Embedded Systems</h3> 
<ul> 
 <li><a href="http://users.ece.utexas.edu/~valvano/Volume1/E-Book/VideoLinks.htm">EE319K Embedded Systems - UT Austin</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLyg2vmIzGxXGBxFu8nvX3KBadSdsNAvbA">EE445L Embedded Systems Design Lab, Fall 2015, UTexas</a></li> 
 <li><a href="https://youtube.com/playlist?list=PLu0nzW8Es1x0RIvuWdw1Diez2Clk8xAX5">CS149 Introduction to Embedded Systems - Spring 2011 - UCBerkeley</a></li> 
 <li><a href="http://people.ece.cornell.edu/land/courses/ece4760/">ECE 4760 Designing with Microcontrollers Fall 2016, Cornell University</a> (<a href="https://www.youtube.com/playlist?list=PLKcjQ_UFkrd4I5WOIxHEYZ7iY04lj15Ez">Lectures - Youtube</a>)</li> 
 <li><a href="http://people.ece.cornell.edu/land/courses/ece5760/">ECE 5760 - Advanced Microcontroller Design and system-on-chip, Spring 2016 - Cornell University</a></li> 
 <li><a href="https://video.tu-clausthal.de/vorlesung/408.html">Internet of Things by Prof. Dr.-Ing. Dietmar P. F. Möller</a></li> 
 <li><a href="https://courses.cs.washington.edu/courses/cse351/16sp/videos.html">CSE 351 - The Hardware/Software Interface, Spring 16 - University of Washington</a> (<a href="http://academictorrents.com/details/f1384286c8581bffba11e378fdb37608e649d82a">Coursera</a>)</li> 
 <li><a href="http://people.ece.cornell.edu/land/courses/ece5030/">ECE 5030 - Electronic Bioinstrumentation, Spring 2014 - Cornell University</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLQefpK95HyFmao3zi-WDOMkeSev-Je5dE">ECE/CS 5780/6780 - Embedded Systems Design, Spring 14 - University of Utah</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLE4462C1C306E2EB2">Embedded Systems Class - Version 1 - 2011 - UNCC</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLPIqCiMhcdO5gxLJWt_hY5CPMzqg75IU5">Embedded Systems using the Renesas RX63N Processor - Version 3 - UNCC</a></li> 
 <li><a href="https://www.tele-task.de/series/864/">Software Engineering for Embedded Systems (WS 2011/12) - HPI University of Potsdam</a></li> 
 <li><a href="https://nptel.ac.in/courses/117106112/">Embedded Software Testing - IIT Madras</a></li> 
 <li><a href="https://nptel.ac.in/courses/108102045/">Embedded Systems - IIT Delhi</a></li> 
 <li><a href="https://nptel.ac.in/courses/106105159/">Embedded Systems Design - IIT Kharagpur</a></li> 
 <li><a href="https://nptel.ac.in/courses/117106111/">ARM Based Development - IIT Madras</a></li> 
 <li><a href="https://itunes.apple.com/us/itunes-u/software-engineering-for-self/id993578475">Software Engineering for Self Adaptive Systems - iTunes - HPI University of Potsdam</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLnvE9iJk1wvib_pdUPdQGYZrkrmg9mf__">EE260 Embedded Systems by Robert Paz</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLHih6DnKQaoYQ5PIT3Tp-UrqUguDYWYQu">IoT Summer School</a></li> 
 <li><a href="http://www.cim.mcgill.ca/~jer/courses/es/">ECSE 421 - Embedded Systems - McGill</a></li> 
 <li><a href="https://nptel.ac.in/courses/108/108/108108123/">NOC:Advanced IOT Applications - IISc Bangalore</a></li> 
 <li><a href="https://nptel.ac.in/courses/108/108/108108098/">NOC:Design for internet of things - IISc Bangalore</a></li> 
</ul> 
<hr /> 
<h3>Real time system evaluation</h3> 
<ul> 
 <li><a href="https://nptel.ac.in/courses/106/106/106106048/">Performance evaluation of Computer systems - IIT Madras</a></li> 
 <li><a href="https://nptel.ac.in/courses/106/105/106105036/">Real Time systems - IIT Karaghpur</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLoROMvodv4rMWw6rRoeSpkiseTHzWj6vu">EE 380 Colloquium on Computer Systems - Stanford University</a></li> 
 <li><a href="https://nptel.ac.in/courses/106/108/106108058/">System storages - IISc Bangalore</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PL2F82ECDF8BB71B0C">High Performance Computing - IISC Bangalore</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLmJwSK7qduwUBwrFn3SY8vi4AYa2rVTWH">2023 High Performance Computing Course Prof Dr - Ing Morris Riedel</a> (<a href="https://www.youtube.com/playlist?list=PLmJwSK7qduwWyqcSEB45HOyxq--z8njix">2022</a>)</li> 
 <li><a href="https://www.youtube.com/playlist?list=PLAwxTw4SYaPk8NaXIiFQXWK6VPnrtMRXC">High Performance Computing | Udacity</a></li> 
</ul> 
<hr /> 
<h3>Computer Organization and Architecture</h3> 
<ul> 
 <li><strong>Computer Organization</strong> 
  <ul> 
   <li><a href="http://aduni.org/courses/hcw/index.php?view=cw">How Computers Work - Aduni</a></li> 
   <li><a href="http://www-inst.eecs.berkeley.edu/~cs61c/sp15/">CS 61C - Machine Structures, UC Berkeley</a> (<a href="http://www.infocobuild.com/education/audio-video-courses/computer-science/cs61c-spring2015-berkeley.html">Lectures - InfoCoBuild</a>)</li> 
   <li><a href="https://www.youtube.com/playlist?list=PLrRW1w6CGAcXbMtDFj205vALOGmiRc82-">6.004 - Computation Structures Spring 2013, MIT</a></li> 
   <li><a href="http://www.cs.utah.edu/~rajeev/cs3810/">CS/ECE 3810 Computer Organization, Fall 2015, , University of Utah</a> (<a href="https://www.youtube.com/playlist?list=PLm7BxCUdWqZzjZ-jRe73KUfj2GsSS2FPy">YouTube</a>)</li> 
   <li><a href="https://nptel.ac.in/courses/117105078/">Digital Computer Organization - IIT Kharagpur</a></li> 
   <li><a href="https://nptel.ac.in/courses/106106092/">Computer Organization - IIT Madras</a></li> 
   <li><a href="http://video.bilkent.edu.tr/course_videos.php?courseid=16">CS-224 - Computer Organization, 2009-2010 Spring, Bilkent University</a> (<a href="https://www.youtube.com/playlist?list=PLhwVAYxlh5dvB1MkZrcRZy6x_a2yORNAu">YouTube playlist</a>)</li> 
   <li><a href="http://groups.inf.ed.ac.uk/vision/VIDEO/2014/inf2c-cs.htm">INFORMATICS 2C - INTRODUCTION TO COMPUTER SYSTEMS (AUTUMN 2016) - University of Edinburgh</a></li> 
  </ul> </li> 
 <li><strong>Computer Architecture</strong> 
  <ul> 
   <li><a href="http://www.ece.cmu.edu/~ece447/s15/doku.php?id=schedule">18-447 - Introduction to Computer Architecture, CMU</a> (<a href="https://youtube.com/playlist?list=PL5PHm2jkkXmi5CxxI7b3JCL1TWybTDtKq">Lectures - YouTube - Fall 15</a>)</li> 
   <li><a href="https://www.youtube.com/playlist?list=PLkFD6_40KJIwEiwQx1dACXwh-2Fuo32qr">CS 152 Computer Architecture and Engineering, UC Berkeley</a></li> 
   <li><a href="https://courses.cs.washington.edu/courses/csep548/12au/video/index.html">CSEP 548 - Computer Architecture Autumn 2012 - University of Washington</a></li> 
   <li><a href="http://www.cs.utah.edu/~rajeev/cs6810/">CS/ECE 6810 Computer Architecture, Spring 2016, University of Utah</a> (<a href="https://www.youtube.com/playlist?list=PL8EC1756A7B1764F6">YouTube</a>)</li> 
   <li><a href="http://academictorrents.com/details/53bae6d22f3b6e692673f9335e0a0198c1618426">MOOC - Computer Architecture, David Wentzlaff - Princeton University/Coursera</a></li> 
   <li><a href="https://safari.ethz.ch/architecture/fall2019/doku.php?id=schedule">Computer Architecture - ETH Zürich - Fall 2019</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL5Q2soXY2Zi-IXWTT7xoNYpst5-zdZQ6y">Digital Circuits and Computer Architecture - ETH Zurich - Spring 2017</a></li> 
   <li><a href="https://nptel.ac.in/courses/106102062/">Computer Architecture - IIT Delhi</a></li> 
   <li><a href="https://nptel.ac.in/courses/106104122/">Computer Architecture - IIT Kanpur</a></li> 
   <li><a href="https://nptel.ac.in/courses/106106134/">Computer Architecture - IIT Madras</a></li> 
   <li><a href="https://nptel.ac.in/courses/106105033/">High Performance Computer Architecture - IIT Kharagpur</a></li> 
   <li><a href="https://cw.fel.cvut.cz/b212/courses/b35apo/en/lectures/start">BE5B35APO - Computer Architectures, Spring 2022, CTU - FEE</a> (<a href="https://www.youtube.com/playlist?list=PLQL6z4JeTTQnTrML7HgagbjdpCtvdyu0M">YouTube - Spring 2022</a>) (<a href="https://comparch.edu.cvut.cz/">RISC-V simulator - QtRvSim</a>)</li> 
  </ul> </li> 
 <li><strong>Parallel Computer Architecture</strong> 
  <ul> 
   <li><a href="http://15418.courses.cs.cmu.edu/spring2015/">15-418 - Parallel Computer Architecture and Programming, CMU</a> (<a href="https://scs.hosted.panopto.com/Panopto/Pages/Sessions/List.aspx#folderID=%22a5862643-2416-49ef-b46b-13465d1b6df0%22">Lecture Videos</a>)</li> 
   <li><a href="https://people.eecs.berkeley.edu/~demmel/cs267_Spr16/">CS 267 Applications of Parallel Computers, Spring 16 - UC Berkeley</a> (<a href="https://www.youtube.com/playlist?list=PLkFD6_40KJIzSfxr35ZT59-LZcibZmfp2">YouTube</a>)</li> 
   <li><a href="http://academictorrents.com/details/8903d0871c652b96c7b29db738cea76902d65888">MOOC - Heterogeneous Parallel Programming - Coursera</a></li> 
   <li><a href="https://nanohub.org/resources/7225">ECE 498AL - Programming Massively Parallel Processors</a></li> 
   <li><a href="https://nptel.ac.in/courses/106102114/">Parallel Computing - IIT Delhi</a></li> 
   <li><a href="http://groups.inf.ed.ac.uk/vision/VIDEO/2012/pa.htm">Parallel Architectures 2012/13- University of Edinburgh</a></li> 
  </ul> </li> 
 <li><strong>Digital Systems Design</strong> 
  <ul> 
   <li><a href="https://www.youtube.com/playlist?list=PLB52B8F4E464CEEF7">ELEC2141 Digital Circuit Design, UNSW</a></li> 
   <li><a href="https://nptel.ac.in/courses/117105080/">Digital Systems Design - IIT Kharagpur</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLPIqCiMhcdO7bBmieyG5u41x2Ogcn67Bs">Digital Design Course - 2015 - UNCC</a></li> 
  </ul> </li> 
 <li><a href="https://www.youtube.com/playlist?list=PL6B940F08B9773B9F">CS1 - Higher Computing - Richard Buckland UNSW</a></li> 
 <li><a href="https://www.nand2tetris.org/">MOOC - From NAND to Tetris - Building a Modern Computer From First Principles</a> (<a href="https://www.youtube.com/playlist?list=PLNMIACtpT9BfztU0P92qlw8Gd4vxvvfT1">YouTube</a>)</li> 
 <li><a href="https://ocw.tudelft.nl/courses/system-validation/">System Validation, TU Delft</a></li> 
 <li><a href="https://nptel.ac.in/courses/106108055/">High Performance Computing - IISC Bangalore</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLUFkSN0XLZ-n91t_AX5zO007Giz1INwPd">Introduction to ARM - Open SecurityTraining</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PL038BE01D3BAEFDB0">Intro x86 (32 bit) - Open SecurityTraining</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PL8F8D45D6C1FFD177">Intermediate x86 (32 bit) - Open SecurityTraining</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PL5Q2soXY2Zi8J58xLKBNFQFHRO3GrXxA9">Design of Digital Circuits - ETH Zürich - Spring 2019</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PL5Q2soXY2Zi_gntM55VoMlKlw7YrXOhbl">Onur Mutlu @ TU Wien 2019 - Memory Systems</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PL5Q2soXY2Zi-IymxXpH_9vlZCOeA7Yfn9">Memory Systems Course - Technion, Summer 2018</a></li> 
</ul> 
<hr /> 
<h3>Security</h3> 
<ul> 
 <li><a href="https://www.tele-task.de/series/1227/">Internet Security (WT 2018/19) - HPI University of Potsdam</a></li> 
 <li><a href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-858-computer-systems-security-fall-2014/video_galleries/video-lectures/">6.858 Computer Systems Security - MIT OCW</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PL1y1iaEtjSYiiSGVlL1cHsXN_kvJOOhu-">CS 253 Web Security - Stanford University</a></li> 
 <li><a href="https://cs161.org/">CS 161: Computer Security, UC Berkeley</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PL6ogFv-ieghe8MOIcpD6UDtdK-UMHG8oH">6.875 - Cryptography - Spring 2018- MIT</a></li> 
 <li><a href="https://courses.cs.washington.edu/courses/csep590a/11wi/">CSEP590A - Practical Aspects of Modern Cryptography, Winter 2011 - University of Washington</a> (<a href="https://courses.cs.washington.edu/courses/csep590a/11wi/video/">Videos</a>)</li> 
 <li><a href="https://courses.engr.illinois.edu/cs461/sp2016/">CS461/ECE422 - Computer Security - University of Illinois at Urbana-Champaign</a> (<a href="https://recordings.engineering.illinois.edu:8443/ess/portal/section/8a560718-345a-417a-b665-6bd375a71ee2">Videos</a>)</li> 
 <li><a href="https://www.youtube.com/playlist?list=PLwJWuZfL_Ga2KJrTf9hOIgAQWkSpn9RNm">Introduction to Cryptography, Christof Paar - Ruhr University Bochum, Germany</a></li> 
 <li><a href="https://itunes.apple.com/us/itunes-u/computer-science-foundations/id389259109">ECS235B Foundations of Computer and Information Security - UC Davis</a></li> 
 <li><a href="http://www.cs.fsu.edu/~redwood/OffensiveComputerSecurity/lectures.html">CIS 4930/ CIS 5930 - Offensive Computer Security, Florida State University</a></li> 
 <li><a href="https://nptel.ac.in/courses/106106129/">Introduction to Information Security I - IIT Madras</a></li> 
 <li><a href="https://nptel.ac.in/courses/106106141/">Information Security - II - IIT Madras</a></li> 
 <li><a href="https://nptel.ac.in/courses/106107155/">Introduction to Cryptology - IIT Roorkee</a></li> 
 <li><a href="https://nptel.ac.in/courses/106105031/">Cryptography and Network Security - IIT Kharagpur</a></li> 
 <li><a href="https://courseware.stanford.edu/pg/courses/334553/18636-spring-2013">18-636 Browser Security, Stanford</a></li> 
 <li><a href="https://www.tele-task.de/archive/series/overview/1084/">Internet Security - Weaknesses and Targets (WT 2015/16)</a> (<a href="https://www.tele-task.de/archive/series/overview/921/">WT 2012/13</a> (<a href="https://www.youtube.com/playlist?list=PLVWVhkyKd-7taP50fB9PeZ2W_EPTOLD8o">YouTube</a>))</li> 
 <li><a href="https://www.youtube.com/playlist?list=PLvifRcqOOwF9-XSGfm-3uA9DfF7plasCF">IT Security, Steven Gordon - Thammasat University, Thailand</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLvifRcqOOwF-z2sfMb3w0uQzd7PfaLFlU">Security and Cryptography, Steven Gordon - Thammasat University, Thailand</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PL3F2F89F4CD1E1DF4">MOOC - Cryptography - Coursera</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLAwxTw4SYaPkG-z00NybuIyDqT4sRh3ak">MOOC - Intro to Information Security - Udacity</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLciCszvvRCTV09wIXJwiPmYF7thHiq4En">ICS 444 - Computer &amp; Network Security</a></li> 
 <li><a href="https://nptel.ac.in/courses/106106146/">Privacy and Security in Online Social Networks - IIT Madras</a></li> 
 <li><a href="http://opensecuritytraining.info/MalwareDynamicAnalysis.html">Malware Dynamic Analysis - Open SecurityTraining</a> (<a href="https://www.youtube.com/playlist?list=PLUFkSN0XLZ-kqYbGpY4Gt_VATd4ytQg-Z">YouTube</a>)</li> 
 <li><a href="https://asecuritysite.com/csn09112">CSN09112 - Network Security and Cryptography - Bill Buchanan - Edinburgh Napier</a></li> 
 <li><a href="https://asecuritysite.com/csn10107">CSN10107 - Security Testing and Network Forensics - Bill Buchanan - Edinburgh Napier</a></li> 
 <li><a href="https://asecuritysite.com/csn11123">CSN11123 - Advanced Cloud and Network Forensics - Bill Buchanan - Edinburgh Napier</a></li> 
 <li><a href="https://asecuritysite.com/csn11117">CSN11117 - e-Security - Bill Buchanan - Edinburgh Napier</a></li> 
 <li><a href="https://asecuritysite.com/csn08704">CSN08704 - Telecommunications - Bill Buchanan - Edinburgh Napier</a></li> 
 <li><a href="https://asecuritysite.com/CSN11128">CSN11128 - Incident Response and Malware Analysis - Bill Buchanan - Edinburgh Napier</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLoOmvuyo5UAdsi-IacgZJQF1MRw0Ee-HH">Internet Security for Beginners by Dr. Christoph Meinel - HPI</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLCS2zI95IiNybAAQ0HL88YzwRpLXje5y6">Offensive Security and Reverse Engineering, Chaplain University by Ali Hadi</a></li> 
</ul> 
<hr /> 
<h3>Computer Graphics</h3> 
<ul> 
 <li><a href="http://inst.eecs.berkeley.edu/~cs184/fa12/onlinelectures.html">CS184 - Computer Graphics, Fall 2012 - UC Berkeley</a></li> 
 <li><a href="https://itunes.apple.com/us/itunes-u/computer-graphics-fall-2009/id457893733?mt=10">ECS 175 - Computer Graphics, Fall 2009 - UC Davis</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLkHIj5SCfn3_PCotoqTetMpJc_jkpkgLt">6.837 - Computer Graphics - Spring 2017 - MIT</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLkHIj5SCfn3-FeWqD3xeOZWP2kQYY654o">6.838 - Shape Analysis - Spring 2017- MIT</a></li> 
 <li><a href="https://nptel.ac.in/courses/106102065/">Introduction to Computer Graphics - IIT Delhi</a></li> 
 <li><a href="https://nptel.ac.in/courses/106106090/">Computer Graphics - IIT Madras</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLDFA8FCF0017504DE">Computer Graphics 2012, Wolfgang Huerst, Utrecht University</a></li> 
 <li><a href="http://dataviscourse.net/2016/index.html">CS 5630/6630 - Visualization, Fall 2016, University of Utah</a> (<a href="https://www.youtube.com/playlist?list=PLbuogVdPnkCpQY3miQpTJtnHgCLze2lr0">Lectures - Youtube</a>)</li> 
 <li><a href="https://www.youtube.com/playlist?list=PLslgisHe5tBNnySlj9TlL-n-4jNEK-xgi">Advanced Visualization UC Davis</a></li> 
 <li><a href="https://itunes.apple.com/us/itunes-u/csci-e-234-introduction-to/id429428034?mt=10">CSCI E-234 - Introduction to Computer Graphics and GPU Programming, Harvard Extension School</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PL9C949E9F19381E61">Computer Graphics Fall 2011, Barbara Hecker</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PL4A8BA1C3B38CFCA0">Introduction to Graphics Architecture</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLslgisHe5tBPckSYyKoU3jEA4bqiFmNBJ">Ray Tracing for Global Illumination, UCDavis</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLujxSBD-JXgnGmsn7gEyN28P1DnRZG7qi">Rendering / Ray Tracing Course, SS 2015 - TU Wien</a></li> 
 <li><a href="http://graphics.cs.ucdavis.edu/~joy/ecs178/Units.html">ECS 178 Introduction to Geometric Modeling, Fall 2012, UC Davis</a> (<a href="https://itunes.apple.com/us/itunes-u/computer-science-introduction/id389259246">iTunes</a>)</li> 
 <li><a href="https://nptel.ac.in/courses/106102011/">Computational Geometry - IIT Delhi</a></li> 
 <li><a href="http://graphics.stanford.edu/courses/cs468-13-spring/schedule.html">CS 468 - Differential Geometry for Computer Science - Stanford University</a> (<a href="https://www.youtube.com/playlist?list=PL_deCdukpyu1rdH85XsEEREbpoqEauiJl">Lecture videos</a>)</li> 
 <li><a href="http://15462.courses.cs.cmu.edu/fall2020/">CMU 15-462/662: Computer Graphics</a></li> 
</ul> 
<hr /> 
<h3>Image Processing and Computer Vision</h3> 
<ul> 
 <li><a href="https://www.youtube.com/playlist?list=PLZ9qNFMHZ-A79y1StvUUqgyL-O0fZh2rs">MOOC - Digital Image processing - Duke/Coursera</a></li> 
 <li><a href="https://nptel.ac.in/courses/117105079/">Digital Image Processing - IIT Kharagpur</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLA64AFAE28B8DD0FD">Image Processing and Analysis - UC Davis</a></li> 
 <li><a href="https://courses.engr.illinois.edu/cs543/sp2017/">CS 543 - Computer Vision – Spring 2017</a> (<a href="https://echo360.org/section/283b0471-3d9f-4efb-9c51-bc00e778735e/home">Recordings</a>)</li> 
 <li><a href="https://www.crcv.ucf.edu/courses/cap5415-fall-2012/">CAP 5415 - Computer Vision - University of Central Florida</a>(<a href="https://www.youtube.com/playlist?list=PLd3hlSJsX_ImKP68wfKZJVIPTd8Ie5u-9">Video Lectures</a>)</li> 
 <li><a href="https://inst.eecs.berkeley.edu/~ee225b/sp14/">EE225B - Digital Image Processing, Spring 2014 - UC Berkeley</a> (<a href="http://www-video.eecs.berkeley.edu/~avz/video_225b.html">Videos - Spring 2006</a>)</li> 
 <li><a href="https://engineering.purdue.edu/~bouman/ece637/">EE637 - Digital Image Processing I - Purdue University</a> (<a href="https://www.youtube.com/user/ModelBasedImaging">Videos - Sp 2011</a>,<a href="https://engineering.purdue.edu/~bouman/ece637/lectures/lectures07/">Videos - Sp 2007</a>)</li> 
 <li><a href="https://vision.in.tum.de/teaching/ws2015/vmcv2015">Computer Vision I: Variational Methods - TU München</a> (<a href="https://www.youtube.com/playlist?list=PLTBdjV_4f-EJ7A2iIH5L5ztqqrWYjP2RI">YouTube</a>)</li> 
 <li><a href="https://vision.in.tum.de/teaching/ss2016/mvg2016">Computer Vision II: Multiple View Geometry (IN2228), SS 2016 - TU München</a> (<a href="https://www.youtube.com/playlist?list=PLTBdjV_4f-EJn6udZ34tht9EVIW7lbeo4">YouTube</a>)</li> 
 <li><a href="http://inside.mines.edu/~whoff/courses/EENG510/lectures/">EGGN 510 - Image and Multidimensional Signal Processing - Colorado School of Mines</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PL4B3F8D4A5CAD8DA3">EENG 512/CSCI 512 - Computer Vision - Colorado School of Mines</a></li> 
 <li><a href="https://www.ecse.rpi.edu/~rjradke/cvfxcourse.html">Computer Vision for Visual Effects - RPI</a> (<a href="https://www.youtube.com/playlist?list=PLuh62Q4Sv7BUJlKlt84HFqSWfW36MDd5a">YouTube</a>)</li> 
 <li><a href="https://www.ecse.rpi.edu/~rjradke/improccourse.html">Introduction to Image Processing - RPI</a> (<a href="https://www.youtube.com/playlist?list=PLuh62Q4Sv7BUf60vkjePfcOQc8sHxmnDX">YouTube</a>)</li> 
 <li><a href="https://www.crcv.ucf.edu/cap6412-spring-2013/">CAP 6412 - Advanced Computer Vision - University of Central Florida</a>(<a href="https://www.crcv.ucf.edu/cap6412-spring-2013/">Video lectures</a>) (<a href="https://www.youtube.com/playlist?list=PLd3hlSJsX_ImoNaeX5vFrxogGXTSmS993">Spring 2018</a>)</li> 
 <li><a href="https://www.ecse.rpi.edu/~rjradke/dspcourse.html">Digital Signal Processing - RPI</a></li> 
 <li><a href="http://homepages.inf.ed.ac.uk/rbf/AVINVERTED/main_av.htm">Advanced Vision 2014 - University of Edinburgh</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLgnQpQtFTOGRsi5vzy9PiQpNWHjq-bKN1">Photogrammetry Course - 2015/16 - University of Bonn, Germany</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLAwxTw4SYaPnbDacyrK_kB_RUkuxQBlCm">MOOC - Introduction to Computer Vision - Udacity</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLuh62Q4Sv7BUf60vkjePfcOQc8sHxmnDX">ECSE-4540 - Intro to Digital Image Processing - Spring 2015 - RPI</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLuRaSnb3n4kSQFyt8VBldsQ9pO9Xtu8rY">Machine Learning for Computer Vision - Winter 2017-2018 - UniHeidelberg</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLcXJymqaE9POZaT6UFAUUvrQiVQLfzCLN">High-Level Vision - CBCSL OSU</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLcXJymqaE9POnU3bVmCVMmtSXzCpcj28T">Advanced Computer Vision - CBCSL OSU</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLcXJymqaE9PMexHWGgXJVINpr6ajy5vuz">Introduction to Image Processing &amp; Computer Vision - CBCSL OSU</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLTBdjV_4f-EIiongKlS9OKrBEp8QR47Wl">Machine Learning for Computer Vision - TU Munich</a></li> 
 <li><a href="https://nptel.ac.in/courses/106104119/">Biometrics - IIT Kanpur</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLTWuXgjdOrnmXVVQG5DRkVeOIGOcTmCIw">Quantitative Big Imaging 2019 ETH Zurich</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLyH-5mHPFffFvCCZcbdWXAb_cTy4ZG3Dj">Multiple View Geometry in Computer Vision</a></li> 
 <li><a href="https://www.ipb.uni-bonn.de/3dcs-ge-2020/">3D Coordinate Systems – Remote Course (GE, 2020) - University of Bonn</a> (<a href="https://www.ipb.uni-bonn.de/teaching/3d-coordinate-systems-podcasts/">2013 lectures</a>)</li> 
 <li><a href="https://www.ipb.uni-bonn.de/teaching/cpp-2020/lectures">Modern C++ Course For CV (2020) - University of Bonn</a></li> 
 <li><a href="https://www.ipb.uni-bonn.de/photo1-2020/">Photogrammetry 1 Course – 2020 - University of Bonn</a></li> 
 <li><a href="https://www.ipb.uni-bonn.de/photo2-2020/">Photogrammetry II Course 2020/21 - University of Bonn</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLxg0CGqViygP47ERvqHw_v7FVnUovJeaz">3D Computer Vision - National University of Singapore</a></li> 
</ul> 
<hr /> 
<h3>Computational Physics</h3> 
<ul> 
 <li><a href="https://www.youtube.com/playlist?list=PLo4wAAMJnA1wDQ2ZmTJCaBYdrXqBWUwT5">Statistics and Machine Learning for Astronomy</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PL3jLiVc5sr3P7Uov0VFsEfwPOEG1rF-FO">Astronomical data analysis using Python 2021 - NRC IUCAA</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLtxxbMktGS8pjURPBXJTAkClnXVE_ZNni">SPARC Workshop on Machine Learning in Solar Physics and Space Weather - CESSI IISER Kolkata</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLnUDCXHuQXBaGrYSbDMWi2inp7GSe3__8">Data-Driven Methods and Machine Learning in Atmospheric Sciences - IISC</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLPdkBLbDPtqoHDcjUweIJqe6GKnOz0-Qw">Computational Astrophysics - AstroTwinCoLo, 2015</a></li> 
 <li><a href="https://m.youtube.com/playlist?list=PL8_xPU5epJdcv2L4MzpzNd6gPyq6glmjc">Astroinformatics 2019 Conference - Caltech</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLNvIBWkEdZ2iCc8G9dvx6MQvBruJG-TE8">Space Science with Python - Astroniz</a></li> 
</ul> 
<hr /> 
<h3>Computational Biology</h3> 
<ul> 
 <li><a href="http://web.cs.ucdavis.edu/~gusfield/cs124videos/videolist.html">ECS 124 - Foundations of Algorithms for Bioinformatics - Dan Gusfield, UC Davis</a> (<a href="https://www.youtube.com/playlist?list=PL_w_qWAQZtAbh8bHfzXYpdnVKCGCDmmoL">YouTube</a>)</li> 
 <li><a href="https://www.youtube.com/playlist?list=PLA48145CC64FE7990">CSE549 - Computational Biology - Steven Skiena - 2010 SBU</a></li> 
 <li><a href="https://ocw.mit.edu/courses/physics/8-591j-systems-biology-fall-2014/">7.32 Systems Biology, Fall 2014 - MIT OCW</a></li> 
 <li><a href="https://ocw.mit.edu/courses/7-91j-foundations-of-computational-and-systems-biology-spring-2014/video_galleries/video-lectures/">6.802J/ 6.874J Foundations of Computational and Systems Biology - MIT OCW</a></li> 
 <li><a href="https://ocw.mit.edu/courses/6-s897-machine-learning-for-healthcare-spring-2019/video_galleries/lecture-videos/">6.S897 Machine Learning For Healthcare</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLypiXJdtIca6dEYlNoZJwBaz__CdsaoKJ">6.047/6.878 Machine Learning for Genomics Fall 2020 - MIT</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLypiXJdtIca5sxV7aE3-PS9fYX3vUdIOX">6.874 MIT Deep Learning in Life Sciences - Spring 2021 - MIT</a></li> 
 <li><a href="http://compbio.mit.edu/lectures.html">6.047/6.878 Public Lectures on Computational Biology: Genomes, Networks, Evolution - MIT</a></li> 
 <li><a href="https://cmgm.stanford.edu/bio84/">Bio 84 - Your Genes and Your Health, Stanford University</a></li> 
 <li><a href="https://cmgm.stanford.edu/biochem218/">BioMedical Informatics 231 Computational Molecular Biology, Stanford University</a></li> 
 <li><a href="http://biochem158.stanford.edu/">BioMedical Informatics 258 Genomics, Bioinformatics &amp; Medicine, Stanford University</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLUKmtlUTHfBPoI70nVz3C-82N4nznc3Iz">03-251: Introduction to Computational Molecular Biology - Carnegie Mellon University</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLUKmtlUTHfBOgpZFmTvsTwkUh2K1RAse-">03-712: Biological Modeling and Simulation - Carnegie Mellon University</a></li> 
 <li><a href="http://bioinformaticsalgorithms.com/videos.htm">MOOC - Bioinformatics Algorithms: An Active Learning Approach - UC San Diego/Coursera</a></li> 
 <li><a href="http://www.klewel.com/conferences/epfl-neural-networks/">Neural Networks and Biological Modeling - Lecturer: Prof. Wulfram Gerstner - EPFL</a></li> 
 <li><a href="http://lcn.epfl.ch/~gerstner/VideoLecturesGerstner.html">Video Lectures of Wulfram Gerstner: Computational Neuroscience - EPFL</a></li> 
 <li><a href="http://www.weizmann.ac.il/mcb/UriAlon/introduction-systems-biology-design-principles-biological-circuits">An Introduction To Systems Biology</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLuiPz6iU5SQ-PAjlyz4b3EIIQ6dpZ2DE_">Introduction to Bioinformatics, METUOpenCourseWare</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PL2mpR0RYFQsBiCWVJSvVAO3OJ2t7DzoHA">MOOC - Algorithms for DNA Sequencing, Coursera</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PL27E877E8206F196B">Frontiers of Biomedical Engineering with W. Mark Saltzman - Yale</a></li> 
 <li><a href="https://nptel.ac.in/courses/102/106/102106068/">NOC:Computational Systems Biology - IIT Madras</a></li> 
 <li><a href="https://nptel.ac.in/courses/102/106/102106065/">NOC:BioInformatics:Algorithms and Applications - IIT Madras</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLlPxFwLgTtnfDtq_AO3dd62s33RHtU4bp">Data Science and AI for Neuroscience Summer School - Caltech Neuroscience</a></li> 
 <li><a href="https://redwood.berkeley.edu/courses/computing-with-high-dimensional-vectors/">Neuroscience 299: Computing with High-Dimensional Vectors - Fall 2021 - UC Berkeley</a></li> 
</ul> 
<hr /> 
<h3>Quantum Computing</h3> 
<ul> 
 <li><a href="https://www.cs.cmu.edu/~odonnell/quantum18/">15-859BB: Quantum Computation and Quantum Information 2018 - CMU</a> (<a href="https://www.youtube.com/playlist?list=PLm3J0oaFux3YL5qLskC6xQ24JpMwOAeJz">Youtube</a>)</li> 
 <li><a href="https://www.youtube.com/playlist?list=PLm3J0oaFux3YL5qLskC6xQ24JpMwOAeJz">Quantum Computation and Information at CMU</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PL0ojjrEqIyPy-1RRD8cTD_lF1hflo89Iu">Ph/CS 219A Quantum Computation - Prof Preskill - Caltech</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PL74Rel4IAsETUwZS_Se_P-fSEyEVQwni7">Quantum Mechanics and Quantum Computation - Umesh Vazirani</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLo0Vs5tDeRLRIPcJ83SN91M-asGuaa1AD">Introduction to quantum computing course 2022 - NYU</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PL9KDUYiMK3D5etNeur9HocwcAcfcDtArw">Phys 1470 - Foundations of Quantum Computing and Quantum Information - U of Pittsburgh</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLnK6MrIqGXsJfcBdppW3CKJ858zR8P4eP">Introduction to Quantum Computing From a Layperson to a Programmer in 30 Steps (EE225 SJSU)</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLnK6MrIqGXsL1KShnocSdwNSiKnBodpie">Quantum Computing Hardware and Architecture (EE274 SJSU)</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLmE1-ewBrbkiOFq_vMXAww4GDMxDAB3pI">Quantum Physics for Non-Physicists 2021 - ETH Zurich</a> (<a href="https://www.youtube.com/playlist?list=PLmE1-ewBrbkiKoYQU4FawveQfhWU_4MkX">2020</a>)</li> 
 <li><a href="https://www.youtube.com/playlist?list=PLOFEBzvs-VvrXTMy5Y2IqmSaUjfnhvBHR">Introduction to Quantum Computing and Quantum Hardware - Qiskit</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLOFEBzvs-VvqKKMXX4vbi4EB1uaErFMSO">Understanding Quantum Information and Computation - Qiskit</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLqLyTdPNhQZwfLoL4QMeI6scnyH1c__tE">Lectures in Quantum Computation and Quantum Information (IIT Madras)</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLq-Gm0yRYwThGmlypvSFQ-kT2rPaXKAZ5">Quantum Information and Computing by Prof. D.K. Ghosh</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLq-Gm0yRYwTj7Fs6jyzYa83HErSrpXgPQ">Quantum Computing by Prof. Debabrata Goswami</a></li> 
 <li><a href="https://ocw.tudelft.nl/courses/building-blocks-quantum-computer-part-1/">The Building Blocks of a Quantum Computer: Part 1 - TU Delft</a></li> 
 <li><a href="https://ocw.tudelft.nl/courses/building-blocks-quantum-computer-part-2/">The Building Blocks of a Quantum Computer: Part 2 - TU Delft</a></li> 
 <li><a href="https://ocw.tudelft.nl/courses/quantum-cryptography/">Quantum Cryptography - TU Delft</a></li> 
 <li><a href="https://zhenyucai.com/post/intro_to_qi/">Introduction to Quantum Information</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLfOgkuiMs5qApXtgIMREPicgbYIGjbf8e">Quantum Computing for Everyone -- Part 1</a> (<a href="https://www.youtube.com/playlist?list=PLfOgkuiMs5qB-0J07mphWZ19j9Gll33ZU">Part 2</a>)</li> 
 <li><a href="https://www.youtube.com/playlist?list=PLfOgkuiMs5qCa8BUrFMumyvPqeoOL-iu8">Quantum Computer Systems – UChicago</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PL1826E60FD05B44E4">Quantum computing for the determined - Michael Nielsen</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLxP0p--aBHmIe--9rczWe4AZmw03e2bz0">Quantum Computing</a></li> 
</ul> 
<hr /> 
<h3>Robotics and Control</h3> 
<ul> 
 <li><a href="https://github.com/michiganrobotics/rob101/tree/main/Fall%202021">ROB 101: Computational Linear Algebra - University of Michigan</a> (<a href="https://www.youtube.com/playlist?list=PLdPQZLMHRjDJ5d_dE4FeOviv0gRe4UYsB">Youtube - Fall 2021</a>)</li> 
 <li><a href="https://robotics102.github.io/">ROB 102: Introduction to AI and Programming - University of Michigan</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLdPQZLMHRjDIWDJDjiBKjFe7ETD_rssB9">ROB 311: How to Build Robots and Make Them Move - University of Michigan</a></li> 
 <li><a href="https://autorob.org/">ROB 320: Robot Operating Systems - University of Michigan</a></li> 
 <li><a href="https://github.com/michiganrobotics/rob501">ROB 501: Mathematics for Robotics - University of Michigan</a> (<a href="https://www.youtube.com/playlist?list=PLdPQZLMHRjDIzO99aE7yAtdOHSVHMXfYH">Youtube</a>)</li> 
 <li><a href="https://www.youtube.com/playlist?list=PLdMorpQLjeXmbFaVku4JdjmQByHHqTd1F">ROB 530 MOBILE ROBOTICS at U of Michigan - WINTER 2022 -- Instructor: Maani Ghaffari</a></li> 
 <li><a href="https://m.youtube.com/playlist?list=PLf_SmXJixhnWMMU6_xYW7iS08-7h9kENY">Autorob Winter 2022 - University of Michigan</a></li> 
 <li><a href="https://m.youtube.com/playlist?list=PLf_SmXJixhnXoMs0Qvxe500BrjfbIOwSg">DeepRob Winter 2023 - University of Michigan</a></li> 
 <li><a href="https://see.stanford.edu/Course/CS223A">CS 223A - Introduction to Robotics, Stanford University</a></li> 
 <li><a href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-832-underactuated-robotics-spring-2009/">6.832 Underactuated Robotics - MIT OCW</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLwRJQ4m4UJjNBPJdt8WamRAt4XKc639wF">CS287 Advanced Robotics at UC Berkeley Fall 2019 -- Instructor: Pieter Abbeel</a></li> 
 <li><a href="https://people.eecs.berkeley.edu/~pabbeel/cs287-fa11/">CS 287 - Advanced Robotics, Fall 2011, UC Berkeley</a> (<a href="http://rll.berkeley.edu/cs287/lecture_videos/">Videos</a>)</li> 
 <li><a href="https://www.youtube.com/playlist?list=PLZnJoM76RM6ItAfZIxJYNKdaR_BobleLY">CMU 16-715 Robot Dynamics 2022 - CMU</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLZnJoM76RM6KugDT9sw5zhAmqKnGeoLRa">CMU 16-745 Optimal Control 2023 - CMU</a></li> 
 <li><a href="https://www.youtube.com/user/StanfordCS235/videos">CS235 - Applied Robot Design for Non-Robot-Designers - Stanford University</a></li> 
 <li><a href="https://vision.in.tum.de/teaching/ss2012/visnav2012">Lecture: Visual Navigation for Flying Robots</a> (<a href="https://www.youtube.com/playlist?list=PLTBdjV_4f-EKeki5ps2WHqJqyQvxls4ha">YouTube</a>)</li> 
 <li><a href="https://www.youtube.com/playlist?list=PLQ3UicqQtfNvQ_VzflHYKhAqZiTxOkSwi">CS 205A: Mathematical Methods for Robotics, Vision, and Graphics (Fall 2013)</a></li> 
 <li><a href="http://www.dis.uniroma1.it/~deluca/rob1_en/material_rob1_en_2014-15.html">Robotics 1, Prof. De Luca, Università di Roma</a> (<a href="https://www.youtube.com/playlist?list=PLAQopGWlIcyaqDBW1zSKx7lHfVcOmWSWt">YouTube</a>)</li> 
 <li><a href="http://www.diag.uniroma1.it/~deluca/rob2_en/material_rob2_en.html">Robotics 2, Prof. De Luca, Università di Roma</a> (<a href="https://www.youtube.com/playlist?list=PLAQopGWlIcya6LnIF83QlJTqvpYmJXnDm">YouTube</a>)</li> 
 <li><a href="https://www.youtube.com/playlist?list=PLkjy3Accn-E7mlbuSF4aajcMMckG4wLvW">Robot Mechanics and Control, SNU</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PL4847E1D1C121292F">Introduction to Robotics Course - UNCC</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLpUPoM7Rgzi_7YWn14Va2FODh7LzADBSm">SLAM Lectures</a></li> 
 <li><a href="http://groups.inf.ed.ac.uk/vision/VIDEO/2015/ivr.htm">Introduction to Vision and Robotics 2015/16- University of Edinburgh</a></li> 
 <li><a href="http://wavelab.uwaterloo.ca/index6ea9.html?page_id=267">ME 597 – Autonomous Mobile Robotics – Fall 2014</a></li> 
 <li><a href="http://wavelab.uwaterloo.ca/indexaef8.html?page_id=481">ME 780 – Perception For Autonomous Driving – Spring 2017</a></li> 
 <li><a href="http://wavelab.uwaterloo.ca/indexe9a5.html?page_id=533">ME780 – Nonlinear State Estimation for Robotics and Computer Vision – Spring 2017</a></li> 
 <li><a href="http://robotics.itee.uq.edu.au/~metr4202/lectures.html">METR 4202/7202 -- Robotics &amp; Automation - University of Queensland</a></li> 
 <li><a href="https://nptel.ac.in/courses/112101099/">Robotics - IIT Bombay</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PL1pxneANaikCO1-Z0XTaljLR3SE8tgRXY">Introduction to Machine Vision</a></li> 
 <li><a href="https://ocw.mit.edu/courses/aeronautics-and-astronautics/16-412j-cognitive-robotics-spring-2016/">6.834J Cognitive Robotics - MIT OCW</a></li> 
 <li><a href="https://ocw.tudelft.nl/courses/hello-real-world-ros-robot-operating-system/">Hello (Real) World with ROS – Robot Operating System - TU Delft</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLE-BQwvVGf8HOvwXPgtDfWoxd4Cc6ghiP">Programming for Robotics (ROS) - ETH Zurich</a></li> 
 <li><a href="https://ocw.tudelft.nl/courses/mechatronic-system-design/">Mechatronic System Design - TU Delft</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLAuiGdPEdw0inlKisMbjDypCbvcb_GBN9">CS 206 Evolutionary Robotics Course Spring 2020</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLoWGuY2dW-Acmc8V5NYSAXBxADMm1rE4p">Foundations of Robotics - UTEC 2018-I</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PL_onPhFCkVQhuPiUxUW2lFHB39QsavEEA">Robotics - Youtube</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLLy_2iUCG87AjAXKbNMiKJZ2T9vvGpMB0">Robotics and Control: Theory and Practice IIT Roorkee</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLtuwVtW88fOeTFS_szBWif0Mcc0lfNWaz">Mechatronics</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PL-euleXgwWUNQ80DGq6qopHBmHcQyEyNQ">ME142 - Mechatronics Spring 2020 - UC Merced</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLgnQpQtFTOGQJXx-x0t23RmRbjp_yMb4v">Mobile Sensing and Robotics - Bonn University</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLgnQpQtFTOGQh_J16IMwDlji18SWQ2PZ6">MSR2 - Sensors and State Estimation Course (2020) - Bonn University</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLgnQpQtFTOGQrZ4O5QzbIHgl3b1JHimN_">SLAM Course (2013) - Bonn University</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLJzZfbLAMTelwaLxFXteeblbY2ytU2AxX">ENGR486 Robot Modeling and Control (2014W)</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLbRMhDVUMngcdUbBySzyzcPiFTYWr4rV_">Robotics by Prof. D K Pratihar - IIT Kharagpur</a></li> 
 <li><a href="http://ais.informatik.uni-freiburg.de/teaching/ss19/robotics/">Introduction to Mobile Robotics - SS 2019 - Universität Freiburg</a></li> 
 <li><a href="http://ais.informatik.uni-freiburg.de/teaching/ws18/mapping/">Robot Mapping - WS 2018/19 - Universität Freiburg</a></li> 
 <li><a href="https://nptel.ac.in/courses/112/105/112105236/">Mechanism and Robot Kinematics - IIT Kharagpur</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLgnQpQtFTOGQo2Z_ogbonywTg8jxCI9pD">Self-Driving Cars - Cyrill Stachniss - Winter 2020/21 - University of Bonn)</a></li> 
 <li><a href="https://www.ipb.uni-bonn.de/msr1-2020/">Mobile Sensing and Robotics 1 – Part Stachniss (Jointly taught with PhoRS) - University of Bonn</a></li> 
 <li><a href="https://www.ipb.uni-bonn.de/msr2-2020/">Mobile Sensing and Robotics 2 – Stachniss &amp; Klingbeil/Holst - University of Bonn</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLblGgzWkqSqM7IWsgjDetdzZDS1NbkTnd">Aerial Robotics - University of Pennsylvania (UPenn)</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLggLP4f-rq02vX0OQQ5vrCxbJrzamYDfx">Modern Robotics - Northwestern University</a></li> 
 <li><a href="https://manipulation.csail.mit.edu/Fall2022/index.html">MIT 6.4210/6.4212 - Robotic Manipulation - MIT</a> (<a href="https://www.youtube.com/playlist?list=PLkx8KyIQkMfUSDs2hvTWzaq-cxGl8Ha69">Youtube</a>)</li> 
 <li><a href="https://www.youtube.com/playlist?list=PLXDsvE7qtfNdt9oYEhJ_LMXDUGu6bH-L6">Industrial Robotics and Automation - IIT (ISM) Dhanbad</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLYkCanigA7S4x-ExlnFsQN9WrNZREWEZd">MEE5114 Advanced Control for Robotics from Southern University of Science and Technology</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PL05umP7R6ij321zzKXK6XCQXAaaYjQbzr">Self-Driving Cars — Andreas Geiger</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PL6Vi_EcJpt8E96_JTKoOKY3HYWVGjf6b4">Signal Processing: An Introduction by Nathan Kutz</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PL7bpQ3f3TaeMsueY06FCmbNIEOOY-Ri2_">UC Santa Barbara ME 269 Network Systems, Dynamics and Control fall 2021, by Francesco Bullo</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PL682UO4IMem8OCzyAhDQECF4og9UymP-m">EPFL EE 611 Linear System Theory spring 2020, by Philippe Müllhaupt</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PL682UO4IMem9u8dIKvXWBsq7BscoghoVo">EPFL ME 427 Networked Control Systems spring 2020, by Giancarlo Ferrari Trecate</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PL682UO4IMem9vEw3P4dkSHQjsaN6aIuFx">EPFL ME 422 Multivariable Control spring 2020, by Giancarlo Ferrari Trecate</a></li> 
 <li><a href="http://www.cs.cmu.edu/~cga/controls-intro-22/">CMU 16 299 Introduction to Feedback Control Systems spring 2022, by Chris Atkeson</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PL5ebyVGQORm6n158o-I_liUZ7Q5Od43li">MAE 509 Linear Matrix Inequality Methods in Optimal and Robust Control, by Matthew M. Peet</a></li> 
 <li><a href="http://luthuli.cs.uiuc.edu/~daf/courses/MAAV-21/588-2021-records.html">UIUC CS 588 Autonomous Vehicle System Engineering fall 2021, by David Forsyth</a></li> 
</ul> 
<hr /> 
<h3>Computational Finance</h3> 
<ul> 
 <li><a href="https://www.youtube.com/playlist?list=PL9E205B8FAAD530E1">COMP510 - Computational Finance - Steven Skiena - 2007 HKUST</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PL6zzGYGhbWrPaI-op1UfNl0uDglxdkaOB">Computational Finance Course - Prof Grzelak</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PL6zzGYGhbWrMpjEKDtnrHWyIj-oVLKCYD">Financial Engineering Course: Interest Rates and xVA - Prof Grzelak</a></li> 
 <li><a href="http://academictorrents.com/details/dfc1ddde962101f00ef9764b91181bd6bb5c9e93">MOOC - Mathematical Methods for Quantitative Finance, University of Washington/Coursera)</a></li> 
 <li><a href="https://ocw.mit.edu/courses/18-s096-topics-in-mathematics-with-applications-in-finance-fall-2013/video_galleries/video-lectures/">18.S096 Topics in Mathematics with Applications in Finance, MIT OCW</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PL4i4aZbplv9J5jan6mDbDHtjfm7ghMWfj">Computational Finance - Universität Leipzig</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLAwxTw4SYaPnIRwl6rad_mYwEk4Gmj7Mx">Machine Learning for Trading | Udacity</a></li> 
 <li><a href="http://www.utstat.utoronto.ca/sjaimung/courses/sta2502/main.htm">ACT 460 / STA 2502 – Stochastic Methods for Actuarial Science - University of Toronto</a></li> 
 <li><a href="http://www.utstat.toronto.edu/sjaimung/courses/mmf1928/content2013.htm">MMF1928H / STA 2503F – Pricing Theory I / Applied Probability for Mathematical Finance - University of Toronto</a></li> 
 <li><a href="http://www.utstat.utoronto.ca/sjaimung/courses/sta4505/main-2014.htm">STA 4505H – High Frequency &amp; Algorithmic trading - University of Toronto</a></li> 
 <li><a href="https://nptel.ac.in/courses/111/103/111103126/">Mathematical Finance - IIT Guwahati</a></li> 
 <li><a href="https://nptel.ac.in/courses/110/104/110104066/">Quantitative Finance - IIT Kanpur</a></li> 
 <li><a href="https://nptel.ac.in/courses/110/107/110107128/">Financial Derivatives &amp; Risk Management - IIT Roorkee</a></li> 
 <li><a href="https://nptel.ac.in/courses/112/107/112107260/">Financial Mathematics - IIT Roorkee</a></li> 
</ul> 
<hr /> 
<h3>Blockchain Development</h3> 
<ul> 
 <li><strong>Blockchain and Cryptocurrencies</strong> 
  <ul> 
   <li><a href="https://youtu.be/gyMwXuJrbJQ">Blockchain, Solidity, and Full Stack Web3 Development with JavaScript</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLSONl1AVlZNU0QTGpbgEQXKHcmgYz-ddT">Blockchain Fundamentals Decal 2018 - Berkeley DeCal</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLSONl1AVlZNUzp71_H1kb87PvIh8kIZU9">Blockchain for Developers Decal - Spring 2018 - Berkeley DeCal</a></li> 
   <li><a href="https://ocw.mit.edu/courses/mas-s62-cryptocurrency-engineering-and-design-spring-2018/video_galleries/lecture-videos/">Cryptocurrency Engineering and Design - Spring 2018 - MIT</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLUl4u3cNGP63UUkfL0onkxF6MYgVa04Fn">15.S12 Blockchain and Money, Fall 2018 - MIT</a></li> 
   <li><a href="https://www.coursera.org/learn/blockchain-foundations-and-use-cases/home/welcome">Blockchain - Foundations and Use Cases</a></li> 
  </ul> </li> 
 <li><strong>Become Blockchain Developer</strong> 
  <ul> 
   <li><a href="https://www.youtube.com/playlist?list=PLS5SEs8ZftgUq-aMMYeKf8nPqHrNqa3Iu">Solidity for Beginners - Dapp University</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLS5SEs8ZftgVnWHv2_mkvJjn5HBOkde3g">Master Solidity - Dapp University</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLS5SEs8ZftgWggD3tKfgwsIPXuIhorXZk">IPFS Inter Planetary File System Dapp University</a></li> 
   <li><a href="https://www.youtube.com/watch?v=M576WGiDBdQ">Solidity, Blockchain, and Smart Contract Course – Beginner to Expert Python Tutorial - FreeCodingCamp</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLS5SEs8ZftgVV6ah1fo2IvlHk1kTCy6un">Web 3.0 - Build Realtime Decentralized applications</a></li> 
  </ul> </li> 
</ul> 
<hr /> 
<h3>Misc</h3> 
<ul> 
 <li><strong>HCI</strong> 
  <ul> 
   <li><a href="https://hci.stanford.edu/courses/cs147/2015/au/calendar.php">CS147 - Introduction to Human-Computer Interaction Design - Stanford</a></li> 
   <li><a href="https://courses.cs.washington.edu/courses/csep510/04wi/">CSEP 510 - Human Computer Interaction</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PL9444191613E018CC">Programming for Designers - COMP1400-T2 (2010) - UNSW</a></li> 
   <li><a href="https://scs.hosted.panopto.com/Panopto/Pages/Sessions/List.aspx#folderID=%228bb9f417-9f60-4e00-84f6-4ef8e7425ae1%22&amp;maxResults=150">08-763 Intro to HCI for Technology Executives - Fall 2015 - CMU</a></li> 
   <li><a href="https://scs.hosted.panopto.com/Panopto/Pages/Sessions/List.aspx#folderID=%22d885fd87-1ba1-47a3-9bd2-c4bde55f9749%22&amp;maxResults=150">05-600 HCI Pro Seminar - Fall 2015 - CMU</a></li> 
  </ul> </li> 
 <li><strong>Game Development</strong> 
  <ul> 
   <li><a href="https://www.edx.org/course/cs50s-introduction-to-game-development">CS50's Introduction to Game Development</a></li> 
   <li><a href="https://ocw.mit.edu/courses/comparative-media-studies-writing/cms-611j-creating-video-games-fall-2014/lecture-videos/">MIT CMS.611J Creating Video Games, Fall 2014</a></li> 
   <li><a href="http://academictorrents.com/details/0a7ba7e62821e488a0061751fdb81f4298733bea">MOOC - Beginning Game Programming with C# - Coursera</a></li> 
  </ul> </li> 
 <li><strong>Geospatial</strong> 
  <ul> 
   <li><a href="https://www.youtube.com/playlist?list=PLzREt6r1Nenkr2vtYgbP4hs44HO_s_qEO">Introduction to Spatial Data Science, Autumn 2016, University of Chicago</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLzREt6r1Nenkk7x197-CKPFZ0BuAOCRGT">Spatial Regression Analysis, Spring 2017, University of Chicago</a></li> 
   <li><a href="https://www.youtube.com/playlist?list=PLzREt6r1Nenlu-MBaxCRL2KZNk62n7o1g">Spatial Data Science, Autumn 2017, University of Chicago</a></li> 
   <li><a href="https://nptel.ac.in/courses/105107155/">Introduction to Geographic Information Systems - IIT Roorkee</a></li> 
  </ul> </li> 
 <li><a href="http://mlecture.uni-bremen.de/ml/index.php?option=com_content&amp;view=article&amp;id=233">SCICOMP - An Introduction to Efficient Scientific Computation, Universität Bremen</a></li> 
 <li><a href="http://cs259.tv/2007/fall/">CS E-259 XML with Java, Java Servlet, and JSP - Harvard</a></li> 
 <li><a href="https://www.youtube.com/view_play_list?p=0105F1427EFAEE0A">CSE 40373 - Spr 2009: Multimedia Systems</a></li> 
 <li><a href="http://tv.digitalphotography.exposed/2010/fall/">Exposing Digital Photography - Harvard Extension School</a></li> 
 <li><a href="https://youtu.be/6iN56l7dEMY">MOOC - Matlab - Coursera</a></li> 
 <li><a href="https://c4cs.github.io">Computing for Computer Scientists - University of Michigan</a></li> 
 <li><a href="https://itunes.apple.com/us/itunes-u/linux-implementation-administration/id430673915">Linux Implementation/Administration Practicum - Redhat by Tulio Llosa</a></li> 
 <li><a href="https://www.youtube.com/view_play_list?p=1777A89066B1D71D">SIMS 141 - Search Engines - Fall 2005 UCBerkeley</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLE3E96113F544495A">Innovative Computing - Harvard University</a></li> 
 <li><a href="https://nptel.ac.in/courses/117106113/">Linux Programming &amp; Scripting - IIT Madras</a></li> 
 <li><a href="https://nptel.ac.in/courses/106106136/">Model Checking - IIT Madras</a></li> 
 <li><a href="https://nptel.ac.in/courses/106106138/">Virtual Reality - IIT Madras</a></li> 
 <li><a href="http://inst.eecs.berkeley.edu/~cs195/sp15/">CS 195 - Social Implications of Computing, Spring 2015 - UC Berkeley</a> (<a href="https://www.youtube.com/playlist?list=PL-XXv-cvA_iAmCxqGV1Px2pKchYfozH-e">YouTube</a>)</li> 
 <li><a href="http://www.ifis.cs.tu-bs.de/teaching/ws-1617/gis">Spatial Databases and Geographic Information Systems - Technische Universität Braunschweig, Germany (in German)</a></li> 
 <li><a href="https://www.tele-task.de/series/1005/">Dependable Systems (SS 2014) - HPI University of Potsdam</a></li> 
 <li><a href="https://www.tele-task.de/series/979/">Business Process Compliance (WT 2013/14) - HPI University of Potsdam</a></li> 
 <li><a href="https://www.tele-task.de/series/1206/">Design Thinking for Digital Engineering (SS 2018) - Dr. Julia von Thienen - HPI</a></li> 
 <li><a href="http://snap.stanford.edu/class/cs224w-videos-2017/">CS224w – Social Network Analysis – Autumn 2017 - Stanford University</a></li> 
 <li><a href="https://missing.csail.mit.edu/">The Missing Semester of Your CS Education</a></li> 
</ul></description>
</item>
<item>
<title>flutter/flutter</title>
<link>https://github.com/flutter/flutter</link>
<description>Content Length: 7034

<p>Flutter makes it easy and fast to build beautiful apps for mobile and beyond</p><hr /><a href="https://flutter.dev/"> <h1 align="center"> 
   
   <source media="(prefers-color-scheme: dark)" /> 
   <img alt="Flutter" src="https://storage.googleapis.com/cms-storage-bucket/c823e53b3a1a7b0d36a9.png" /> 
   </h1> </a> 
<p><a href="https://flutter-dashboard.appspot.com/#/build?repo=flutter"><img alt="Flutter CI Status" src="https://flutter-dashboard.appspot.com/api/public/build-status-badge?repo=flutter" /></a> <a href="https://github.com/flutter/flutter/wiki/Chat"><img alt="Discord badge" src="https://img.shields.io/discord/608014603317936148?logo=discord" /></a> <a href="https://twitter.com/intent/follow?screen_name=flutterdev"><img alt="Twitter handle" src="https://img.shields.io/twitter/follow/flutterdev.svg?style=social&amp;label=Follow" /></a> <a href="https://codecov.io/gh/flutter/flutter"><img alt="codecov" src="https://codecov.io/gh/flutter/flutter/branch/master/graph/badge.svg?token=11yDrJU2M2" /></a> <a href="https://bestpractices.coreinfrastructure.org/projects/5631"><img alt="CII Best Practices" src="https://bestpractices.coreinfrastructure.org/projects/5631/badge" /></a> <a href="https://deps.dev/project/github/flutter%2Fflutter"><img alt="OpenSSF Scorecard" src="https://api.securityscorecards.dev/projects/github.com/flutter/flutter/badge" /></a> <a href="https://slsa.dev"><img alt="SLSA 1" src="https://slsa.dev/images/gh-badge-level1.svg?sanitize=true" /></a></p> 
<p>Flutter is Google's SDK for crafting beautiful, fast user experiences for mobile, web, and desktop from a single codebase. Flutter works with existing code, is used by developers and organizations around the world, and is free and open source.</p> 
<h2>Documentation</h2> 
<ul> 
 <li><a href="https://flutter.dev/get-started/">Install Flutter</a></li> 
 <li><a href="https://docs.flutter.dev/">Flutter documentation</a></li> 
 <li><a href="https://github.com/flutter/flutter/wiki">Development wiki</a></li> 
 <li><a href="https://github.com/flutter/flutter/raw/master/CONTRIBUTING.md">Contributing to Flutter</a></li> 
</ul> 
<p>For announcements about new releases, follow the <a href="https://groups.google.com/forum/#!forum/flutter-announce">flutter-announce@googlegroups.com</a> mailing list. Our documentation also tracks <a href="https://docs.flutter.dev/release/breaking-changes">breaking changes</a> across releases.</p> 
<h2>Terms of service</h2> 
<p>The Flutter tool may occasionally download resources from Google servers. By downloading or using the Flutter SDK, you agree to the Google Terms of Service: <a href="https://policies.google.com/terms">https://policies.google.com/terms</a></p> 
<p>For example, when installed from GitHub (as opposed to from a prepackaged archive), the Flutter tool will download the Dart SDK from Google servers immediately when first run, as it is used to execute the <code>flutter</code> tool itself. This will also occur when Flutter is upgraded (e.g. by running the <code>flutter upgrade</code> command).</p> 
<h2>About Flutter</h2> 
<p>We think Flutter will help you create beautiful, fast apps, with a productive, extensible and open development model, whether you're targeting iOS or Android, web, Windows, macOS, Linux or embedding it as the UI toolkit for a platform of your choice.</p> 
<h3>Beautiful user experiences</h3> 
<p>We want to enable designers to deliver their full creative vision without being forced to water it down due to limitations of the underlying framework. Flutter's <a href="https://docs.flutter.dev/resources/inside-flutter">layered architecture</a> gives you control over every pixel on the screen and its powerful compositing capabilities let you overlay and animate graphics, video, text, and controls without limitation. Flutter includes a full <a href="https://flutter.dev/widgets/">set of widgets</a> that deliver pixel-perfect experiences whether you're building for iOS (<a href="https://docs.flutter.dev/development/ui/widgets/cupertino">Cupertino</a>) or other platforms (<a href="https://docs.flutter.dev/development/ui/widgets/material">Material</a>), along with support for customizing or creating entirely new visual components.</p> 
<p align="center"><img alt="Reflectly hero image" src="https://github.com/flutter/website/raw/main/src/assets/images/docs/homepage/reflectly-hero-600px.png?raw=true" /></p> 
<h3>Fast results</h3> 
<p>Flutter is fast. It's powered by hardware-accelerated 2D graphics libraries like <a href="https://skia.org/">Skia</a> (that underpins Chrome and Android) and <a href="https://docs.flutter.dev/perf/impeller">Impeller</a>. We architected Flutter to support glitch-free, jank-free graphics at the native speed of your device.</p> 
<p>Flutter code is powered by the world-class <a href="https://dart.dev/">Dart platform</a>, which enables compilation to 32-bit and 64-bit ARM machine code for iOS and Android, JavaScript and WebAssembly for the web, as well as Intel x64 and ARM for desktop devices.</p> 
<p align="center"><img alt="Dart diagram" src="https://github.com/flutter/website/raw/main/src/assets/images/docs/homepage/dart-diagram-small.png?raw=true" /></p> 
<h3>Productive development</h3> 
<p>Flutter offers <a href="https://docs.flutter.dev/development/tools/hot-reload">stateful hot reload</a>, allowing you to make changes to your code and see the results instantly without restarting your app or losing its state.</p> 
<p><a href="https://docs.flutter.dev/development/tools/hot-reload"><img alt="Hot reload animation" src="https://github.com/flutter/website/raw/main/src/assets/images/docs/tools/android-studio/hot-reload.gif?raw=true" /></a></p> 
<h3>Extensible and open model</h3> 
<p>Flutter works with any development tool (or none at all), and also includes editor plug-ins for both <a href="https://marketplace.visualstudio.com/items?itemName=Dart-Code.flutter">Visual Studio Code</a> and <a href="https://plugins.jetbrains.com/plugin/9212-flutter">IntelliJ / Android Studio</a>. Flutter provides <a href="https://pub.dev/flutter">tens of thousands of packages</a> to speed your development, regardless of your target platform. And accessing other native code is easy, with support for both FFI (<a href="https://docs.flutter.dev/development/platform-integration/android/c-interop">on Android</a>, <a href="https://docs.flutter.dev/development/platform-integration/ios/c-interop">on iOS</a>, <a href="https://docs.flutter.dev/development/platform-integration/macos/c-interop">on macOS</a>, and <a href="https://docs.flutter.dev/development/platform-integration/windows/building#integrating-with-windows">on Windows</a>) as well as <a href="https://docs.flutter.dev/development/platform-integration/platform-channels">platform-specific APIs</a>.</p> 
<p>Flutter is a fully open-source project, and we welcome contributions. Information on how to get started can be found in our <a href="https://raw.githubusercontent.com/flutter/flutter/master/CONTRIBUTING.md">contributor guide</a>.</p></description>
</item>
<item>
<title>ynqa/jnv</title>
<link>https://github.com/ynqa/jnv</link>
<description>Content Length: 5885

<p>interactive JSON filter using jq</p><hr /><h1>jnv</h1> 
<p><em>jnv</em> is designed for navigating JSON, offering an interactive JSON viewer and <code>jq</code> filter editor.</p> 
<p><img alt="demo" src="https://github.com/ynqa/jnv/assets/6745370/625599ca-6c95-4cc1-bddf-d724ec32e676" /></p> 
<p>Inspired by <a href="https://github.com/simeji/jid">jid</a> and <a href="https://github.com/fiatjaf/jiq">jiq</a>.</p> 
<h2>Features</h2> 
<ul> 
 <li>Interactive JSON viewer and <code>jq</code> filter editor 
  <ul> 
   <li>Syntax highlighting for JSON</li> 
  </ul> </li> 
 <li>Accept JSON from stdin, file, URL</li> 
 <li>Auto-completion for the filter 
  <ul> 
   <li>Only supports: 
    <ul> 
     <li><a href="https://jqlang.github.io/jq/manual/#identity">Identity</a></li> 
     <li><a href="https://jqlang.github.io/jq/manual/#object-identifier-index">Object Identifier-Index</a></li> 
     <li><a href="https://jqlang.github.io/jq/manual/#array-index">Array Index</a></li> 
    </ul> </li> 
  </ul> </li> 
 <li>Hint message to evaluate the filter</li> 
</ul> 
<h2>Installation</h2> 
<h3>Homebrew</h3> 
<pre><code class="language-bash">brew install ynqa/tap/jnv
</code></pre> 
<h3>MacPorts</h3> 
<pre><code class="language-bash">sudo port install jnv
</code></pre> 
<p>More info <a href="https://ports.macports.org/port/jnv/">here</a></p> 
<h3>Cargo</h3> 
<h4>Requirements</h4> 
<ul> 
 <li><a href="https://www.gnu.org/software/automake/">automake</a></li> 
</ul> 
<pre><code class="language-bash">cargo install jnv
</code></pre> 
<blockquote> 
 <p>[!NOTE] <em>jnv</em> does not require users to install <code>jq</code> on their system, because it utilizes <a href="https://github.com/ynqa/j9">j9</a> Rust bindings.</p> 
</blockquote> 
<h2>Examples</h2> 
<pre><code class="language-bash">cat data.json | jnv
</code></pre> 
<p>Or</p> 
<pre><code class="language-bash">jnv data.json
</code></pre> 
<h2>Keymap</h2> 
<table> 
 <thead> 
  <tr> 
   <th align="left">Key</th> 
   <th align="left">Action</th> 
  </tr> 
 </thead> 
 <tbody> 
  <tr> 
   <td align="left"><kbd>Ctrl + C</kbd></td> 
   <td align="left">Exit <code>jnv</code></td> 
  </tr> 
  <tr> 
   <td align="left"><kbd>Tab</kbd></td> 
   <td align="left">jq filter auto-completion</td> 
  </tr> 
  <tr> 
   <td align="left"><kbd>←</kbd></td> 
   <td align="left">Move the cursor one character to the left</td> 
  </tr> 
  <tr> 
   <td align="left"><kbd>→</kbd></td> 
   <td align="left">Move the cursor one character to the right</td> 
  </tr> 
  <tr> 
   <td align="left"><kbd>Ctrl + A</kbd></td> 
   <td align="left">Move the cursor to the start of the filter</td> 
  </tr> 
  <tr> 
   <td align="left"><kbd>Ctrl + E</kbd></td> 
   <td align="left">Move the cursor to the end of the filter</td> 
  </tr> 
  <tr> 
   <td align="left"><kbd>Backspace</kbd></td> 
   <td align="left">Delete a character of filter at the cursor position</td> 
  </tr> 
  <tr> 
   <td align="left"><kbd>Ctrl + U</kbd></td> 
   <td align="left">Delete all characters of filter</td> 
  </tr> 
  <tr> 
   <td align="left"><kbd>↑</kbd>, <kbd>Ctrl + K</kbd></td> 
   <td align="left">Move the cursor one entry up in JSON viewer</td> 
  </tr> 
  <tr> 
   <td align="left"><kbd>↓</kbd>, <kbd>Ctrl + J</kbd></td> 
   <td align="left">Move the cursor one entry down in JSON viewer</td> 
  </tr> 
  <tr> 
   <td align="left"><kbd>Ctrl + H</kbd></td> 
   <td align="left">Move to the last entry in JSON viewer</td> 
  </tr> 
  <tr> 
   <td align="left"><kbd>Ctrl + L</kbd></td> 
   <td align="left">Move to the first entry in JSON viewer</td> 
  </tr> 
  <tr> 
   <td align="left"><kbd>Enter</kbd></td> 
   <td align="left">Toggle expand/collapse in JSON viewer</td> 
  </tr> 
  <tr> 
   <td align="left"><kbd>Ctrl + P</kbd></td> 
   <td align="left">Expand all folds in JSON viewer</td> 
  </tr> 
  <tr> 
   <td align="left"><kbd>Ctrl + N</kbd></td> 
   <td align="left">Collapse all folds in JSON viewer</td> 
  </tr> 
 </tbody> 
</table> 
<h2>Usage</h2> 
<pre><code class="language-bash">JSON navigator and interactive filter leveraging jq

Usage: jnv [OPTIONS] [INPUT]

Examples:
- Read from a file:
        jnv data.json

- Read from standard input:
        cat data.json | jnv

Arguments:
  [INPUT]
          Optional path to a JSON file. If not provided or if "-" is specified, reads from standard input

Options:
  -e, --edit-mode &lt;EDIT_MODE&gt;
                  Specifies the edit mode for the interface.
                  Acceptable values are "insert" or "overwrite".
                  - "insert" inserts a new input at the cursor's position.
                  - "overwrite" mode replaces existing characters with new input at the cursor's position.
          [default: insert]

  -i, --indent &lt;INDENT&gt;
                  Affect the formatting of the displayed JSON,
                  making it more readable by adjusting the indentation level.
          [default: 2]

  -n, --no-hint
                  When this option is enabled, it prevents the display of
                  hints that typically guide or offer suggestions to the user.

  -d, --expand-depth &lt;EXPAND_DEPTH&gt;
                  Specifies the initial depth to which JSON nodes are expanded in the visualization.
                  Note: Increasing this depth can significantly slow down the display for large datasets.
          [default: 3]

  -l, --suggestion-list-length &lt;SUGGESTION_LIST_LENGTH&gt;
                  Controls the number of suggestions displayed in the list,
                  aiding users in making selections more efficiently.
          [default: 3]

  -h, --help
          Print help (see a summary with '-h')

  -V, --version
          Print version
</code></pre> 
<h2>Stargazers over time</h2> 
<p><a href="https://starchart.cc/ynqa/jnv"><img alt="Stargazers over time" src="https://starchart.cc/ynqa/jnv.svg?variant=adaptive" /></a></p></description>
</item>
<item>
<title>Lightning-AI/lightning-thunder</title>
<link>https://github.com/Lightning-AI/lightning-thunder</link>
<description>Content Length: 9466

<p>Make PyTorch models Lightning fast! Thunder is a source to source compiler for PyTorch. It enables using different hardware executors at once.</p><hr /><div align="center"> 
 <img alt="Thunder" src="https://raw.githubusercontent.com/Lightning-AI/lightning-thunder/main/docs/source/_static/images/LightningThunderLightModewByline.png#gh-light-mode-only" width="400px" /> 
 <img alt="Thunder" src="https://raw.githubusercontent.com/Lightning-AI/lightning-thunder/main/docs/source/_static/images/LightningThunderDarkModewByline.png#gh-dark-mode-only" width="400px" /> 
 <br /> 
 <br /> 
 <p><strong>Make PyTorch models Lightning fast.</strong></p> 
 <hr /> 
 <p align="center"> <a href="https://lightning.ai/">Lightning.ai</a> • <a href="https://raw.githubusercontent.com/Lightning-AI/lightning-thunder/main/#performance">Performance</a> • <a href="https://raw.githubusercontent.com/Lightning-AI/lightning-thunder/main/#get-started">Get started</a> • <a href="https://raw.githubusercontent.com/Lightning-AI/lightning-thunder/main/#install-thunder">Install</a> • <a href="https://raw.githubusercontent.com/Lightning-AI/lightning-thunder/main/#hello-world">Examples</a> • <a href="https://raw.githubusercontent.com/Lightning-AI/lightning-thunder/main/#features">Features</a> • <a href="https://raw.githubusercontent.com/Lightning-AI/lightning-thunder/main/#documentation">Documentation</a> • </p> 
 <p><a href="https://github.com/Lightning-AI/lightning-thunder/raw/main/LICENSE"><img alt="license" src="https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true" /></a> <a href="https://github.com/Lightning-AI/lightning-thunder/actions/workflows/ci-testing.yml"><img alt="CI testing" src="https://github.com/Lightning-AI/lightning-thunder/actions/workflows/ci-testing.yml/badge.svg?event=push" /></a> <a href="https://github.com/Lightning-AI/lightning-thunder/actions/workflows/ci-checks.yml"><img alt="General checks" src="https://github.com/Lightning-AI/lightning-thunder/actions/workflows/ci-checks.yml/badge.svg?event=push" /></a> <a href="https://lightning-thunder.readthedocs.io/en/latest/?badge=latest"><img alt="Documentation Status" src="https://readthedocs.org/projects/lightning-thunder/badge/?version=latest" /></a> <a href="https://results.pre-commit.ci/latest/github/Lightning-AI/lightning-thunder/main"><img alt="pre-commit.ci status" src="https://results.pre-commit.ci/badge/github/Lightning-AI/lightning-thunder/main.svg?sanitize=true" /></a></p> 
</div> 
<h1>Welcome to ⚡ Lightning Thunder</h1> 
<p><strong>Thunder makes PyTorch models Lightning fast.</strong></p> 
<p>Thunder is a source-to-source compiler for PyTorch. It makes PyTorch programs faster by combining and using different hardware executors at once (ie: nvFuser, torch.compile, cuDNN, and TransformerEngine FP8).</p> 
<p>Works on single accelerators and in multi-GPU settings. Thunder aims to be usable, understandable, and extensible.</p> 
<h2>Performance</h2> 
<p>Thunder can achieve significant speedups over standard PyTorch eager code, through the compounding effects of optimizations and the use of best-in-class executors. Here is an example of the pretraining throughput for Llama 2 7B as implemented in <a href="https://github.com/Lightning-AI/litgpt">LitGPT</a>.</p> 
<div align="center"> 
 <img alt="Thunder" src="https://raw.githubusercontent.com/Lightning-AI/lightning-thunder/main/docs/source/_static/images/training_throughput_single.png" width="800px" /> 
</div> 
<p>Thunder achieves a 40% speedup in training throughput compared to eager code on H100 using a combination of executors including nvFuser, torch.compile, cuDNN, and TransformerEngine FP8.</p> 
<p>Thunder supports distributed strategies like DDP and FSDP (ZeRO2 and ZeRO3). Here is the normalized throughput measured for Llama 2 7B (this time without FP8 mixed precision, support for FSDP is underway).</p> 
<div align="center"> 
 <img alt="Thunder" src="https://raw.githubusercontent.com/Lightning-AI/lightning-thunder/main/docs/source/_static/images/normalized_training_throughput_zero2.png" width="800px" /> 
</div> 
<p><strong>NOTE: Lightning Thunder is alpha.</strong> Feel free to get involved, expect a few bumps along the way.</p> 
<h2>Get started</h2> 
<p>Try Thunder without installing by using our <a href="https://lightning.ai/lightning-ai/studios/zero-to-thunder-tutorial">Zero to Thunder Tutorial Studio</a>.</p> 
<h2>Install Thunder</h2> 
<p>Install <a href="https://github.com/NVIDIA/Fuser">nvFuser</a> nightly, and Thunder together</p> 
<pre><code class="language-bash"># install nvFuser which installs the matching nightly PyTorch
pip install --pre 'nvfuser-cu121[torch]' --extra-index-url https://pypi.nvidia.com

# install thunder
pip install lightning-thunder
</code></pre> 
<details> 
 Advanced install options 
 <!-- following section will be skipped from PyPI description --> 
 <h3>Install from main</h3> 
 <pre><code class="language-bash">pip install git+https://github.com/Lightning-AI/lightning-thunder.git
</code></pre> 
 <h3>Install to tinker and contribute</h3> 
 <p>Install this way to tinker with the internals and contribute:</p> 
 <pre><code class="language-bash">pip install -e .
</code></pre> 
</details> 
<!-- end skipping PyPI description --> 
<h2>Hello World</h2> 
<p>Here is a simple example of how Thunder lets you compile and run PyTorch code:</p> 
<pre><code class="language-python">import torch
import thunder


def foo(a, b):
    return a + b


jfoo = thunder.jit(foo)

a = torch.full((2, 2), 1)
b = torch.full((2, 2), 3)

result = jfoo(a, b)

print(result)

# prints
# tensor(
#  [[4, 4]
#   [4, 4]])
</code></pre> 
<p>The compiled function <code>jfoo</code> takes and returns PyTorch tensors, just like the original function, so modules and functions compiled by Thunder can be used as part of larger PyTorch programs.</p> 
<h2>Train models</h2> 
<p>Thunder is in its early stages and should not be used for production runs yet.</p> 
<p>However, it can already deliver outstanding performance on LLM model supported by <a href="https://github.com/Lightning-AI/lit-gpt">LitGPT</a>, such as Mistral, Llama 2, Gemma, Falcon, and others.</p> 
<p>Check out <a href="https://github.com/Lightning-AI/litgpt/tree/main/extensions/thunder">the LitGPT integration</a> to learn about running LitGPT and Thunder together.</p> 
<h2>Features</h2> 
<p>Given a Python callable or PyTorch module, Thunder can generate an optimized program that:</p> 
<ul> 
 <li>Computes its forward and backward passes</li> 
 <li>Coalesces operations into efficient fusion regions</li> 
 <li>Dispatches computations to optimized kernels</li> 
 <li>Distributes computations optimally across machines</li> 
</ul> 
<p>To do so, Thunder ships with:</p> 
<ul> 
 <li>A JIT for acquiring Python programs targeting PyTorch and custom operations</li> 
 <li>A multi-level IR to represent operations as a trace of a reduced op-set</li> 
 <li>An extensible set of transformations on the trace, such as <code>grad</code>, fusions, distributed (like <code>ddp</code>, <code>fsdp</code>), functional (like <code>vmap</code>, <code>vjp</code>, <code>jvp</code>)</li> 
 <li>A way to dispatch operations to an extensible collection of executors</li> 
</ul> 
<p>Thunder is written entirely in Python. Even its trace is represented as valid Python at all stages of transformation. This allows unprecedented levels of introspection and extensibility.</p> 
<p>Thunder doesn't generate code for accelerators directly. It acquires and transforms user programs so that it's possible to optimally select or generate device code using fast executors like:</p> 
<ul> 
 <li><a href="https://pytorch.org/get-started/pytorch-2.0/">torch.compile</a></li> 
 <li><a href="https://github.com/NVIDIA/Fuser">nvFuser</a></li> 
 <li><a href="https://developer.nvidia.com/cudnn">cuDNN</a></li> 
 <li><a href="https://github.com/NVIDIA/apex">Apex</a></li> 
 <li><a href="https://github.com/NVIDIA/TransformerEngine">TransformerEngine</a></li> 
 <li><a href="https://github.com/pytorch/pytorch">PyTorch eager</a></li> 
 <li>custom kernels, including those written with <a href="https://github.com/openai/triton">OpenAI Triton</a></li> 
</ul> 
<p>Modules and functions compiled with Thunder fully interoperate with vanilla PyTorch and support PyTorch's autograd. Also, Thunder works alongside torch.compile to leverage its state-of-the-art optimizations.</p> 
<h2>Documentation</h2> 
<p>Docs are currently not hosted publicly. However you can build them locally really quickly:</p> 
<pre><code class="language-bash">make docs
</code></pre> 
<p>and point your browser to the generated docs at <code>docs/build/index.html</code>.</p> 
<h2>Develop and run tests</h2> 
<p>You can set up your environment for developing Thunder by installing the development requirements:</p> 
<pre><code class="language-bash">pip install -r requirements/devel.txt
</code></pre> 
<p>Install Thunder as an editable package (optional):</p> 
<pre><code class="language-bash">pip install -e .
</code></pre> 
<p>Now you run tests:</p> 
<pre><code class="language-bash">pytest thunder/tests
</code></pre> 
<p>Thunder is very thoroughly tested, so expect this to take a while.</p> 
<h2>License</h2> 
<p>Lightning Thunder is released under the <a href="https://www.apache.org/licenses/LICENSE-2.0">Apache 2.0</a> license. See the <a href="https://raw.githubusercontent.com/Lightning-AI/lightning-thunder/main/LICENSE">LICENSE</a> file for details.</p></description>
</item>
<item>
<title>practical-tutorials/project-based-learning</title>
<link>https://github.com/practical-tutorials/project-based-learning</link>
<description>Content Length: 65773

<p>Curated list of project-based tutorials</p><hr /><h1>Project Based Learning</h1> 
<p><a href="https://gitter.im/practical-tutorials/community?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge"><img alt="Gitter" src="https://badges.gitter.im/practical-tutorials/community.svg?sanitize=true" /></a></p> 
<p>A list of programming tutorials in which aspiring software developers learn how to build an application from scratch. These tutorials are divided into different primary programming languages. Tutorials may involve multiple technologies and languages.</p> 
<p>To get started, simply fork this repo. Please refer to <a href="https://raw.githubusercontent.com/practical-tutorials/project-based-learning/master/CONTRIBUTING.md">CONTRIBUTING.md</a> for contribution guidelines.</p> 
<h2>Table of Contents:</h2> 
<ul> 
 <li><a href="https://raw.githubusercontent.com/practical-tutorials/project-based-learning/master/#c">C#</a></li> 
 <li><a href="https://raw.githubusercontent.com/practical-tutorials/project-based-learning/master/#cc">C/C++</a></li> 
 <li><a href="https://raw.githubusercontent.com/practical-tutorials/project-based-learning/master/#clojure">Clojure</a></li> 
 <li><a href="https://raw.githubusercontent.com/practical-tutorials/project-based-learning/master/#dart">Dart</a></li> 
 <li><a href="https://raw.githubusercontent.com/practical-tutorials/project-based-learning/master/#elixir">Elixir</a></li> 
 <li><a href="https://raw.githubusercontent.com/practical-tutorials/project-based-learning/master/#erlang">Erlang</a></li> 
 <li><a href="https://raw.githubusercontent.com/practical-tutorials/project-based-learning/master/#f">F#</a></li> 
 <li><a href="https://raw.githubusercontent.com/practical-tutorials/project-based-learning/master/#go">Go</a></li> 
 <li><a href="https://raw.githubusercontent.com/practical-tutorials/project-based-learning/master/#haskell">Haskell</a></li> 
 <li><a href="https://raw.githubusercontent.com/practical-tutorials/project-based-learning/master/#html-and-css">HTML/CSS</a></li> 
 <li><a href="https://raw.githubusercontent.com/practical-tutorials/project-based-learning/master/#java">Java</a></li> 
 <li><a href="https://raw.githubusercontent.com/practical-tutorials/project-based-learning/master/#javascript">JavaScript</a></li> 
 <li><a href="https://raw.githubusercontent.com/practical-tutorials/project-based-learning/master/#kotlin">Kotlin</a></li> 
 <li><a href="https://raw.githubusercontent.com/practical-tutorials/project-based-learning/master/#lua">Lua</a></li> 
 <li><a href="https://raw.githubusercontent.com/practical-tutorials/project-based-learning/master/#ocaml">OCaml</a></li> 
 <li><a href="https://raw.githubusercontent.com/practical-tutorials/project-based-learning/master/#php">PHP</a></li> 
 <li><a href="https://raw.githubusercontent.com/practical-tutorials/project-based-learning/master/#python">Python</a></li> 
 <li><a href="https://raw.githubusercontent.com/practical-tutorials/project-based-learning/master/#r">R</a></li> 
 <li><a href="https://raw.githubusercontent.com/practical-tutorials/project-based-learning/master/#ruby">Ruby</a></li> 
 <li><a href="https://raw.githubusercontent.com/practical-tutorials/project-based-learning/master/#rust">Rust</a></li> 
 <li><a href="https://raw.githubusercontent.com/practical-tutorials/project-based-learning/master/#scala">Scala</a></li> 
 <li><a href="https://raw.githubusercontent.com/practical-tutorials/project-based-learning/master/#swift">Swift</a></li> 
 <li><a href="https://raw.githubusercontent.com/practical-tutorials/project-based-learning/master/#additional-resources">Additional resources</a></li> 
</ul> 
<h2>C/C++:</h2> 
<ul> 
 <li><a href="http://www.craftinginterpreters.com/">Build an Interpreter</a> (Chapter 14 on is written in C)</li> 
 <li><a href="https://arjunsreedharan.org/post/148675821737/memory-allocators-101-write-a-simple-memory">Memory Allocators 101 - Write a simple memory allocator</a></li> 
 <li><a href="https://brennan.io/2015/01/16/write-a-shell-in-c/">Write a Shell in C</a></li> 
 <li><a href="https://www.cs.nmsu.edu/~pfeiffer/fuse-tutorial/">Write a FUSE Filesystem</a></li> 
 <li><a href="http://viewsourcecode.org/snaptoken/kilo/">Build Your Own Text Editor</a></li> 
 <li><a href="http://www.buildyourownlisp.com/">Build Your Own Lisp</a></li> 
 <li><a href="https://nesdoug.com/">How to Program an NES Game in C</a></li> 
 <li><a href="https://github.com/tuhdo/os01">Write an OS from scratch</a></li> 
 <li><a href="https://github.com/cfenollosa/os-tutorial">How to create an OS from scratch </a></li> 
 <li><a href="https://austinmorlan.com/posts/chip8_emulator/">Building a CHIP-8 Emulator</a></li> 
 <li><a href="http://lazyfoo.net/tutorials/SDL/">Beginning Game Programming with C++ and SDL</a></li> 
 <li><a href="http://codecapsule.com/2012/11/07/ikvs-implementing-a-key-value-store-table-of-contents/">Implementing a Key-Value Store</a></li> 
 <li>Tiny 3D graphics projects 
  <ul> 
   <li><a href="https://github.com/ssloy/tinyrenderer/wiki">Tiny Renderer or how OpenGL works: software rendering in 500 lines of code</a></li> 
   <li><a href="https://github.com/ssloy/tinyraytracer/wiki">Understandable RayTracing in 256 lines of bare C++</a></li> 
   <li><a href="https://github.com/ssloy/tinykaboom/wiki">KABOOM! in 180 lines of bare C++</a></li> 
   <li><a href="https://github.com/ssloy/tinyraycaster/wiki">486 lines of C++: old-school FPS in a weekend</a></li> 
  </ul> </li> 
 <li>Writing a minimal x86-64 JIT compiler in C++ 
  <ul> 
   <li><a href="https://solarianprogrammer.com/2018/01/10/writing-minimal-x86-64-jit-compiler-cpp/">Part 1</a></li> 
   <li><a href="https://solarianprogrammer.com/2018/01/12/writing-minimal-x86-64-jit-compiler-cpp-part-2/">Part 2</a></li> 
  </ul> </li> 
 <li><a href="http://howistart.org/posts/cpp/1/index.html">Build a Live Code-reloader Library for C++</a></li> 
 <li><a href="https://github.com/jamesroutley/write-a-hash-table">Write a hash table in C</a></li> 
 <li><a href="https://cstack.github.io/db_tutorial/">Let's Build a Simple Database</a></li> 
 <li><a href="http://arjunsreedharan.org/post/82710718100/kernel-101-lets-write-a-kernel">Let's Write a Kernel</a></li> 
 <li><a href="http://3zanders.co.uk/2017/10/13/writing-a-bootloader/">Write a Bootloader in C</a></li> 
 <li><a href="https://blog.lizzie.io/linux-containers-in-500-loc.html">Linux Container in 500 Lines of Code</a></li> 
 <li><a href="https://justinmeiners.github.io/lc3-vm/">Write Your Own Virtual Machine</a></li> 
 <li><a href="https://david942j.blogspot.com/2018/10/note-learning-kvm-implement-your-own.html">Learning KVM - Implement Your Own Linux Kernel</a></li> 
 <li><a href="https://build-your-own.org/redis/">Build Your Own Redis with C/C++</a></li> 
 <li>Write a C compiler 
  <ul> 
   <li><a href="https://norasandler.com/2017/11/29/Write-a-Compiler.html">Part 1: Integers, Lexing and Code Generation</a></li> 
   <li><a href="https://norasandler.com/2017/12/05/Write-a-Compiler-2.html">Part 2: Unary Operators</a></li> 
   <li><a href="https://norasandler.com/2017/12/15/Write-a-Compiler-3.html">Part 3: Binary Operators</a></li> 
   <li><a href="https://norasandler.com/2017/12/28/Write-a-Compiler-4.html">Part 4: Even More Binary Operators</a></li> 
   <li><a href="https://norasandler.com/2018/01/08/Write-a-Compiler-5.html">Part 5: Local Variables</a></li> 
   <li><a href="https://norasandler.com/2018/02/25/Write-a-Compiler-6.html">Part 6: Conditionals</a></li> 
   <li><a href="https://norasandler.com/2018/03/14/Write-a-Compiler-7.html">Part 7: Compound Statements</a></li> 
   <li><a href="https://norasandler.com/2018/04/10/Write-a-Compiler-8.html">Part 8: Loops</a></li> 
   <li><a href="https://norasandler.com/2018/06/27/Write-a-Compiler-9.html">Part 9: Functions</a></li> 
   <li><a href="https://norasandler.com/2019/02/18/Write-a-Compiler-10.html">Part 10: Global Variables</a></li> 
  </ul> </li> 
 <li><a href="https://llvm.org/docs/tutorial/#kaleidoscope-implementing-a-language-with-llvm">Implementing a Language with LLVM</a></li> 
 <li><a href="https://jguegant.github.io//jguegant.github.io/blogs/tech/meta-crush-saga.html">Meta Crush Saga: a C++17 compile-time game</a></li> 
 <li><a href="https://gist.github.com/nadavrot/5b35d44e8ba3dd718e595e40184d03f0">High-Performance Matrix Multiplication</a></li> 
 <li>Space Invaders from Scratch 
  <ul> 
   <li><a href="http://nicktasios.nl/posts/space-invaders-from-scratch-part-1.html">Part 1</a></li> 
   <li><a href="http://nicktasios.nl/posts/space-invaders-from-scratch-part-2.html">Part 2</a></li> 
   <li><a href="http://nicktasios.nl/posts/space-invaders-from-scratch-part-3.html">Part 3</a></li> 
   <li><a href="http://nicktasios.nl/posts/space-invaders-from-scratch-part-4.html">Part 4</a></li> 
   <li><a href="http://nicktasios.nl/posts/space-invaders-from-scratch-part-5.html">Part 5</a></li> 
  </ul> </li> 
 <li><a href="http://javilop.com/gamedev/tetris-tutorial-in-c-platform-independent-focused-in-game-logic-for-beginners/">Tetris Tutorial in C++ Platform Independent</a></li> 
 <li>Writing a Linux Debugger 
  <ul> 
   <li><a href="https://blog.tartanllama.xyz/writing-a-linux-debugger-setup/">Part 1: Setup</a></li> 
   <li><a href="https://blog.tartanllama.xyz/writing-a-linux-debugger-breakpoints/">Part 2: Breakpoints</a></li> 
   <li><a href="https://blog.tartanllama.xyz/writing-a-linux-debugger-registers/">Part 3: Registers and memory</a></li> 
   <li><a href="https://blog.tartanllama.xyz/writing-a-linux-debugger-elf-dwarf/">Part 4: Elves and dwarves</a></li> 
   <li><a href="https://blog.tartanllama.xyz/writing-a-linux-debugger-source-signal/">Part 5: Source and signals</a></li> 
   <li><a href="https://blog.tartanllama.xyz/writing-a-linux-debugger-dwarf-step/">Part 6: Source-level stepping</a></li> 
   <li><a href="https://blog.tartanllama.xyz/writing-a-linux-debugger-source-break/">Part 7: Source-level breakpoints</a></li> 
   <li><a href="https://blog.tartanllama.xyz/writing-a-linux-debugger-unwinding/">Part 8: Stack unwinding</a></li> 
   <li><a href="https://blog.tartanllama.xyz/writing-a-linux-debugger-variables/">Part 9: Handling variables</a></li> 
   <li><a href="https://blog.tartanllama.xyz/writing-a-linux-debugger-advanced-topics/">Part 10: Advanced topics</a></li> 
  </ul> </li> 
 <li>Let's write a compiler 
  <ul> 
   <li><a href="https://briancallahan.net/blog/20210814.html">Part 1: Introduction, selecting a language, and doing some planning</a></li> 
   <li><a href="https://briancallahan.net/blog/20210815.html">Part 2: A lexer</a></li> 
   <li><a href="https://briancallahan.net/blog/20210816.html">Part 3: A parser</a></li> 
   <li><a href="https://briancallahan.net/blog/20210817.html">Part 4: Testing</a></li> 
   <li><a href="https://briancallahan.net/blog/20210818.html">Part 5: A code generator</a></li> 
   <li><a href="https://briancallahan.net/blog/20210819.html">Part 6: Input and output</a></li> 
   <li><a href="https://briancallahan.net/blog/20210822.html">Part 7: Arrays</a></li> 
   <li><a href="https://briancallahan.net/blog/20210826.html">Part 8: Strings, forward references, and conclusion</a></li> 
  </ul> </li> 
</ul> 
<h3>Network programming</h3> 
<ul> 
 <li> <p>Let's Code a TCP/IP Stack</p> 
  <ul> 
   <li><a href="http://www.saminiir.com/lets-code-tcp-ip-stack-1-ethernet-arp/">Part 1: Ethernet &amp; ARP</a></li> 
   <li><a href="http://www.saminiir.com/lets-code-tcp-ip-stack-2-ipv4-icmpv4/">Part 2: IPv4 &amp; ICMPv4</a></li> 
   <li><a href="http://www.saminiir.com/lets-code-tcp-ip-stack-3-tcp-handshake/">Part 3: TCP Basics &amp; Handshake</a></li> 
   <li><a href="http://www.saminiir.com/lets-code-tcp-ip-stack-4-tcp-data-flow-socket-api/">Part 4: TCP Data Flow &amp; Socket API</a></li> 
   <li><a href="http://www.saminiir.com/lets-code-tcp-ip-stack-5-tcp-retransmission/">Part 5: TCP Retransmission</a></li> 
  </ul> </li> 
 <li> <p>Programming concurrent servers</p> 
  <ul> 
   <li><a href="https://eli.thegreenplace.net/2017/concurrent-servers-part-1-introduction/">Part 1 - Introduction</a></li> 
   <li><a href="https://eli.thegreenplace.net/2017/concurrent-servers-part-2-threads/">Part 2 - Threads</a></li> 
   <li><a href="https://eli.thegreenplace.net/2017/concurrent-servers-part-3-event-driven/">Part 3 - Event-driven</a></li> 
   <li><a href="https://eli.thegreenplace.net/2017/concurrent-servers-part-4-libuv/">Part 4 - libuv</a></li> 
   <li><a href="https://eli.thegreenplace.net/2017/concurrent-servers-part-5-redis-case-study/">Part 5 - Redis case study</a></li> 
   <li><a href="https://eli.thegreenplace.net/2018/concurrent-servers-part-6-callbacks-promises-and-asyncawait/">Part 6 - Callbacks, Promises and async/await</a></li> 
  </ul> </li> 
 <li> <p>MQTT Broker from scratch</p> 
  <ul> 
   <li><a href="https://codepr.github.io/posts/sol-mqtt-broker">Part 1 - The protocol</a></li> 
   <li><a href="https://codepr.github.io/posts/sol-mqtt-broker-p2">Part 2 - Networking</a></li> 
   <li><a href="https://codepr.github.io/posts/sol-mqtt-broker-p3">Part 3 - Server</a></li> 
   <li><a href="https://codepr.github.io/posts/sol-mqtt-broker-p4">Part 4 - Data structures</a></li> 
   <li><a href="https://codepr.github.io/posts/sol-mqtt-broker-p5">Part 5 - Topic abstraction</a></li> 
   <li><a href="https://codepr.github.io/posts/sol-mqtt-broker-p6">Part 6 - Handlers</a></li> 
   <li><a href="https://codepr.github.io/posts/sol-mqtt-broker-bonus">Bonus - Multithreading</a></li> 
  </ul> </li> 
</ul> 
<h3>OpenGL:</h3> 
<ul> 
 <li>Creating 2D Breakout game clone in C++ with OpenGL 
  <ul> 
   <li><a href="https://learnopengl.com/In-Practice/2D-Game/Breakout">Breakout</a></li> 
   <li><a href="https://learnopengl.com/In-Practice/2D-Game/Setting-up">Setting up</a></li> 
   <li><a href="https://learnopengl.com/In-Practice/2D-Game/Rendering-Sprites">Rendering Sprites</a></li> 
   <li><a href="https://learnopengl.com/In-Practice/2D-Game/Levels">Levels</a></li> 
   <li>Collisions 
    <ul> 
     <li><a href="https://learnopengl.com/In-Practice/2D-Game/Collisions/Ball">Ball</a></li> 
     <li><a href="https://learnopengl.com/In-Practice/2D-Game/Collisions/Collision-detection">Collision detection</a></li> 
     <li><a href="https://learnopengl.com/In-Practice/2D-Game/Collisions/Collision-resolution">Collision resolution</a></li> 
    </ul> </li> 
   <li><a href="https://learnopengl.com/In-Practice/2D-Game/Particles">Particles</a></li> 
   <li><a href="https://learnopengl.com/In-Practice/2D-Game/Postprocessing">Postprocessing</a></li> 
   <li><a href="https://learnopengl.com/In-Practice/2D-Game/Powerups">Powerups</a></li> 
   <li><a href="https://learnopengl.com/In-Practice/2D-Game/Audio">Audio</a></li> 
   <li><a href="https://learnopengl.com/In-Practice/2D-Game/Render-text">Render text</a></li> 
   <li><a href="https://learnopengl.com/In-Practice/2D-Game/Final-thoughts">Final thoughts</a></li> 
  </ul> </li> 
 <li><a href="https://handmadehero.org">Handmade Hero</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLMZ_9w2XRxiZq1vfw1lrpCMRDufe2MKV_">How to Make Minecraft in C++/OpenGL</a> (video)</li> 
</ul> 
<h2>C#:</h2> 
<ul> 
 <li><a href="http://scottlilly.com/learn-c-by-building-a-simple-rpg-index/">Learn C# By Building a Simple RPG Game</a></li> 
 <li><a href="https://roguesharp.wordpress.com/">Create a Rogue-like game in C#</a></li> 
 <li><a href="https://www.intertech.com/Blog/xamarin-tutorial-part-1-create-a-blank-app/">Create a Blank App with C# and Xamarin (work in progress)</a></li> 
 <li><a href="https://www.raywenderlich.com/134049/building-ios-apps-with-xamarin-and-visual-studio">Build iOS Photo Library App with Xamarin and Visual Studio</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLVMqA0_8O85yC78I4Xj7z48ES48IQBa7p">Building the CoreWiki</a> This is a Wiki-style content management system that has been completely written in C# with ASP.NET Core and Razor Pages. You can find the source code <a href="https://github.com/csharpfritz/CoreWiki">here</a>.</li> 
</ul> 
<h2>Clojure:</h2> 
<ul> 
 <li><a href="http://howistart.org/posts/clojure/1/index.html">Build a Twitter Bot with Clojure</a></li> 
 <li><a href="https://bernhardwenzel.com/articles/clojure-spellchecker/">Building a Spell-Checker</a></li> 
 <li><a href="https://hackernoon.com/building-a-jira-integration-with-clojure-atlassian-connect-506ebd112807">Building a JIRA integration with Clojure &amp; Atlassian Connect</a></li> 
 <li><a href="https://github.com/aliaksandr-s/prototyping-with-clojure">Prototyping with Clojure</a></li> 
 <li><a href="https://shaunlebron.github.io/t3tr0s-slides">Tetris in ClojureScript</a></li> 
</ul> 
<h2>Dart:</h2> 
<h3>Flutter:</h3> 
<ul> 
 <li><a href="https://youtu.be/O3nmP-lZAdg">Amazon Clone with Admin Panel</a></li> 
 <li><a href="https://youtu.be/7dAt-JMSCVQ">Food Delivery App</a></li> 
 <li><a href="https://youtu.be/0_GJ1w_iG44">Google Docs Clone</a></li> 
 <li><a href="https://youtu.be/mEPm9w5QlJM">Instagram Clone</a></li> 
 <li><a href="https://youtu.be/Aut-wfXacXg">Multiplayer TicTacToe Game</a></li> 
 <li><a href="https://youtu.be/4E4V9F3cbp4">TikTok Clone</a></li> 
 <li><a href="https://youtu.be/71AsYo2q_0Y">Ticket Booking App</a></li> 
 <li><a href="https://youtu.be/x4DydJKVvQk">Travel App</a></li> 
 <li><a href="https://youtu.be/U9YKZrDX0CQ">Twitch Clone</a></li> 
 <li><a href="https://youtu.be/yqwfP2vXWJQ">WhatsApp Clone</a></li> 
 <li><a href="https://youtu.be/_W0RN_Cqhpg">Wordle Clone</a></li> 
 <li><a href="https://youtu.be/sMA1dKbv33Y">Zoom Clone</a></li> 
 <li><a href="https://youtu.be/J8IFNKzs3TI">Netflix Clone</a></li> 
</ul> 
<h2>Elixir</h2> 
<ul> 
 <li><a href="https://sheharyar.me/blog/simple-chat-phoenix-elixir/">Building a Simple Chat App With Elixir and Phoenix</a></li> 
 <li><a href="https://medium.com/free-code-camp/how-to-write-a-super-fast-link-shortener-with-elixir-phoenix-and-mnesia-70ffa1564b3c">How to write a super fast link shortener with Elixir, Phoenix, and Mnesia</a></li> 
</ul> 
<h2>Erlang</h2> 
<ul> 
 <li><a href="https://medium.com/@kansi/chatbus-build-your-first-multi-user-chat-room-app-with-erlang-otp-b55f72064901">ChatBus : build your first multi-user chat room app with Erlang/OTP</a></li> 
 <li><a href="http://marianoguerra.org/posts/making-a-chat-app-with-erlang-rebar-cowboy-and-bullet.html">Making a Chat App with Erlang, Rebar, Cowboy and Bullet</a></li> 
</ul> 
<h2>F#:</h2> 
<ul> 
 <li><a href="http://tomasp.net/blog/2018/write-your-own-excel">Write your own Excel in 100 lines of F#</a></li> 
</ul> 
<h2>Java:</h2> 
<ul> 
 <li><a href="http://www.craftinginterpreters.com/">Build an Interpreter</a> (Chapter 4-13 is written in Java)</li> 
 <li><a href="http://javarevisited.blogspot.com/2015/06/how-to-create-http-server-in-java-serversocket-example.html">Build a Simple HTTP Server with Java</a></li> 
 <li><a href="https://www.youtube.com/watch?v=dhWL4DC7Krs">Build an Android Flashlight App</a> (video)</li> 
 <li><a href="https://spring.io/guides/gs/securing-web/">Build a Spring Boot App with User Authentication</a></li> 
</ul> 
<h2>JavaScript:</h2> 
<ul> 
 <li><a href="https://javascript30.com">Build 30 things in 30 days with 30 tutorials</a></li> 
 <li><a href="https://medium.com/codingthesmartway-com-blog/pure-javascript-building-a-real-world-application-from-scratch-5213591cfcd6">Build an App in Pure JS</a></li> 
 <li><a href="https://link.medium.com/wWUO7TN8SS">Build a Jupyter Notebook Extension</a></li> 
 <li><a href="https://medium.com/javascript-in-plain-english/build-tic-tac-toe-game-using-javascript-3afba3c8fdcc">Build a TicTacToe Game with JavaScript</a></li> 
 <li><a href="https://webdesign.tutsplus.com/tutorials/build-a-simple-weather-app-with-vanilla-javascript--cms-33893">Build a Simple Weather App With Vanilla JavaScript</a></li> 
 <li><a href="https://github.com/dwyl/javascript-todo-list-tutorial">Build a Todo List App in JavaScript</a></li> 
</ul> 
<h2>HTML and CSS:</h2> 
<ul> 
 <li><a href="https://medium.freecodecamp.org/how-to-build-a-delightful-loading-screen-in-5-minutes-847991da509f">Build A Loading Screen</a></li> 
 <li><a href="https://medium.freecodecamp.org/how-to-build-an-html-calculator-app-from-scratch-using-javascript-4454b8714b98">Build an HTML Calculator with JS</a></li> 
 <li><a href="https://www.freecodecamp.org/news/think-like-a-programmer-how-to-build-snake-using-only-javascript-html-and-css-7b1479c3339e/">Build Snake using only JavaScript, HTML &amp; CSS</a></li> 
</ul> 
<h3>Mobile Application:</h3> 
<ul> 
 <li><a href="https://egghead.io/courses/build-a-react-native-todo-application">Build a React Native Todo Application</a></li> 
 <li><a href="https://medium.com/@alialhaddad/how-to-use-redux-thunk-in-react-and-react-native-4743a1321bd0">Build a React Native Application with Redux Thunk</a></li> 
</ul> 
<h3>Web Applications:</h3> 
<h4>React:</h4> 
<ul> 
 <li><a href="http://serverless-stack.com/">Create Serverless React.js Apps</a></li> 
 <li><a href="http://codeloveandboards.com/blog/2016/01/04/trello-tribute-with-phoenix-and-react-pt-1/">Create a Trello Clone</a></li> 
 <li><a href="http://sahatyalkabov.com/create-a-character-voting-app-using-react-nodejs-mongodb-and-socketio">Create a Character Voting App with React, Node, MongoDB and SocketIO</a></li> 
 <li><a href="https://www.fullstackreact.com/articles/react-tutorial-cloning-yelp/">React Tutorial: Cloning Yelp</a></li> 
 <li><a href="https://teropa.info/blog/2015/09/10/full-stack-redux-tutorial.html">Build a Full Stack Movie Voting App with Test-First Development using Mocha, React, Redux and Immutable</a></li> 
 <li><a href="https://scotch.io/tutorials/build-a-real-time-twitter-stream-with-node-and-react-js">Build a Twitter Stream with React and Node</a></li> 
 <li><a href="https://medium.com/@kris101/clone-medium-on-node-js-and-react-js-731cdfbb6878">Build A Simple Medium Clone using React.js and Node.js</a></li> 
 <li><a href="https://medium.freecodecamp.org/how-to-integrate-mailchimp-in-a-javascript-web-app-2a889fb43f6f">Integrate MailChimp in JS</a></li> 
 <li><a href="https://medium.freecodecamp.org/building-chrome-extensions-in-react-parcel-79d0240dd58f">Build A Chrome Extension with React + Parcel</a></li> 
 <li><a href="https://blog.hasura.io/tutorial-fullstack-react-native-with-graphql-and-authentication-18183d13373a">Build A ToDo App With React Native</a></li> 
 <li><a href="https://medium.freecodecamp.org/how-to-build-a-chat-application-using-react-redux-redux-saga-and-web-sockets-47423e4bc21a">Make a Chat Application</a></li> 
 <li><a href="https://medium.freecodecamp.org/create-a-news-app-using-react-native-ced249263627">Create a News App with React Native</a></li> 
 <li><a href="https://medium.freecodecamp.org/learn-webpack-for-react-a36d4cac5060">Learn Webpack For React</a></li> 
 <li><a href="https://blog.bitsrc.io/testing-your-react-app-with-puppeteer-and-jest-c72b3dfcde59">Testing React App With Puppeteer and Jest</a></li> 
 <li><a href="https://medium.freecodecamp.org/how-to-build-your-own-react-boilerplate-2f8cbbeb9b3f">Build Your Own React Boilerplate</a></li> 
 <li><a href="https://medium.freecodecamp.org/create-gameoflife-with-react-in-one-hour-8e686a410174">Code The Game Of Life With React</a></li> 
 <li><a href="https://hackernoon.com/a-basic-react-redux-introductory-tutorial-adcc681eeb5e">A Basic React+Redux Introductory Tutorial</a></li> 
 <li><a href="https://hackernoon.com/build-an-appointment-scheduler-using-react-twilio-and-cosmic-js-95377f6d1040">Build an Appointment Scheduler</a></li> 
 <li><a href="https://codeburst.io/build-a-chat-app-with-sentiment-analysis-using-next-js-c43ebf3ea643">Build A Chat App with Sentiment Analysis</a></li> 
 <li><a href="https://hackernoon.com/full-stack-web-application-using-react-node-js-express-and-webpack-97dbd5b9d708">Build A Full Stack Web Application Setup</a></li> 
 <li><a href="https://www.youtube.com/watch?v=hT3j87FMR6M">Create Todoist clone with React and Firebase</a></li> 
 <li>Build A Random Quote Machine 
  <ul> 
   <li><a href="https://www.youtube.com/watch?v=3QngsWA9IEE">Part 1</a></li> 
   <li><a href="https://www.youtube.com/watch?v=XnoTmO06OYo">Part 2</a></li> 
   <li><a href="https://www.youtube.com/watch?v=us51Jne67_I">Part 3</a></li> 
   <li><a href="https://www.youtube.com/watch?v=iZx7hqHb5MU">Part 4</a></li> 
   <li><a href="https://www.youtube.com/watch?v=lpba9vBqXl0">Part 5</a></li> 
   <li><a href="https://www.youtube.com/watch?v=Jvp8j6zrFHE">Part 6</a></li> 
   <li><a href="https://www.youtube.com/watch?v=M_hFfrN8_PQ">Part 7</a></li> 
  </ul> </li> 
 <li><a href="https://www.youtube.com/watch?v=-edmQKcOW8s">React Phone E-Commerce Project(video)</a></li> 
</ul> 
<h4>Angular:</h4> 
<ul> 
 <li> <p><a href="https://hackhands.com/building-instagram-clone-angularjs-satellizer-nodejs-mongodb/">Build an Instagram Clone with Angular 1.x</a></p> </li> 
 <li> <p>Build an offline-capable Hacker News client with Angular 2+</p> 
  <ul> 
   <li><a href="https://houssein.me/angular2-hacker-news">Part 1</a></li> 
   <li><a href="https://houssein.me/progressive-angular-applications">Part 2</a></li> 
  </ul> </li> 
 <li> <p><a href="https://thinkster.io/django-angularjs-tutorial">Build a Google+ clone with Django and AngularJS (Angular 1.x)</a></p> </li> 
 <li> <p>Build A Beautiful Real World App with Angular 8 :</p> 
  <ul> 
   <li><a href="https://medium.com/@hamedbaatour/build-a-real-world-beautiful-web-app-with-angular-6-a-to-z-ultimate-guide-2018-part-i-e121dd1d55e">Part I</a></li> 
   <li><a href="https://medium.com/@hamedbaatour/build-a-real-world-beautiful-web-app-with-angular-8-the-ultimate-guide-2019-part-ii-fe70852b2d6d">Part II</a></li> 
  </ul> </li> 
 <li> <p><a href="https://medium.com/@tomastrajan/how-to-build-responsive-layouts-with-bootstrap-4-and-angular-6-cfbb108d797b">Build Responsive layout with BootStrap 4 and Angular 6</a></p> </li> 
 <li> <p>ToDo App with Angular 5</p> 
  <ul> 
   <li><a href="http://www.discoversdk.com/blog/intro-to-angular-and-the-evolution-of-the-web">Introduction to Angular</a></li> 
   <li><a href="http://www.discoversdk.com/blog/angular-5-to-do-list-app-part-1">Part 1</a></li> 
  </ul> </li> 
</ul> 
<h4>Node:</h4> 
<ul> 
 <li><a href="https://scotch.io/tutorials/building-a-real-time-markdown-viewer">Build a real-time Markdown Editor with NodeJS</a></li> 
 <li><a href="http://mherman.org/blog/2016/04/28/test-driven-development-with-node/">Test-Driven Development with Node, Postgres and Knex</a></li> 
 <li>Write a Twitter Bot in Node.js 
  <ul> 
   <li><a href="https://codeburst.io/build-a-simple-twitter-bot-with-node-js-in-just-38-lines-of-code-ed92db9eb078">Part 1</a></li> 
   <li><a href="https://codeburst.io/build-a-simple-twitter-bot-with-node-js-part-2-do-more-2ef1e039715d">Part 2</a></li> 
  </ul> </li> 
 <li><a href="https://medium.freecodecamp.org/how-to-build-a-simple-search-bot-in-30-minutes-eb56fcedcdb1">Build A Simple Search Bot in 30 minutes</a></li> 
 <li><a href="https://medium.freecodecamp.org/how-i-built-a-job-scraping-web-app-using-node-js-and-indreed-7fbba124bbdc">Build A Job Scraping Web App</a></li> 
 <li><a href="https://blog.scottlogic.com/2017/05/22/gifbot-github-integration.html">Building a GitHub App</a></li> 
 <li>How to build your own Uber-for-X App using JavaScript, Node.JS, MongoDB and Web Sockets 
  <ul> 
   <li><a href="https://www.ashwinhariharan.tech/blog/how-to-build-your-own-uber-for-x-app/">Part 1</a></li> 
   <li><a href="https://www.ashwinhariharan.tech/blog/how-to-build-your-own-uber-for-x-app-part-2/">Part 2</a></li> 
  </ul> </li> 
</ul> 
<h4>Vue</h4> 
<ul> 
 <li><a href="https://medium.com/@anas.mammeri/vue-2-firebase-how-to-build-a-vue-app-with-firebase-authentication-system-in-15-minutes-fdce6f289c3c">Vue 2 + Firebase: How to build a Vue app with Firebase authentication system in 15 minutes</a></li> 
 <li><a href="https://matthiashager.com/complete-vuejs-application-tutorial/">Vue.js Application Tutorial – Creating a Simple Budgeting App with Vue</a></li> 
 <li><a href="https://scotch.io/tutorials/build-a-blog-with-vue-graphql-and-apollo-client">Build a Blog with Vue, GraphQL and Apollo</a></li> 
 <li>Build a full stack web application using MEVN (MongoDB, Express, Vue, Node) stack 
  <ul> 
   <li><a href="https://medium.com/@anaida07/mevn-stack-application-part-1-3a27b61dcae0">Part 1</a></li> 
   <li><a href="https://medium.com/@anaida07/mevn-stack-application-part-2-2-9ebcf8a22753">Part 2</a></li> 
  </ul> </li> 
 <li><a href="https://www.youtube.com/watch?v=78tNYZUS-ps">Vue.js To-Do List Tutorial (video)</a></li> 
 <li><a href="https://www.ably.io/tutorials/peer-to-peer-vue">Vue 2 + Pub/Sub: Build a peer to peer multi-user platform for games</a></li> 
</ul> 
<h4>Others (Hapi, Express...):</h4> 
<ul> 
 <li>Build a Progressive Web Application (PWA) 
  <ul> 
   <li><a href="https://bitsofco.de/bitsofcode-pwa-part-1-offline-first-with-service-worker/">Part 1</a></li> 
   <li><a href="https://bitsofco.de/bitsofcode-pwa-part-2-instant-loading-with-indexeddb/">Part 2</a></li> 
   <li><a href="https://bitsofco.de/bitsofcode-pwa-part-3-push-notifications/">Part 3</a></li> 
  </ul> </li> 
 <li><a href="https://medium.freecodecamp.org/build-native-desktop-apps-with-javascript-a49ede90d8e9">Build A Native Desktop App with JS</a></li> 
 <li>Build a Powerful API with NodeJs,GraphQL and Hapi 
  <ul> 
   <li><a href="https://medium.com/@wesharehoodies/how-to-setup-a-powerful-api-with-nodejs-graphql-mongodb-hapi-and-swagger-e251ac189649">Part I</a></li> 
  </ul> </li> 
</ul> 
<h4>D3.js</h4> 
<ul> 
 <li><a href="https://www.sitepoint.com/d3-js-data-visualizations/">Learn D3 using examples</a></li> 
 <li><a href="https://medium.freecodecamp.org/learn-to-create-a-line-chart-using-d3-js-4f43f1ee716b">Learn To Make A Line Chart</a></li> 
</ul> 
<h3>Game Development:</h3> 
<ul> 
 <li><a href="https://developer.mozilla.org/en-US/docs/Games/Tutorials/2D_breakout_game_Phaser">Make 2D Breakout Game using Phaser</a></li> 
 <li>Make Flappy Bird in HTML5 and JavaScript with Phaser 
  <ul> 
   <li><a href="http://www.lessmilk.com/tutorial/flappy-bird-phaser-1">Part 1</a></li> 
   <li><a href="http://www.lessmilk.com/tutorial/flappy-bird-phaser-2">Part 2</a></li> 
  </ul> </li> 
</ul> 
<h3>Desktop Application:</h3> 
<ul> 
 <li><a href="https://medium.freecodecamp.org/build-a-desktop-chat-app-with-react-electron-and-chatkit-744d168e6f2f">Build A Desktop Chat App with React and Electron</a></li> 
</ul> 
<h3>Miscellaneous:</h3> 
<ul> 
 <li><a href="https://www.pubnub.com/blog/build-yourself-a-web-framework-in-less-than-20-lines-of-code/">How to Build a Web Framework in Less Than 20 Lines of Code</a></li> 
 <li><a href="https://zapier.com/engineering/how-to-build-redux/">Build Yourself a Redux</a></li> 
 <li><a href="https://medium.com/@deathmood/how-to-write-your-own-virtual-dom-ee74acc13060">How to write your own Virtual DOM</a></li> 
 <li><a href="https://andrewgriffithsonline.com/blog/serverless-websockets-on-aws/">Build A Realtime Serverless GraphQL API with WebSockets on AWS</a></li> 
</ul> 
<h2>Kotlin:</h2> 
<ul> 
 <li><a href="https://medium.com/@juanchosaravia/learn-kotlin-while-developing-an-android-app-introduction-567e21ff9664">Keddit - Learn Kotlin While Developing an Android Application</a></li> 
</ul> 
<h2>Lua:</h2> 
<h3>LÖVE:</h3> 
<ul> 
 <li>BYTEPATH: Creation of a Complete Game with Lua and LÖVE 
  <ul> 
   <li><a href="https://github.com/SSYGEN/blog/issues/30">Part 0: Introduction</a></li> 
   <li><a href="https://github.com/SSYGEN/blog/issues/15">Part 1: Game Loop</a></li> 
   <li><a href="https://github.com/SSYGEN/blog/issues/16">Part 2: Libraries</a></li> 
   <li><a href="https://github.com/SSYGEN/blog/issues/17">Part 3: Rooms and Areas</a></li> 
   <li><a href="https://github.com/SSYGEN/blog/issues/18">Part 4: Exercises</a></li> 
   <li><a href="https://github.com/SSYGEN/blog/issues/19">Part 5: Game Basics</a></li> 
   <li><a href="https://github.com/SSYGEN/blog/issues/20">Part 6: Player Basics</a></li> 
   <li><a href="https://github.com/SSYGEN/blog/issues/21">Part 7: Player Stats and Attacks</a></li> 
   <li><a href="https://github.com/SSYGEN/blog/issues/22">Part 8: Enemies</a></li> 
   <li><a href="https://github.com/SSYGEN/blog/issues/23">Part 9: Director and Gameplay Loop</a></li> 
   <li><a href="https://github.com/SSYGEN/blog/issues/24">Part 10: Coding Practices</a></li> 
   <li><a href="https://github.com/SSYGEN/blog/issues/25">Part 11: Passives</a></li> 
   <li><a href="https://github.com/SSYGEN/blog/issues/26">Part 12: More Passives</a></li> 
   <li><a href="https://github.com/SSYGEN/blog/issues/27">Part 13: Skill Tree</a></li> 
   <li><a href="https://github.com/SSYGEN/blog/issues/28">Part 14: Console</a></li> 
   <li><a href="https://github.com/SSYGEN/blog/issues/29">Part 15: Final</a></li> 
  </ul> </li> 
</ul> 
<h2>Python:</h2> 
<h3>Web Scraping:</h3> 
<ul> 
 <li><a href="https://marcobonzanini.com/2015/03/02/mining-twitter-data-with-python-part-1/">Mining Twitter Data with Python</a></li> 
 <li><a href="https://realpython.com/blog/python/web-scraping-with-scrapy-and-mongodb/">Scrape a Website with Scrapy and MongoDB</a></li> 
 <li><a href="http://www.byperth.com/2018/04/25/guide-web-scraping-101-what-you-need-to-know-and-how-to-scrape-with-python-selenium-webdriver/">How To Scrape With Python and Selenium WebDriver</a></li> 
 <li><a href="https://medium.com/@nishantsahoo.in/which-movie-should-i-watch-5c83a3c0f5b1">Which Movie Should I Watch using BeautifulSoup</a></li> 
</ul> 
<h3>Web Applications:</h3> 
<ul> 
 <li><a href="https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-i-hello-world">Build a Microblog with Flask</a></li> 
 <li><a href="https://tutorial.djangogirls.org/en/">Create a Blog Web App In Django</a></li> 
 <li><a href="https://www.twilio.com/blog/2015/03/choose-your-own-adventures-presentations-wizard-mode-part-1-of-3.html">Choose Your Own Adventure Presentations</a></li> 
 <li><a href="https://realpython.com/blog/python/rethink-flask-a-simple-todo-list-powered-by-flask-and-rethinkdb/">Build a Todo List with Flask and RethinkDB</a></li> 
 <li><a href="http://www.obeythetestinggoat.com/">Build a Todo List with Django and Test-Driven Development</a></li> 
 <li><a href="http://www.skybert.net/python/developing-a-restful-micro-service-in-python/">Build a RESTful Microservice in Python</a></li> 
 <li><a href="https://testdriven.io/">Microservices with Docker, Flask, and React</a></li> 
 <li><a href="https://pythonspot.com/flask-web-app-with-python/">Build A Simple Web App With Flask</a></li> 
 <li><a href="https://codeburst.io/create-a-django-api-in-under-20-minutes-2a082a60f6f3">Create A Django API in under 20 minutes</a></li> 
 <li>Build a Community-driven delivery application with Django, Postgres and JavaScript 
  <ul> 
   <li><a href="https://www.ashwinhariharan.tech/blog/thinking-of-building-a-contact-tracing-application-heres-what-you-can-do-instead/">Part 1</a></li> 
   <li><a href="https://www.ashwinhariharan.tech/blog/thinking-of-building-a-contact-tracing-application-heres-what-you-can-do-instead-part-2/">Part 2</a></li> 
  </ul> </li> 
 <li>Realtime Chat application with Vue, django-notifs, RabbitMQ and uWSGI 
  <ul> 
   <li><a href="https://danidee10.github.io/2018/01/01/realtime-django-1.html">Part 1</a></li> 
   <li><a href="https://danidee10.github.io/2018/01/03/realtime-django-2.html">Part 2</a></li> 
   <li><a href="https://danidee10.github.io/2018/01/07/realtime-django-3.html">Part 3</a></li> 
   <li><a href="https://danidee10.github.io/2018/01/10/realtime-django-4.html">Part 4</a></li> 
   <li><a href="https://danidee10.github.io/2018/01/13/realtime-django-5.html">Part 5</a></li> 
   <li><a href="https://danidee10.github.io/2018/03/12/realtime-django-6.html">Part 6</a></li> 
  </ul> </li> 
</ul> 
<h3>Bots:</h3> 
<ul> 
 <li><a href="http://pythonforengineers.com/build-a-reddit-bot-part-1/">Build a Reddit Bot</a></li> 
 <li><a href="https://www.youtube.com/watch?v=krTUf7BpTc0">How to Make a Reddit Bot - YouTube</a> (video)</li> 
 <li><a href="https://blog.hartleybrody.com/fb-messenger-bot/">Build a Facebook Messenger Bot</a></li> 
 <li><a href="https://pythontips.com/2017/04/13/making-a-reddit-facebook-messenger-bot/">Making a Reddit + Facebook Messenger Bot</a></li> 
 <li>How To Create a Telegram Bot Using Python 
  <ul> 
   <li><a href="https://khashtamov.com/en/how-to-create-a-telegram-bot-using-python/">Part 1</a></li> 
   <li><a href="https://khashtamov.com/en/how-to-deploy-telegram-bot-django/">Part 2</a></li> 
  </ul> </li> 
 <li><a href="https://medium.freecodecamp.org/creating-a-twitter-bot-in-python-with-tweepy-ac524157a607">Create a Twitter Bot In Python</a></li> 
</ul> 
<h3>Data Science:</h3> 
<ul> 
 <li>Learn Python For Data Science by Doing Several Projects (video): 
  <ul> 
   <li><a href="https://www.youtube.com/watch?v=T5pRlIbr6gg">Part 1: Introduction</a></li> 
   <li><a href="https://www.youtube.com/watch?v=o_OZdbCzHUA">Part 2: Twitter Sentiment Analysis</a></li> 
   <li><a href="https://www.youtube.com/watch?v=9gBC9R-msAk&amp;list=PL2-dafEMk2A6QKz1mrk1uIGfHkC1zZ6UU&amp;index=3">Part 3: Recommendation Systems</a></li> 
   <li><a href="https://www.youtube.com/watch?v=SSu00IRRraY&amp;index=4&amp;list=PL2-dafEMk2A6QKz1mrk1uIGfHkC1zZ6UU">Part 4: Predicting Stock Prices</a></li> 
   <li><a href="https://www.youtube.com/watch?v=MrBzgvUNr4w&amp;list=PL2-dafEMk2A6QKz1mrk1uIGfHkC1zZ6UU&amp;index=5">Part 5: Deep Dream in TensorFlow</a></li> 
   <li><a href="https://www.youtube.com/watch?v=dSofAXnnFrY&amp;index=6&amp;list=PL2-dafEMk2A6QKz1mrk1uIGfHkC1zZ6UU">Part 6: Genetic Algorithms</a></li> 
  </ul> </li> 
</ul> 
<h3>Machine Learning:</h3> 
<ul> 
 <li><a href="https://www.youtube.com/watch?v=uwwWVAgJBcM">Write Linear Regression From Scratch in Python</a> (video)</li> 
 <li><a href="https://machinelearningmastery.com/machine-learning-in-python-step-by-step/">Step-By-Step Machine Learning In Python</a></li> 
 <li><a href="https://medium.freecodecamp.org/using-machine-learning-to-predict-the-quality-of-wines-9e2e13d7480d">Predict Quality Of Wine</a></li> 
 <li><a href="https://towardsdatascience.com/solving-a-simple-classification-problem-with-python-fruits-lovers-edition-d20ab6b071d2">Solving A Fruits Classification Problem</a></li> 
 <li><a href="https://scikit-learn.org/stable/unsupervised_learning.html">Learn Unsupervised Learning with Python</a></li> 
 <li><a href="https://towardsdatascience.com/how-to-build-your-own-neural-network-from-scratch-in-python-68998a08e4f6">Build Your Own Neural Net from Scratch in Python</a></li> 
 <li><a href="https://medium.com/we-are-orb/linear-regression-in-python-without-scikit-learn-50aef4b8d122">Linear Regression in Python without sklearn</a></li> 
 <li><a href="https://medium.com/we-are-orb/multivariate-linear-regression-in-python-without-scikit-learn-7091b1d45905">Multivariate Linear Regression without sklearn</a></li> 
 <li><a href="https://towardsdatascience.com/how-to-build-a-simple-song-recommender-296fcbc8c85">Music Recommender using KNN</a></li> 
 <li>Find Similar Quora Questions- 
  <ul> 
   <li><a href="https://towardsdatascience.com/finding-similar-quora-questions-with-bow-tfidf-and-random-forest-c54ad88d1370">Using BOW, TFIDF and Xgboost</a></li> 
   <li><a href="https://towardsdatascience.com/finding-similar-quora-questions-with-word2vec-and-xgboost-1a19ad272c0d">Using Word2Vec and Xgboost</a></li> 
  </ul> </li> 
 <li><a href="https://data-flair.training/blogs/advanced-python-project-detecting-fake-news/">Detecting Fake News with Python and Machine Learning</a></li> 
</ul> 
<h3>OpenCV:</h3> 
<ul> 
 <li><a href="https://www.pyimagesearch.com/2014/09/01/build-kick-ass-mobile-document-scanner-just-5-minutes/">Build A Document Scanner</a></li> 
 <li><a href="https://www.pyimagesearch.com/2018/02/26/face-detection-with-opencv-and-deep-learning/">Build A Face Detector using OpenCV and Deep Learning</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLKHYJbyeQ1a0oGzgRXy-QwAN1tSV4XZxg">Build fastest custom object Detection system yusing YOLOv3(video playlist)</a></li> 
 <li><a href="https://www.pyimagesearch.com/2018/06/18/face-recognition-with-opencv-python-and-deep-learning/">Build a Face Recognition System using OpenCV, Python and Deep Learning</a></li> 
 <li><a href="https://www.pyimagesearch.com/2018/07/16/opencv-saliency-detection/">Detect The Salient Features in an Image</a></li> 
 <li><a href="https://www.pyimagesearch.com/2018/05/21/an-opencv-barcode-and-qr-code-scanner-with-zbar/">Build A Barcode Scanner</a></li> 
 <li><a href="https://www.pyimagesearch.com/2018/07/09/face-clustering-with-python/">Learn Face Clustering with Python</a></li> 
 <li><a href="https://www.pyimagesearch.com/wp-content/uploads/2014/11/opencv_crash_course_camshift.pdf">Object Tracking with Camshift</a></li> 
 <li><a href="https://www.pyimagesearch.com/2018/09/03/semantic-segmentation-with-opencv-and-deep-learning/">Semantic Segmentation with OpenCV and Deep Learning</a></li> 
 <li><a href="https://www.pyimagesearch.com/2018/08/20/opencv-text-detection-east-text-detector/">Text Detection in Images and Videos</a></li> 
 <li><a href="https://www.pyimagesearch.com/2018/08/13/opencv-people-counter/">People Counter using OpenCV</a></li> 
 <li><a href="https://www.pyimagesearch.com/2018/08/06/tracking-multiple-objects-with-opencv/">Tracking Multiple Objects with OpenCV</a></li> 
 <li><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/">Neural Style Transfer with OpenCV</a></li> 
 <li><a href="https://www.pyimagesearch.com/2018/09/17/opencv-ocr-and-text-recognition-with-tesseract/">OpenCV OCR and Text Recognition</a></li> 
 <li><a href="https://www.pyimagesearch.com/2017/02/20/text-skew-correction-opencv-python/">Text Skew Correction Tutorial</a></li> 
 <li><a href="https://www.pyimagesearch.com/2017/04/03/facial-landmarks-dlib-opencv-python/">Facial Landmark Detection Tutorial</a></li> 
 <li><a href="https://www.learnopencv.com/deep-learning-based-object-detection-and-instance-segmentation-using-mask-r-cnn-in-opencv-python-c/">Object Detection using Mask-R-CNN</a></li> 
 <li><a href="https://www.pyimagesearch.com/2015/05/04/target-acquired-finding-targets-in-drone-and-quadcopter-video-streams-using-python-and-opencv/">Automatic Target Detection Tutorial</a></li> 
 <li><a href="https://www.learnopencv.com/eigenface-using-opencv-c-python/">EigenFaces using OpenCV</a></li> 
 <li><a href="https://www.pyimagesearch.com/2018/04/02/faster-facial-landmark-detector-with-dlib/">Faster(5-point) Facial Landmark Detection Tutorial</a></li> 
 <li><a href="https://www.learnopencv.com/hand-keypoint-detection-using-deep-learning-and-opencv/">Hand Keypoint Detection</a></li> 
 <li>Dlib Correlation Object Tracking - 
  <ul> 
   <li><a href="https://www.pyimagesearch.com/2018/10/22/object-tracking-with-dlib/">Single Object Tracker</a></li> 
   <li><a href="https://www.pyimagesearch.com/2018/10/29/multi-object-tracking-with-dlib/">Mutiple Object Tracker</a></li> 
  </ul> </li> 
 <li><a href="https://www.pyimagesearch.com/2018/12/17/image-stitching-with-opencv-and-python/">Image Stitching with OpenCV and Python</a></li> 
 <li><a href="https://www.pyimagesearch.com/2018/11/26/instance-segmentation-with-opencv/">Instance Segmentation with OpenCV</a></li> 
 <li><a href="https://www.pyimagesearch.com/2020/05/04/covid-19-face-mask-detector-with-opencv-keras-tensorflow-and-deep-learning/">Face mask detector</a></li> 
</ul> 
<h3>Deep Learning:</h3> 
<ul> 
 <li><a href="http://danielnouri.org/notes/2014/12/17/using-convolutional-neural-nets-to-detect-facial-keypoints-tutorial/">Using Convolutional Neural Nets to Detect Facial Keypoints</a></li> 
 <li><a href="https://www.learnopencv.com/average-face-opencv-c-python-tutorial/">Generate an Average Face using Python and OpenCV</a></li> 
 <li><a href="https://medium.com/@ageitgey/how-to-break-a-captcha-system-in-15-minutes-with-machine-learning-dbebb035a710">Break A Captcha System using CNNs</a></li> 
 <li><a href="https://medium.com/google-cloud/keras-inception-v3-on-google-compute-engine-a54918b0058">Use pre-trained Inception model to provide image predictions</a></li> 
 <li><a href="https://hackernoon.com/deep-learning-cnns-in-tensorflow-with-gpus-cba6efe0acc2">Create your first CNN</a></li> 
 <li><a href="https://hackernoon.com/building-a-facial-recognition-pipeline-with-deep-learning-in-tensorflow-66e7645015b8">Build A Facial Recognition Pipeline</a></li> 
 <li><a href="https://medium.freecodecamp.org/building-an-image-caption-generator-with-deep-learning-in-tensorflow-a142722e9b1f">Build An Image Caption Generator</a></li> 
 <li><a href="https://medium.freecodecamp.org/making-your-own-face-recognition-system-29a8e728107c">Make your Own Face Recognition System</a></li> 
 <li><a href="https://towardsdatascience.com/how-i-trained-a-language-detection-ai-in-20-minutes-with-a-97-accuracy-fdeca0fb7724">Train a Language Detection AI in 20 minutes</a></li> 
 <li><a href="https://towardsdatascience.com/object-detection-with-neural-networks-a4e2c46b4491">Object Detection With Neural Networks</a></li> 
 <li>Learn Twitter Sentiment Analysis - 
  <ul> 
   <li><a href="https://towardsdatascience.com/another-twitter-sentiment-analysis-bb5b01ebad90">Part I - Data Cleaning</a></li> 
   <li><a href="https://towardsdatascience.com/another-twitter-sentiment-analysis-with-python-part-2-333514854913">Part II - EDA, Data Visualisation</a></li> 
   <li><a href="https://towardsdatascience.com/another-twitter-sentiment-analysis-with-python-part-3-zipfs-law-data-visualisation-fc9eadda71e7">Part III - Zipf's Law, Data Visualisation</a></li> 
   <li><a href="https://towardsdatascience.com/another-twitter-sentiment-analysis-with-python-part-4-count-vectorizer-b3f4944e51b5">Part IV - Feature Extraction(count vectoriser)</a></li> 
   <li><a href="https://towardsdatascience.com/another-twitter-sentiment-analysis-with-python-part-5-50b4e87d9bdd">Part V - Feature Extraction(Tfidf vectoriser)</a></li> 
   <li><a href="https://towardsdatascience.com/another-twitter-sentiment-analysis-with-python-part-6-doc2vec-603f11832504">Part VI - Doc2Vec</a></li> 
   <li><a href="https://towardsdatascience.com/another-twitter-sentiment-analysis-with-python-part-7-phrase-modeling-doc2vec-592a8a996867">Part VII - Phrase Modeling + Doc2Vec</a></li> 
   <li><a href="https://towardsdatascience.com/another-twitter-sentiment-analysis-with-python-part-8-dimensionality-reduction-chi2-pca-c6d06fb3fcf3">Part VIII - Dimensionality Reduction</a></li> 
   <li><a href="https://towardsdatascience.com/another-twitter-sentiment-analysis-with-python-part-9-neural-networks-with-tfidf-vectors-using-d0b4af6be6d7">Part IX - Neural Nets with Tfdif vectors</a></li> 
   <li><a href="https://towardsdatascience.com/another-twitter-sentiment-analysis-with-python-part-10-neural-network-with-a6441269aa3c">Part X - Neural Nets with word2vec/doc2vec</a></li> 
   <li><a href="https://towardsdatascience.com/another-twitter-sentiment-analysis-with-python-part-11-cnn-word2vec-41f5e28eda74">Part XI - CNN with Word2Vec</a></li> 
  </ul> </li> 
 <li><a href="https://becominghuman.ai/transfer-learning-retraining-inception-v3-for-custom-image-classification-2820f653c557">Use Transfer Learning for custom image classification</a></li> 
 <li><a href="https://iamtrask.github.io/2015/07/12/basic-python-network/">Learn to Code a simple Neural Network in 11 lines of Python</a></li> 
 <li><a href="https://iamtrask.github.io/2015/07/27/python-network-part2/">Build a Neural Network using Gradient Descent Approach</a></li> 
 <li><a href="https://heartbeat.fritz.ai/how-to-train-a-keras-model-to-generate-colors-3bc79e54971b">Train a Keras Model To Generate Colors</a></li> 
 <li><a href="https://www.pyimagesearch.com/2018/09/10/keras-tutorial-how-to-get-started-with-keras-deep-learning-and-python/">Get Started with Keras on a Custom Dataset</a></li> 
 <li><a href="https://nicholastsmith.wordpress.com/2016/02/18/eigenfaces-versus-fisherfaces-on-the-faces94-database-with-scikit-learn/">Use EigenFaces and FisherFaces on Faces94 dataset</a></li> 
 <li><a href="https://medium.com/@lvarruda/how-to-get-top-2-position-on-kaggles-mnist-digit-recognizer-48185d80a2d4">Kaggle MNIST Digit Recognizer Tutorial</a></li> 
 <li><a href="https://medium.com/tensorflow/hello-deep-learning-fashion-mnist-with-keras-50fcff8cd74a">Fashion MNIST tutorial with tf.keras</a></li> 
 <li><a href="https://www.pyimagesearch.com/2018/10/15/deep-learning-hydroponics-and-medical-marijuana/">CNN using Keras to automatically classify root health</a></li> 
 <li><a href="https://www.pyimagesearch.com/2018/10/08/keras-vs-tensorflow-which-one-is-better-and-which-one-should-i-learn/">Keras vs Tensorflow</a></li> 
 <li><a href="https://www.pyimagesearch.com/2018/12/03/deep-learning-and-medical-image-analysis-with-keras/">Deep Learning and Medical Image Analysis for Malaria Detection</a></li> 
 <li><a href="https://towardsdatascience.com/transfer-learning-for-image-classification-using-keras-c47ccf09c8c8">Transfer Learning for Image Classification using Keras</a></li> 
 <li><a href="https://github.com/kylemcdonald/SmileCNN">Code a Smile Classifier using CNNS in Python</a></li> 
 <li><a href="https://towardsdatascience.com/natural-language-processing-count-vectorization-with-scikit-learn-e7804269bb5e">Natural Language Processing using scikit-learn</a></li> 
 <li><a href="https://towardsdatascience.com/ai-generates-taylor-swifts-song-lyrics-6fd92a03ef7e">Code a Taylor Swift Lyrics Generator</a></li> 
 <li><a href="https://towardsdatascience.com/how-i-built-a-face-mask-detector-for-covid-19-using-pytorch-lightning-67eb3752fd61">Mask detection using PyTorch Lightning</a></li> 
</ul> 
<h3>Miscellaneous:</h3> 
<ul> 
 <li><a href="https://ruslanspivak.com/lsbasi-part1/">Build a Simple Interpreter</a></li> 
 <li><a href="https://hackernoon.com/learn-blockchains-by-building-one-117428612f46">Build a Simple Blockchain in Python</a></li> 
 <li><a href="https://jeffknupp.com/blog/2014/09/01/what-is-a-nosql-database-learn-by-writing-one-in-python/">Write a NoSQL Database in Python</a></li> 
 <li><a href="https://hackernoon.com/building-a-gas-pump-scanner-with-opencv-python-ios-116fe6c9ae8b">Building a Gas Pump Scanner with OpenCV/Python/iOS</a></li> 
 <li><a href="https://codequs.com/p/S14jQ5UyG/build-a-distributed-streaming-system-with-apache-kafka-and-python">Build a Distributed Streaming System with Python and Kafka</a></li> 
 <li><a href="https://csl.name/post/python-jit/">Writing a basic x86-64 JIT compiler from scratch in stock Python</a></li> 
 <li>Making a low level (Linux) debugger 
  <ul> 
   <li><a href="https://blog.asrpo.com/making_a_low_level_debugger">Part 1</a></li> 
   <li><a href="https://blog.asrpo.com/making_a_low_level_debugger_part_2">Part 2: C</a></li> 
  </ul> </li> 
 <li>Implementing a Search Engine 
  <ul> 
   <li><a href="http://www.ardendertat.com/2011/05/30/how-to-implement-a-search-engine-part-1-create-index/">Part 1</a></li> 
   <li><a href="http://www.ardendertat.com/2011/05/31/how-to-implement-a-search-engine-part-2-query-index/">Part 2</a></li> 
   <li><a href="http://www.ardendertat.com/2011/07/17/how-to-implement-a-search-engine-part-3-ranking-tf-idf/">Part 3</a></li> 
  </ul> </li> 
 <li><a href="https://robertheaton.com/2018/07/20/project-2-game-of-life/">Build the Game of Life</a></li> 
 <li><a href="https://robertheaton.com/2018/06/12/programming-projects-for-advanced-beginners-ascii-art/">Create terminal ASCII art</a></li> 
 <li><a href="https://robertheaton.com/2018/10/09/programming-projects-for-advanced-beginners-3-a/">Write a Tic-Tac-Toe AI</a></li> 
 <li><a href="https://robertheaton.com/2018/11/03/programming-project-4-photomosaics/">Create photomosaic art</a></li> 
 <li><a href="https://robertheaton.com/2018/12/02/programming-project-5-snake/">Build the game "Snake" in the terminal</a></li> 
 <li><a href="https://wyag.thb.lt/">Write yourself a Git</a></li> 
 <li><a href="https://www.aosabook.org/en/500L/a-python-interpreter-written-in-python.html">A Python implementation of a Python bytecode runner</a></li> 
 <li><a href="https://www.geeksforgeeks.org/voice-assistant-using-python/">Create a Voice assistant using Python</a></li> 
</ul> 
<h2>Go:</h2> 
<ul> 
 <li><a href="https://www.thepolyglotdeveloper.com/2016/12/create-real-time-chat-app-golang-angular-2-websockets/">Create a Real Time Chat App with Golang, Angular 2, and WebSocket</a></li> 
 <li><a href="https://semaphoreci.com/community/tutorials/building-go-web-applications-and-microservices-using-gin">Building Go Web Applications and Microservices Using Gin</a></li> 
 <li><a href="https://semaphoreci.com/community/tutorials/how-to-use-godog-for-behavior-driven-development-in-go">How to Use Godog for Behavior-driven Development in Go</a></li> 
 <li>Building Blockchain in Go 
  <ul> 
   <li><a href="https://jeiwan.net/posts/building-blockchain-in-go-part-1/">Part 1: Basic Prototype</a></li> 
   <li><a href="https://jeiwan.net/posts/building-blockchain-in-go-part-2/">Part 2: Proof of Work</a></li> 
   <li><a href="https://jeiwan.net/posts/building-blockchain-in-go-part-3/">Part 3: Persistence and CLI</a></li> 
   <li><a href="https://jeiwan.net/posts/building-blockchain-in-go-part-4/">Part 4: Transactions 1</a></li> 
   <li><a href="https://jeiwan.net/posts/building-blockchain-in-go-part-5/">Part 5: Address</a></li> 
   <li><a href="https://jeiwan.net/posts/building-blockchain-in-go-part-6/">Part 6: Transactions 2</a></li> 
   <li><a href="https://jeiwan.net/posts/building-blockchain-in-go-part-7/">Part 7: Network</a></li> 
  </ul> </li> 
 <li><a href="https://www.youtube.com/watch?v=8fi7uSYlOdc">Building a container from scratch in Go - Liz Rice (Microscaling Systems)(video)</a></li> 
 <li><a href="https://astaxie.gitbooks.io/build-web-application-with-golang/content/en/">Build Web Application with GoLang</a></li> 
 <li>Building a Chat Application in Go with ReactJS 
  <ul> 
   <li><a href="https://tutorialedge.net/projects/chat-system-in-go-and-react/part-1-initial-setup/">Part 1: Initial Setup</a></li> 
   <li><a href="https://tutorialedge.net/projects/chat-system-in-go-and-react/part-2-simple-communication/">Part 2: Simple Communication</a></li> 
   <li><a href="https://tutorialedge.net/projects/chat-system-in-go-and-react/part-3-designing-our-frontend/">Part 3: Designing our Frontend</a></li> 
   <li><a href="https://tutorialedge.net/projects/chat-system-in-go-and-react/part-4-handling-multiple-clients/">Part 4: Handling Multiple Clients</a></li> 
   <li><a href="https://tutorialedge.net/projects/chat-system-in-go-and-react/part-5-improved-frontend/">Part 5: Improving the Frontend</a></li> 
   <li><a href="https://tutorialedge.net/projects/chat-system-in-go-and-react/part-6-dockerizing-your-backend/">Part 6: Dockerizing your Backend</a></li> 
  </ul> </li> 
 <li><a href="https://tutorialedge.net/golang/go-webassembly-tutorial/">Go WebAssembly Tutorial - Building a Calculator Tutorial</a></li> 
 <li>REST Servers in Go 
  <ul> 
   <li><a href="https://eli.thegreenplace.net/2021/rest-servers-in-go-part-1-standard-library/">Part 1 - standard library</a></li> 
   <li><a href="https://eli.thegreenplace.net/2021/rest-servers-in-go-part-2-using-a-router-package/">Part 2 - using a router package</a></li> 
   <li><a href="https://eli.thegreenplace.net/2021/rest-servers-in-go-part-3-using-a-web-framework/">Part 3 - using a web framework</a></li> 
   <li><a href="https://eli.thegreenplace.net/2021/rest-servers-in-go-part-4-using-openapi-and-swagger/">Part 4 - using OpenAPI and Swagger</a></li> 
   <li><a href="https://eli.thegreenplace.net/2021/rest-servers-in-go-part-5-middleware/">Part 5 - middleware</a></li> 
   <li><a href="https://eli.thegreenplace.net/2021/rest-servers-in-go-part-6-authentication/">Part 6 - authentication</a></li> 
   <li><a href="https://eli.thegreenplace.net/2021/rest-servers-in-go-part-7-graphql/">Part 7 - GraphQL</a></li> 
  </ul> </li> 
 <li>Let's build a URL shortener in Go - with Gin &amp; Redis 
  <ul> 
   <li><a href="https://www.eddywm.com/lets-build-a-url-shortener-in-go/">Part 1 - Project setup</a></li> 
   <li><a href="https://www.eddywm.com/lets-build-a-url-shortener-in-go-with-redis-part-2-storage-layer/">Part 2 - Storage Layer</a></li> 
   <li><a href="https://www.eddywm.com/lets-build-a-url-shortener-in-go-part-3-short-link-generation/">Part 3 - Short Link Generator</a></li> 
   <li><a href="https://www.eddywm.com/lets-build-a-url-shortener-in-go-part-iv-forwarding/">Part 4 - Forwarding</a></li> 
  </ul> </li> 
 <li><a href="https://www.youtube.com/watch?v=Sphme0BqJiY">Building a TCP Chat in Go(video)</a></li> 
 <li><a href="https://blog.jse.li/posts/torrent/">Building a BitTorrent client from the ground up in Go</a></li> 
 <li><a href="https://www.youtube.com/watch?v=rx6CPDK_5mU&amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE">REST API masterclass with Go, PostgreSQL and Docker(video playlist)<code>in progress</code></a></li> 
</ul> 
<h2>PHP:</h2> 
<ul> 
 <li><a href="https://www.youtube.com/playlist?list=PLwAKR305CRO-Q90J---jXVzbOd4CDRbVx">How To Build A Blog With Laravel</a> (video)</li> 
 <li><a href="http://ilovephp.jondh.me.uk/en/tutorial/make-your-own-blog">Make Your Own Blog (in Pure PHP)</a></li> 
 <li><a href="https://www.silverstripe.org/learn/lessons/">Build A Real Estate Website Example with SilverStripe</a></li> 
 <li><a href="https://www.youtube.com/playlist?list=PLXsbBbd36_uVjOFH_P25__XAyGsohXWlv">Building Realtime Chat App with Laravel 5.4 and VueJS</a> (video)</li> 
 <li><a href="https://www.youtube.com/playlist?list=PLfdtiltiRHWGGxaR6uFtwZnnbcXqyq8JD">Build A Social Network: Laravel 5 - Youtube</a> (video)</li> 
 <li>Build a full-featured multi-tenant app with Laravel 
  <ul> 
   <li><a href="https://medium.com/@ashokgelal/writing-a-full-featured-multi-tenant-laravel-app-from-scratch-a0e1a7350d9d">Part 0: Introduction</a></li> 
   <li><a href="https://medium.com/@ashokgelal/a-full-featured-multi-tenant-app-with-laravel-part-1-4049a3cc229d">Part 1: Setup</a></li> 
   <li><a href="https://medium.com/@ashokgelal/a-full-featured-multi-tenant-app-with-laravel-part-2-roles-and-permissions-d9a5bfe5d525">Part 2: Roles and Permissinos</a></li> 
   <li><a href="https://medium.com/@ashokgelal/a-full-featured-multi-tenant-app-with-laravel-part-3-invitation-c982dca55eb9">Part 3: Invitation</a></li> 
   <li><a href="https://medium.com/@ashokgelal/a-full-featured-multi-tenant-app-with-laravel-part-4-tenancy-aware-authentication-e0ee37270bc8">Part 4: Authentication</a></li> 
   <li><a href="https://medium.com/@ashokgelal/a-full-featured-multi-tenant-app-with-laravel-part-2-unit-tests-96d6dfbf0617">Part 5: Testing</a></li> 
   <li><a href="https://medium.com/@ashokgelal/a-full-featured-multi-tenant-app-with-laravel-part-5-user-profile-5c3d0c655f3a">Part 6: User Profile</a></li> 
   <li><a href="https://medium.com/@ashokgelal/a-full-featured-multi-tenant-app-with-laravel-part-7-deployment-40bb3c895627">Part 7: Deployment</a></li> 
  </ul> </li> 
 <li><a href="https://www.codewall.co.uk/laravel-crud-demo-with-resource-controller-tutorial/">Build a Laravel CRUD Application From Scratch</a></li> 
</ul> 
<h2>OCaml:</h2> 
<ul> 
 <li><a href="https://llvm.org/docs/tutorial/#kaleidoscope-implementing-a-language-with-llvm-in-objective-caml">Implement a Language with LLVM in OCaml</a></li> 
 <li><a href="https://linoscope.github.io/writing-a-game-boy-emulator-in-ocaml/">Writing a Game Boy Emulator in OCaml</a></li> 
</ul> 
<h2>Ruby:</h2> 
<ul> 
 <li><a href="https://medium.com/geckoboard-under-the-hood/how-to-build-a-network-stack-in-ruby-f73aeb1b661b">Build a Network Stack with Ruby</a></li> 
 <li>Build your own Redis 
  <ul> 
   <li><a href="https://rohitpaulk.com/articles/redis-0">Part 0: Introduction</a></li> 
   <li><a href="https://rohitpaulk.com/articles/redis-1">Part 1: Barebones TCP Server</a></li> 
   <li><a href="https://rohitpaulk.com/articles/redis-2">Part 2: PING &lt;-&gt; PONG</a></li> 
   <li><a href="https://rohitpaulk.com/articles/redis-3">Part 3: Concurrent Clients</a></li> 
   <li><a href="https://rohitpaulk.com/articles/redis-4">Part 4: ECHO</a></li> 
  </ul> </li> 
 <li><a href="https://thoughtbot.com/blog/rebuilding-git-in-ruby">Rebuilding Git in Ruby</a></li> 
</ul> 
<h3>Ruby on Rails:</h3> 
<ul> 
 <li><a href="https://www.railstutorial.org/book">The Ruby on Rails Tutorial</a></li> 
 <li><a href="https://www.dropbox.com/s/9vq430e9s3q7pu8/Let%27s%20Build%20Instagram%20with%20Ruby%20on%20Rails%20-%20Free%20Edition.pdf?dl=0">Build Instagram From Scratch with Ruby on Rails</a></li> 
 <li><a href="https://medium.com/rails-ember-beyond/how-to-build-a-social-network-using-rails-eb31da569233">Build a Social Network using Rails</a></li> 
 <li><a href="https://www.digitalocean.com/community/tutorials/how-to-build-a-ruby-on-rails-application">How To Build a Ruby on Rails Application</a></li> 
</ul> 
<h2>Haskell:</h2> 
<ul> 
 <li><a href="http://dev.stephendiehl.com/fun/">Write You a Haskell - Build a modern functional compiler</a></li> 
 <li><a href="https://en.wikibooks.org/wiki/Write_Yourself_a_Scheme_in_48_Hours">Write Yourself a Scheme in 48 hours</a></li> 
 <li><a href="https://github.com/write-you-a-scheme-v2/scheme">Write You A Scheme, Version 2</a></li> 
 <li><a href="https://wiki.haskell.org/Roll_your_own_IRC_bot">Roll Your Own IRC Bot</a></li> 
 <li><a href="https://lettier.github.io/posts/2016-08-15-making-movie-monad.html">Making Movie Monad</a></li> 
 <li><a href="http://adit.io/posts/2013-04-15-making-a-website-with-haskell.html">Making a Website with Haskell <strong>(outdated)</strong></a></li> 
</ul> 
<h2>R:</h2> 
<ul> 
 <li><a href="http://shiny.rstudio.com/tutorial/">Build Web Apps with Shiny</a></li> 
 <li><a href="https://towardsdatascience.com/build-a-cryptocurrency-trading-bot-with-r-1445c429e1b1">Build A Cryptocurrency Bot</a></li> 
 <li><a href="https://towardsdatascience.com/association-rule-mining-in-r-ddf2d044ae50">Learn Associate Rule Mining in R</a></li> 
</ul> 
<h2>Rust:</h2> 
<ul> 
 <li>A Simple Web App in Rust 
  <ul> 
   <li><a href="http://joelmccracken.github.io/entries/a-simple-web-app-in-rust-pt-1/">Part 1</a></li> 
   <li><a href="http://joelmccracken.github.io/entries/a-simple-web-app-in-rust-pt-2a/">Part 2a</a></li> 
   <li><a href="http://joelmccracken.github.io/entries/a-simple-web-app-in-rust-pt-2b/">Part 2b</a></li> 
  </ul> </li> 
 <li><a href="https://os.phil-opp.com/">Write an OS in pure Rust</a></li> 
 <li><a href="https://limpet.net/mbrubeck/2014/08/08/toy-layout-engine-1.html">Build a browser engine in Rust</a></li> 
 <li><a href="http://www.goldsborough.me/rust/web/tutorial/2018/01/20/17-01-11-writing_a_microservice_in_rust/">Write a Microservice in Rust</a></li> 
 <li><a href="http://cglab.ca/~abeinges/blah/too-many-lists/book/README.html">Learning Rust with Too Many Linked Lists</a></li> 
 <li>Rust in Detail: Writing Scalable Chat Service from Scratch 
  <ul> 
   <li><a href="https://nbaksalyar.github.io/2015/07/10/writing-chat-in-rust.html">Part 1: Implementing WebSocket. Introduction.</a></li> 
   <li><a href="https://nbaksalyar.github.io/2015/11/09/rust-in-detail-2.html">Part 2: Sending and Receiving Messages</a></li> 
  </ul> </li> 
 <li><a href="https://aimlesslygoingforward.com/blog/2019/02/09/writing-a-rust-roguelike-for-the-desktop-and-the-web/">Writing a Rust Roguelike for the Desktop and the Web</a></li> 
 <li><a href="http://www.sheshbabu.com/posts/rust-wasm-yew-single-page-application/">Single Page Applications using Rust</a></li> 
 <li><a href="https://bugzmanov.github.io/nes_ebook/">Writing NES Emulator in Rust</a></li> 
 <li>Create a simulation of evolution using neural network and genetic algorithm, and compile the application to WebAssembly 
  <ul> 
   <li><a href="https://pwy.io/en/posts/learning-to-fly-pt1/">Part 1</a></li> 
   <li><a href="https://pwy.io/en/posts/learning-to-fly-pt2/">Part 2</a></li> 
   <li><a href="https://pwy.io/en/posts/learning-to-fly-pt3/">Part 3</a></li> 
   <li><a href="https://pwy.io/en/posts/learning-to-fly-pt4/">Part 4</a></li> 
  </ul> </li> 
</ul> 
<h2>Scala:</h2> 
<ul> 
 <li><a href="https://www.freecodecamp.org/news/how-to-build-a-simple-actor-based-blockchain-aac1e996c177/">Simple actor-based blockchain</a></li> 
 <li><a href="https://rcoh.svbtle.com/no-magic-regular-expressions">No Magic: Regular Expressions</a></li> 
</ul> 
<h2>Swift:</h2> 
<ul> 
 <li><a href="https://www.hackingwithswift.com/read">Hacking with Swift - Learn Swift by doing 39 projects</a></li> 
 <li><a href="https://github.com/nicklockwood/RetroRampage">Retro first-person shooter from scratch</a></li> 
</ul> 
<h2>Additional Resources</h2> 
<ul> 
 <li><a href="https://github.com/markerikson/react-redux-links">React Redux Links</a></li> 
 <li><a href="https://www.udemy.com/">Udemy.com</a></li> 
 <li><a href="https://www.fullstackpython.com/">Full Stack Python</a></li> 
 <li><a href="https://nodeschool.io/">Node School</a></li> 
 <li><a href="https://scotch.io/">ScotchIO</a></li> 
 <li><a href="http://www.exercism.io/">Exercism</a></li> 
 <li><a href="http://www.egghead.io/">Egghead.io</a></li> 
 <li><a href="http://mherman.org/">Michael Herman's Blog</a></li> 
 <li><a href="http://thinkster.io">Thinkster.io</a></li> 
 <li><a href="https://enlight.nyc/">Enlight</a></li> 
 <li><a href="https://hackclub.com/workshops/">Hack Club Workshops</a></li> 
 <li><a href="https://codecrafters.io/">CodeCrafters</a></li> 
</ul></description>
</item>
<item>
<title>firebase/firebase-ios-sdk</title>
<link>https://github.com/firebase/firebase-ios-sdk</link>
<description>Content Length: 15468

<p>Firebase SDK for Apple App Development</p><hr /><p align="center"> <a href="https://cocoapods.org/pods/Firebase"> <img src="https://img.shields.io/github/v/release/Firebase/firebase-ios-sdk?style=flat&amp;label=CocoaPods" /> </a> <a href="https://swiftpackageindex.com/firebase/firebase-ios-sdk"> <img src="https://img.shields.io/github/v/release/Firebase/firebase-ios-sdk?style=flat&amp;label=Swift%20Package%20Index&amp;color=red" /> </a> <a href="https://cocoapods.org/pods/Firebase"> <img src="https://img.shields.io/github/license/Firebase/firebase-ios-sdk?style=flat" /> </a><br /> <a href="https://swiftpackageindex.com/firebase/firebase-ios-sdk"> <img src="https://img.shields.io/endpoint?url=https%3A%2F%2Fswiftpackageindex.com%2Fapi%2Fpackages%2Ffirebase%2Ffirebase-ios-sdk%2Fbadge%3Ftype%3Dplatforms" /> </a> <a href="https://swiftpackageindex.com/firebase/firebase-ios-sdk"> <img src="https://img.shields.io/endpoint?url=https%3A%2F%2Fswiftpackageindex.com%2Fapi%2Fpackages%2Ffirebase%2Ffirebase-ios-sdk%2Fbadge%3Ftype%3Dswift-versions" /> </a> </p> 
<h1>Firebase Apple Open Source Development</h1> 
<p>This repository contains the source code for all Apple platform Firebase SDKs except FirebaseAnalytics.</p> 
<p>Firebase is an app development platform with tools to help you build, grow, and monetize your app. More information about Firebase can be found on the <a href="https://firebase.google.com">official Firebase website</a>.</p> 
<h2>Installation</h2> 
<p>See the subsections below for details about the different installation methods. Where available, it's recommended to install any libraries with a <code>Swift</code> suffix to get the best experience when writing your app in Swift.</p> 
<ol> 
 <li><a href="https://raw.githubusercontent.com/firebase/firebase-ios-sdk/main/#standard-pod-install">Standard pod install</a></li> 
 <li><a href="https://raw.githubusercontent.com/firebase/firebase-ios-sdk/main/#swift-package-manager">Swift Package Manager</a></li> 
 <li><a href="https://raw.githubusercontent.com/firebase/firebase-ios-sdk/main/#installing-from-github">Installing from the GitHub repo</a></li> 
 <li><a href="https://raw.githubusercontent.com/firebase/firebase-ios-sdk/main/#carthage-ios-only">Experimental Carthage</a></li> 
</ol> 
<h3>Standard pod install</h3> 
<p>For instructions on the standard pod install, visit: <a href="https://firebase.google.com/docs/ios/setup">https://firebase.google.com/docs/ios/setup</a>.</p> 
<h3>Swift Package Manager</h3> 
<p>Instructions for <a href="https://swift.org/package-manager/">Swift Package Manager</a> support can be found in the <a href="https://raw.githubusercontent.com/firebase/firebase-ios-sdk/main/SwiftPackageManager.md">SwiftPackageManager.md</a> Markdown file.</p> 
<h3>Installing from GitHub</h3> 
<p>These instructions can be used to access the Firebase repo at other branches, tags, or commits.</p> 
<h4>Background</h4> 
<p>See <a href="https://guides.cocoapods.org/syntax/podfile.html#pod">the Podfile Syntax Reference</a> for instructions and options about overriding pod source locations.</p> 
<h4>Accessing Firebase Source Snapshots</h4> 
<p>All official releases are tagged in this repo and available via CocoaPods. To access a local source snapshot or unreleased branch, use Podfile directives like the following:</p> 
<p>To access FirebaseFirestore via a branch:</p> 
<pre><code class="language-ruby">pod 'FirebaseCore', :git =&gt; 'https://github.com/firebase/firebase-ios-sdk.git', :branch =&gt; 'main'
pod 'FirebaseFirestore', :git =&gt; 'https://github.com/firebase/firebase-ios-sdk.git', :branch =&gt; 'main'
</code></pre> 
<p>To access FirebaseMessaging via a checked-out version of the firebase-ios-sdk repo:</p> 
<pre><code class="language-ruby">pod 'FirebaseCore', :path =&gt; '/path/to/firebase-ios-sdk'
pod 'FirebaseMessaging', :path =&gt; '/path/to/firebase-ios-sdk'
</code></pre> 
<h3>Carthage (iOS only)</h3> 
<p>Instructions for the experimental Carthage distribution can be found at <a href="https://raw.githubusercontent.com/firebase/firebase-ios-sdk/main/Carthage.md">Carthage.md</a>.</p> 
<h3>Using Firebase from a Framework or a library</h3> 
<p>For details on using Firebase from a Framework or a library, refer to <a href="https://raw.githubusercontent.com/firebase/firebase-ios-sdk/main/docs/firebase_in_libraries.md">firebase_in_libraries.md</a>.</p> 
<h2>Development</h2> 
<p>To develop Firebase software in this repository, ensure that you have at least the following software:</p> 
<ul> 
 <li>Xcode 14.1 (or later)</li> 
</ul> 
<p>CocoaPods is still the canonical way to develop, but much of the repo now supports development with Swift Package Manager.</p> 
<h3>CocoaPods</h3> 
<p>Install the following:</p> 
<ul> 
 <li>CocoaPods 1.12.0 (or later)</li> 
 <li><a href="https://github.com/square/cocoapods-generate">CocoaPods generate</a></li> 
</ul> 
<p>For the pod that you want to develop:</p> 
<pre><code class="language-ruby">pod gen Firebase{name here}.podspec --local-sources=./ --auto-open --platforms=ios
</code></pre> 
<p>Note: If the CocoaPods cache is out of date, you may need to run <code>pod repo update</code> before the <code>pod gen</code> command.</p> 
<p>Note: Set the <code>--platforms</code> option to <code>macos</code> or <code>tvos</code> to develop/test for those platforms. Since 10.2, Xcode does not properly handle multi-platform CocoaPods workspaces.</p> 
<p>Firestore has a self-contained Xcode project. See <a href="https://raw.githubusercontent.com/firebase/firebase-ios-sdk/main/Firestore/README.md">Firestore/README</a> Markdown file.</p> 
<h4>Development for Catalyst</h4> 
<ul> 
 <li><code>pod gen {name here}.podspec --local-sources=./ --auto-open --platforms=ios</code></li> 
 <li>Check the Mac box in the App-iOS Build Settings</li> 
 <li>Sign the App in the Settings Signing &amp; Capabilities tab</li> 
 <li>Click Pods in the Project Manager</li> 
 <li>Add Signing to the iOS host app and unit test targets</li> 
 <li>Select the Unit-unit scheme</li> 
 <li>Run it to build and test</li> 
</ul> 
<p>Alternatively, disable signing in each target:</p> 
<ul> 
 <li>Go to Build Settings tab</li> 
 <li>Click <code>+</code></li> 
 <li>Select <code>Add User-Defined Setting</code></li> 
 <li>Add <code>CODE_SIGNING_REQUIRED</code> setting with a value of <code>NO</code></li> 
</ul> 
<h3>Swift Package Manager</h3> 
<ul> 
 <li>To enable test schemes: <code>./scripts/setup_spm_tests.sh</code></li> 
 <li><code>open Package.swift</code> or double click <code>Package.swift</code> in Finder.</li> 
 <li>Xcode will open the project 
  <ul> 
   <li>Choose a scheme for a library to build or test suite to run</li> 
   <li>Choose a target platform by selecting the run destination along with the scheme</li> 
  </ul> </li> 
</ul> 
<h3>Adding a New Firebase Pod</h3> 
<p>Refer to <a href="https://raw.githubusercontent.com/firebase/firebase-ios-sdk/main/AddNewPod.md">AddNewPod</a> Markdown file for details.</p> 
<h3>Managing Headers and Imports</h3> 
<p>For information about managing headers and imports, see <a href="https://raw.githubusercontent.com/firebase/firebase-ios-sdk/main/HeadersImports.md">HeadersImports</a> Markdown file.</p> 
<h3>Code Formatting</h3> 
<p>To ensure that the code is formatted consistently, run the script <a href="https://github.com/firebase/firebase-ios-sdk/raw/main/scripts/check.sh">./scripts/check.sh</a> before creating a pull request (PR).</p> 
<p>GitHub Actions will verify that any code changes are done in a style-compliant way. Install <code>clang-format</code> and <code>mint</code>:</p> 
<pre><code class="language-console">brew install clang-format@18
brew install mint
</code></pre> 
<h3>Running Unit Tests</h3> 
<p>Select a scheme and press Command-u to build a component and run its unit tests.</p> 
<h3>Running Sample Apps</h3> 
<p>To run the sample apps and integration tests, you'll need a valid <code>GoogleService-Info.plist </code> file. The Firebase Xcode project contains dummy plist files without real values, but they can be replaced with real plist files. To get your own <code>GoogleService-Info.plist</code> files:</p> 
<ol> 
 <li>Go to the <a href="https://console.firebase.google.com/">Firebase Console</a></li> 
 <li>Create a new Firebase project, if you don't already have one</li> 
 <li>For each sample app you want to test, create a new Firebase app with the sample app's bundle identifier (e.g., <code>com.google.Database-Example</code>)</li> 
 <li>Download the resulting <code>GoogleService-Info.plist</code> and add it to the Xcode project.</li> 
</ol> 
<h3>Coverage Report Generation</h3> 
<p>For coverage report generation instructions, see <a href="https://raw.githubusercontent.com/firebase/firebase-ios-sdk/main/scripts/code_coverage_report/README.md">scripts/code_coverage_report/README</a> Markdown file.</p> 
<h2>Specific Component Instructions</h2> 
<p>See the sections below for any special instructions for those components.</p> 
<h3>Firebase Auth</h3> 
<p>For specific Firebase Auth development, refer to the <a href="https://raw.githubusercontent.com/firebase/firebase-ios-sdk/main/FirebaseAuth/Tests/Sample/README.md">Auth Sample README</a> for instructions about building and running the FirebaseAuth pod along with various samples and tests.</p> 
<h3>Firebase Database</h3> 
<p>The Firebase Database Integration tests can be run against a locally running Database Emulator or against a production instance.</p> 
<p>To run against a local emulator instance, invoke <code>./scripts/run_database_emulator.sh start</code> before running the integration test.</p> 
<p>To run against a production instance, provide a valid <code>GoogleServices-Info.plist</code> and copy it to <code>FirebaseDatabase/Tests/Resources/GoogleService-Info.plist</code>. Your Security Rule must be set to <a href="https://firebase.google.com/docs/database/security/quickstart">public</a> while your tests are running.</p> 
<h3>Firebase Dynamic Links</h3> 
<p>Firebase Dynamic Links is <strong>deprecated</strong> and should not be used in new projects. The service will shut down on August 25, 2025.</p> 
<p>Please see our <a href="https://firebase.google.com/support/dynamic-links-faq">Dynamic Links Deprecation FAQ documentation</a> for more guidance.</p> 
<h3>Firebase Performance Monitoring</h3> 
<p>For specific Firebase Performance Monitoring development, see <a href="https://raw.githubusercontent.com/firebase/firebase-ios-sdk/main/FirebasePerformance/README.md">the Performance README</a> for instructions about building the SDK and <a href="https://raw.githubusercontent.com/firebase/firebase-ios-sdk/main/FirebasePerformance/Tests/TestApp/README.md">the Performance TestApp README</a> for instructions about integrating Performance with the dev test App.</p> 
<h3>Firebase Storage</h3> 
<p>To run the Storage Integration tests, follow the instructions in <a href="https://raw.githubusercontent.com/firebase/firebase-ios-sdk/main/FirebaseStorage/Tests/Integration/StorageIntegration.swift">StorageIntegration.swift</a>.</p> 
<h4>Push Notifications</h4> 
<p>Push notifications can only be delivered to specially provisioned App IDs in the developer portal. In order to test receiving push notifications, you will need to:</p> 
<ol> 
 <li>Change the bundle identifier of the sample app to something you own in your Apple Developer account and enable that App ID for push notifications.</li> 
 <li>You'll also need to <a href="https://firebase.google.com/docs/cloud-messaging/ios/certs">upload your APNs Provider Authentication Key or certificate to the Firebase Console</a> at <strong>Project Settings &gt; Cloud Messaging &gt; [Your Firebase App]</strong>.</li> 
 <li>Ensure your iOS device is added to your Apple Developer portal as a test device.</li> 
</ol> 
<h4>iOS Simulator</h4> 
<p>The iOS Simulator cannot register for remote notifications and will not receive push notifications. To receive push notifications, follow the steps above and run the app on a physical device.</p> 
<h2>Building with Firebase on Apple platforms</h2> 
<p>Firebase provides official beta support for macOS, Catalyst, and tvOS. visionOS and watchOS are community supported. Thanks to community contributions for many of the multi-platform PRs.</p> 
<p>At this time, most of Firebase's products are available across Apple platforms. There are still a few gaps, especially on visionOS and watchOS. For details about the current support matrix, see <a href="https://firebase.google.com/docs/ios/learn-more#firebase_library_support_by_platform">this chart</a> in Firebase's documentation.</p> 
<h3>visionOS</h3> 
<p>Where supported, visionOS works as expected with the exception of Firestore via Swift Package Manager where it is required to use the source distribution.</p> 
<p>To enable the Firestore source distribution, quit Xcode and open the desired project from the command line with the <code>FIREBASE_SOURCE_FIRESTORE</code> environment variable: <code>open --env FIREBASE_SOURCE_FIRESTORE /path/to/project.xcodeproj</code>. To go back to using the binary distribution of Firestore, quit Xcode and open Xcode like normal, without the environment variable.</p> 
<h3>watchOS</h3> 
<p>Thanks to contributions from the community, many of Firebase SDKs now compile, run unit tests, and work on watchOS. See the <a href="https://raw.githubusercontent.com/firebase/firebase-ios-sdk/main/Example/watchOSSample">Independent Watch App Sample</a>.</p> 
<p>Keep in mind that watchOS is not officially supported by Firebase. While we can catch basic unit test issues with GitHub Actions, there may be some changes where the SDK no longer works as expected on watchOS. If you encounter this, please <a href="https://github.com/firebase/firebase-ios-sdk/issues">file an issue</a>.</p> 
<p>During app setup in the console, you may get to a step that mentions something like "Checking if the app has communicated with our servers". This relies on Analytics and will not work on watchOS. <strong>It's safe to ignore the message and continue</strong>, the rest of the SDKs will work as expected.</p> 
<h4>Additional Crashlytics Notes</h4> 
<ul> 
 <li>watchOS has limited support. Due to watchOS restrictions, mach exceptions and signal crashes are not recorded. (Crashes in SwiftUI are generated as mach exceptions, so will not be recorded)</li> 
</ul> 
<h2>Combine</h2> 
<p>Thanks to contributions from the community, <em>FirebaseCombineSwift</em> contains support for Apple's Combine framework. This module is currently under development and not yet supported for use in production environments. For more details, please refer to the <a href="https://raw.githubusercontent.com/firebase/firebase-ios-sdk/main/FirebaseCombineSwift/README.md">docs</a>.</p> 
<h2>Roadmap</h2> 
<p>See <a href="https://raw.githubusercontent.com/firebase/firebase-ios-sdk/main/ROADMAP.md">Roadmap</a> for more about the Firebase Apple SDK Open Source plans and directions.</p> 
<h2>Contributing</h2> 
<p>See <a href="https://raw.githubusercontent.com/firebase/firebase-ios-sdk/main/CONTRIBUTING.md">Contributing</a> for more information on contributing to the Firebase Apple SDK.</p> 
<h2>License</h2> 
<p>The contents of this repository are licensed under the <a href="http://www.apache.org/licenses/LICENSE-2.0">Apache License, version 2.0</a>.</p> 
<p>Your use of Firebase is governed by the <a href="https://firebase.google.com/terms/">Terms of Service for Firebase Services</a>.</p></description>
</item>
<item>
<title>FlagOpen/FlagEmbedding</title>
<link>https://github.com/FlagOpen/FlagEmbedding</link>
<description>Content Length: 25890

<p>Retrieval and Retrieval-augmented LLMs</p><hr /><h1 align="center">FlagEmbedding</h1> 
<p align="center"> <a href="https://github.com/FlagOpen/FlagEmbedding"> <img alt="Build" src="https://img.shields.io/badge/Contribution-Welcome-blue" /> </a> <a href="https://github.com/FlagOpen/FlagEmbedding/raw/master/LICENSE"> <img alt="License" src="https://img.shields.io/badge/LICENSE-MIT-green" /> </a> <a href="https://huggingface.co/C-MTEB"> <img alt="Build" src="https://img.shields.io/badge/C_MTEB-🤗-yellow" /> </a> <a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/FlagEmbedding/baai_general_embedding"> <img alt="Build" src="https://img.shields.io/badge/FlagEmbedding-1.1-red" /> </a> </p> 
<h4 align="center"> <p> <a href="https://raw.githubusercontent.com/FlagOpen/FlagEmbedding/master/#news">News</a> | <a href="https://raw.githubusercontent.com/FlagOpen/FlagEmbedding/master/#projects">Projects</a> | <a href="https://raw.githubusercontent.com/FlagOpen/FlagEmbedding/master/#model-list">Model List</a> | <a href="https://raw.githubusercontent.com/FlagOpen/FlagEmbedding/master/#contributor">Contributor</a> | <a href="https://raw.githubusercontent.com/FlagOpen/FlagEmbedding/master/#citation">Citation</a> | <a href="https://raw.githubusercontent.com/FlagOpen/FlagEmbedding/master/#license">License</a> </p><p> </p></h4> 
<p><a href="https://raw.githubusercontent.com/FlagOpen/FlagEmbedding/master/README.md">English</a> | <a href="https://github.com/FlagOpen/FlagEmbedding/raw/master/README_zh.md">中文</a></p> 
<p>FlagEmbedding focuses on retrieval-augmented LLMs, consisting of the following projects currently:</p> 
<ul> 
 <li><strong>Long-Context LLM</strong>: <a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/Long_LLM/activation_beacon">Activation Beacon</a></li> 
 <li><strong>Fine-tuning of LM</strong> : <a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/LM_Cocktail">LM-Cocktail</a></li> 
 <li><strong>Embedding Model</strong>: <a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/FlagEmbedding/visual">Visualized-BGE</a>, <a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/FlagEmbedding/BGE_M3">BGE-M3</a>, <a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/FlagEmbedding/llm_embedder">LLM Embedder</a>, <a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/FlagEmbedding/baai_general_embedding">BGE Embedding</a></li> 
 <li><strong>Reranker Model</strong>: <a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/FlagEmbedding/llm_reranker">llm rerankers</a>, <a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/FlagEmbedding/reranker">BGE Reranker</a></li> 
 <li><strong>Benchmark</strong>: <a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/C_MTEB">C-MTEB</a></li> 
</ul> 
<h2>News</h2> 
<ul> 
 <li>3/18/2024: Release new <a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/FlagEmbedding/llm_reranker">rerankers</a>, built upon powerful M3 and LLM (GEMMA and MiniCPM, not so large actually <span>😃</span>) backbones, supporitng multi-lingual processing and larger inputs, massive improvements of ranking performances on BEIR, C-MTEB/Retrieval, MIRACL, LlamaIndex Evaluation <span>🔥</span></li> 
 <li>3/18/2024: Release <a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/FlagEmbedding/visual">Visualized-BGE</a>, equipping BGE with visual capabilities. Visualized-BGE can be utilized to generate embeddings for hybrid image-text data. <span>🔥</span></li> 
 <li>1/30/2024: Release <strong>BGE-M3</strong>, a new member to BGE model series! M3 stands for <strong>M</strong>ulti-linguality (100+ languages), <strong>M</strong>ulti-granularities (input length up to 8192), <strong>M</strong>ulti-Functionality (unification of dense, lexical, multi-vec/colbert retrieval). It is the first embedding model which supports all three retrieval methods, achieving new SOTA on multi-lingual (MIRACL) and cross-lingual (MKQA) benchmarks. <a href="https://arxiv.org/pdf/2402.03216.pdf">Technical Report</a> and <a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/FlagEmbedding/BGE_M3">Code</a>. <span>🔥</span></li> 
 <li>1/9/2024: Release <a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/Long_LLM/activation_beacon">Activation-Beacon</a>, an effective, efficient, compatible, and low-cost (training) method to extend the context length of LLM. <a href="https://arxiv.org/abs/2401.03462">Technical Report</a></li> 
 <li>12/24/2023: Release <strong>LLaRA</strong>, a LLaMA-7B based dense retriever, leading to state-of-the-art performances on MS MARCO and BEIR. Model and code will be open-sourced. Please stay tuned. <a href="https://arxiv.org/abs/2312.15503">Technical Report</a></li> 
 <li>11/23/2023: Release <a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/LM_Cocktail">LM-Cocktail</a>, a method to maintain general capabilities during fine-tuning by merging multiple language models. <a href="https://arxiv.org/abs/2311.13534">Technical Report</a></li> 
 <li>10/12/2023: Release <a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/FlagEmbedding/llm_embedder">LLM-Embedder</a>, a unified embedding model to support diverse retrieval augmentation needs for LLMs. <a href="https://arxiv.org/pdf/2310.07554.pdf">Technical Report</a></li> 
 <li>09/15/2023: The <a href="https://arxiv.org/pdf/2309.07597.pdf">technical report</a> of BGE has been released</li> 
 <li>09/15/2023: The <a href="https://data.baai.ac.cn/details/BAAI-MTP">massive training data</a> of BGE has been released</li> 
 <li>09/12/2023: New models: 
  <ul> 
   <li><strong>New reranker model</strong>: release cross-encoder models <code>BAAI/bge-reranker-base</code> and <code>BAAI/bge-reranker-large</code>, which are more powerful than embedding model. We recommend to use/fine-tune them to re-rank top-k documents returned by embedding models.</li> 
   <li><strong>update embedding model</strong>: release <code>bge-*-v1.5</code> embedding model to alleviate the issue of the similarity distribution, and enhance its retrieval ability without instruction.</li> 
  </ul> </li> 
</ul> 
<details> 
 More 
 <!-- ### More --> 
 <ul> 
  <li>09/07/2023: Update <a href="https://github.com/FlagOpen/FlagEmbedding/raw/master/FlagEmbedding/baai_general_embedding/README.md">fine-tune code</a>: Add script to mine hard negatives and support adding instruction during fine-tuning.</li> 
  <li>08/09/2023: BGE Models are integrated into <strong>Langchain</strong>, you can use it like <a href="https://raw.githubusercontent.com/FlagOpen/FlagEmbedding/master/#using-langchain">this</a>; C-MTEB <strong>leaderboard</strong> is <a href="https://huggingface.co/spaces/mteb/leaderboard">available</a>.</li> 
  <li>08/05/2023: Release base-scale and small-scale models, <strong>best performance among the models of the same size 🤗</strong></li> 
  <li>08/02/2023: Release <code>bge-large-*</code>(short for BAAI General Embedding) Models, <strong>rank 1st on MTEB and C-MTEB benchmark!</strong> <span>🎉</span> <span>🎉</span></li> 
  <li>08/01/2023: We release the <a href="https://github.com/FlagOpen/FlagEmbedding/raw/master/C_MTEB">Chinese Massive Text Embedding Benchmark</a> (<strong>C-MTEB</strong>), consisting of 31 test dataset.</li> 
 </ul> 
</details> 
<h2>Projects</h2> 
<h3>BGE-M3(<a href="https://arxiv.org/pdf/2402.03216.pdf">Paper</a>, <a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/FlagEmbedding/BGE_M3">Code</a>)</h3> 
<p>In this project, we introduce BGE-M3, the first embedding model which supports multiple retrieval modes、multilingual and multi-granularity retrieval.</p> 
<ul> 
 <li>Multi-Functionality: It can simultaneously perform the three common retrieval functionalities of embedding model: dense retrieval, multi-vector retrieval, and sparse retrieval.</li> 
 <li>Multi-Linguality: It can support more than 100 working languages.</li> 
 <li>Multi-Granularity: It is able to process inputs of different granularities, spanning from short sentences to long documents of up to 8192 tokens.</li> 
</ul> 
<p>We propose a novel self-knowledge distillation approach to improve the performance of single retrieval mode. We optimize the batching strategy, enabling a large batch size, which can used simply when fine-tuning with long text or large language model. We also construct a dataset for document retrieval and propose a simple strategy to improve the ability to model long text. <strong>The training code and fine-tuning data will be open-sourced in the near future.</strong></p> 
<h3><a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/FlagEmbedding/visual">Visualized-BGE</a></h3> 
<p>In this project, we introduce Visualized-BGE, which integrating image token embedding into the BGE Text Embedding framework. Visualized-BGE can be used for various hybrid modal retrieval tasks, such as Multi-Modal Knowledge Retrieval, Composed Image Retrieval, and Knowledge Retrieval with Multi-Modal Queries.</p> 
<p>Our model delivers outstanding zero-shot performance across multiple hybrid modal retrieval tasks. It can also serve as a base model for downstream fine-tuning for hybrid modal retrieval tasks.</p> 
<h3><a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/Long_LLM/activation_beacon">Activation Beacon</a></h3> 
<p>The utilization of long contexts poses a big challenge for large language models due to their limited context window length. Activation Beacon condenses LLM's raw activations into more compact forms such that it can perceive a much longer context with a limited context window. It is an effective, efficient, compatible, and low-cost (training) method to extend the context length of LLM. More details please refer to our <a href="https://arxiv.org/abs/2401.03462">paper</a> and <a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/Long_LLM/activation_beacon">code</a>.</p> 
<h3><a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/LM_Cocktail">LM-Cocktail</a></h3> 
<p>Model merging has been used to improve the performance of single model. We find this method is also useful for large language models and dense embedding model, and design the LM-Cocktail strategy which automatically merges fine-tuned models and base model using a simple function to compute merging weights. LM-Cocktail can be used to improve the performance on target domain without decrease the general capabilities beyond target domain. It also can be used to generate a model for new tasks without fine-tuning. You can use it to merge the LLMs (e.g., Llama) or embedding models. More details please refer to our report: <a href="https://arxiv.org/abs/2311.13534">LM-Cocktail</a> and <a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/LM_Cocktail">code</a>.</p> 
<h3><a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/FlagEmbedding/llm_embedder">LLM Embedder</a></h3> 
<p>LLM Embedder is fine-tuned based on the feedback from LLMs. It can support the retrieval augmentation needs of large language models, including knowledge retrieval, memory retrieval, example retrieval, and tool retrieval. It is fine-tuned over 6 tasks: Question Answering, Conversational Search, Long Conversation, Long-Range Language Modeling, In-Context Learning, and Tool Learning. For more details please refer to <a href="https://arxiv.org/abs/2310.07554">report</a> and <a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/FlagEmbedding/llm_embedder">./FlagEmbedding/llm_embedder/README.md</a></p> 
<h3><a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/FlagEmbedding/reranker">BGE Reranker</a></h3> 
<p>Cross-encoder will perform full-attention over the input pair, which is more accurate than embedding model (i.e., bi-encoder) but more time-consuming than embedding model. Therefore, it can be used to re-rank the top-k documents returned by embedding model. We train the cross-encoder on a multilingual pair data, The data format is the same as embedding model, so you can fine-tune it easily following our <a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/reranker">example</a>. For more details please refer to <a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/FlagEmbedding/reranker">./FlagEmbedding/reranker/README.md</a></p> 
<p>We provide a new version of the cross-encoder that supports more languages and longer lengths. The data format is similar to our embedding models, but now includes prompt data for fine-tuning and inference. You can perform inference using specific layers or using the entire layers. You can fine-tune it easily following our <a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/FlagEmbedding/llm_reranker#fine-tune">example</a>. For more details please refer to <a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/FlagEmbedding/llm_reranker">./FlagEmbedding/llm_reranker/README.md</a>.</p> 
<h3><a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/FlagEmbedding/baai_general_embedding">BGE Embedding</a></h3> 
<p>BGE embedding is a general Embedding Model. We pre-train the models using <a href="https://github.com/staoxiao/RetroMAE">retromae</a> and train them on large-scale pair data using contrastive learning. <strong>You can fine-tune the embedding model on your data following our <a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/finetune">examples</a>.</strong> We also provide a <a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/pretrain">pre-train example</a>. Note that the goal of pre-training is to reconstruct the text, and the pre-trained model cannot be used for similarity calculation directly, it needs to be fine-tuned. Refer to our <a href="https://arxiv.org/pdf/2309.07597.pdf">report: c-pack</a> and <a href="https://github.com/FlagOpen/FlagEmbedding/raw/master/FlagEmbedding/baai_general_embedding/README.md">code</a> for more details.</p> 
<p><strong>BGE uses the last hidden state of <code>[cls]</code> as the sentence embedding: <code>sentence_embeddings = model_output[0][:, 0]</code>. If you use mean pooling, there will be a significant decrease in performance.</strong></p> 
<h3><a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/C_MTEB">C-MTEB</a></h3> 
<p>A benchmark for chinese text embedding. This benchmark has been merged into MTEB. Refer to our <a href="https://arxiv.org/pdf/2309.07597.pdf">report: c-pack</a> and <a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/C_MTEB">code</a> for more details.</p> 
<h2>Model List</h2> 
<p><code>bge</code> is short for <code>BAAI general embedding</code>.</p> 
<table> 
 <thead> 
  <tr> 
   <th align="left">Model</th> 
   <th align="center">Language</th> 
   <th align="center"></th> 
   <th align="center">Description</th> 
   <th align="center">query instruction for retrieval</th> 
  </tr> 
 </thead> 
 <tbody> 
  <tr> 
   <td align="left"><a href="https://huggingface.co/BAAI/bge-m3">BAAI/bge-m3</a></td> 
   <td align="center">Multilingual</td> 
   <td align="center"><a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/FlagEmbedding/BGE_M3#usage">Inference</a> <a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/FlagEmbedding/BGE_M3">Fine-tune</a></td> 
   <td align="center">Multi-Functionality(dense retrieval, sparse retrieval, multi-vector(colbert)), Multi-Linguality, and Multi-Granularity(8192 tokens)</td> 
   <td align="center"></td> 
  </tr> 
  <tr> 
   <td align="left"><a href="https://huggingface.co/Shitao">LM-Cocktail</a></td> 
   <td align="center">English</td> 
   <td align="center"></td> 
   <td align="center">fine-tuned models (Llama and BGE) which can be used to reproduce the results of LM-Cocktail</td> 
   <td align="center"></td> 
  </tr> 
  <tr> 
   <td align="left"><a href="https://huggingface.co/BAAI/llm-embedder">BAAI/llm-embedder</a></td> 
   <td align="center">English</td> 
   <td align="center"><a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/FlagEmbedding/llm_embedder">Inference</a> <a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/FlagEmbedding/llm_embedder">Fine-tune</a></td> 
   <td align="center">a unified embedding model to support diverse retrieval augmentation needs for LLMs</td> 
   <td align="center">See <a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/FlagEmbedding/llm_embedder">README</a></td> 
  </tr> 
  <tr> 
   <td align="left"><a href="https://huggingface.co/BAAI/bge-reranker-large">BAAI/bge-reranker-large</a></td> 
   <td align="center">Chinese and English</td> 
   <td align="center"><a href="https://raw.githubusercontent.com/FlagOpen/FlagEmbedding/master/#usage-for-reranker">Inference</a> <a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/reranker">Fine-tune</a></td> 
   <td align="center">a cross-encoder model which is more accurate but less efficient</td> 
   <td align="center"></td> 
  </tr> 
  <tr> 
   <td align="left"><a href="https://huggingface.co/BAAI/bge-reranker-base">BAAI/bge-reranker-base</a></td> 
   <td align="center">Chinese and English</td> 
   <td align="center"><a href="https://raw.githubusercontent.com/FlagOpen/FlagEmbedding/master/#usage-for-reranker">Inference</a> <a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/reranker">Fine-tune</a></td> 
   <td align="center">a cross-encoder model which is more accurate but less efficient</td> 
   <td align="center"></td> 
  </tr> 
  <tr> 
   <td align="left"><a href="https://huggingface.co/BAAI/bge-large-en-v1.5">BAAI/bge-large-en-v1.5</a></td> 
   <td align="center">English</td> 
   <td align="center"><a href="https://raw.githubusercontent.com/FlagOpen/FlagEmbedding/master/#usage-for-embedding-model">Inference</a> <a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/finetune">Fine-tune</a></td> 
   <td align="center">version 1.5 with more reasonable similarity distribution</td> 
   <td align="center"><code>Represent this sentence for searching relevant passages: </code></td> 
  </tr> 
  <tr> 
   <td align="left"><a href="https://huggingface.co/BAAI/bge-base-en-v1.5">BAAI/bge-base-en-v1.5</a></td> 
   <td align="center">English</td> 
   <td align="center"><a href="https://raw.githubusercontent.com/FlagOpen/FlagEmbedding/master/#usage-for-embedding-model">Inference</a> <a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/finetune">Fine-tune</a></td> 
   <td align="center">version 1.5 with more reasonable similarity distribution</td> 
   <td align="center"><code>Represent this sentence for searching relevant passages: </code></td> 
  </tr> 
  <tr> 
   <td align="left"><a href="https://huggingface.co/BAAI/bge-small-en-v1.5">BAAI/bge-small-en-v1.5</a></td> 
   <td align="center">English</td> 
   <td align="center"><a href="https://raw.githubusercontent.com/FlagOpen/FlagEmbedding/master/#usage-for-embedding-model">Inference</a> <a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/finetune">Fine-tune</a></td> 
   <td align="center">version 1.5 with more reasonable similarity distribution</td> 
   <td align="center"><code>Represent this sentence for searching relevant passages: </code></td> 
  </tr> 
  <tr> 
   <td align="left"><a href="https://huggingface.co/BAAI/bge-large-zh-v1.5">BAAI/bge-large-zh-v1.5</a></td> 
   <td align="center">Chinese</td> 
   <td align="center"><a href="https://raw.githubusercontent.com/FlagOpen/FlagEmbedding/master/#usage-for-embedding-model">Inference</a> <a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/finetune">Fine-tune</a></td> 
   <td align="center">version 1.5 with more reasonable similarity distribution</td> 
   <td align="center"><code>为这个句子生成表示以用于检索相关文章：</code></td> 
  </tr> 
  <tr> 
   <td align="left"><a href="https://huggingface.co/BAAI/bge-base-zh-v1.5">BAAI/bge-base-zh-v1.5</a></td> 
   <td align="center">Chinese</td> 
   <td align="center"><a href="https://raw.githubusercontent.com/FlagOpen/FlagEmbedding/master/#usage-for-embedding-model">Inference</a> <a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/finetune">Fine-tune</a></td> 
   <td align="center">version 1.5 with more reasonable similarity distribution</td> 
   <td align="center"><code>为这个句子生成表示以用于检索相关文章：</code></td> 
  </tr> 
  <tr> 
   <td align="left"><a href="https://huggingface.co/BAAI/bge-small-zh-v1.5">BAAI/bge-small-zh-v1.5</a></td> 
   <td align="center">Chinese</td> 
   <td align="center"><a href="https://raw.githubusercontent.com/FlagOpen/FlagEmbedding/master/#usage-for-embedding-model">Inference</a> <a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/finetune">Fine-tune</a></td> 
   <td align="center">version 1.5 with more reasonable similarity distribution</td> 
   <td align="center"><code>为这个句子生成表示以用于检索相关文章：</code></td> 
  </tr> 
  <tr> 
   <td align="left"><a href="https://huggingface.co/BAAI/bge-large-en">BAAI/bge-large-en</a></td> 
   <td align="center">English</td> 
   <td align="center"><a href="https://raw.githubusercontent.com/FlagOpen/FlagEmbedding/master/#usage-for-embedding-model">Inference</a> <a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/finetune">Fine-tune</a></td> 
   <td align="center">Embedding Model which map text into vector</td> 
   <td align="center"><code>Represent this sentence for searching relevant passages: </code></td> 
  </tr> 
  <tr> 
   <td align="left"><a href="https://huggingface.co/BAAI/bge-base-en">BAAI/bge-base-en</a></td> 
   <td align="center">English</td> 
   <td align="center"><a href="https://raw.githubusercontent.com/FlagOpen/FlagEmbedding/master/#usage-for-embedding-model">Inference</a> <a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/finetune">Fine-tune</a></td> 
   <td align="center">a base-scale model but with similar ability to <code>bge-large-en</code></td> 
   <td align="center"><code>Represent this sentence for searching relevant passages: </code></td> 
  </tr> 
  <tr> 
   <td align="left"><a href="https://huggingface.co/BAAI/bge-small-en">BAAI/bge-small-en</a></td> 
   <td align="center">English</td> 
   <td align="center"><a href="https://raw.githubusercontent.com/FlagOpen/FlagEmbedding/master/#usage-for-embedding-model">Inference</a> <a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/finetune">Fine-tune</a></td> 
   <td align="center">a small-scale model but with competitive performance</td> 
   <td align="center"><code>Represent this sentence for searching relevant passages: </code></td> 
  </tr> 
  <tr> 
   <td align="left"><a href="https://huggingface.co/BAAI/bge-large-zh">BAAI/bge-large-zh</a></td> 
   <td align="center">Chinese</td> 
   <td align="center"><a href="https://raw.githubusercontent.com/FlagOpen/FlagEmbedding/master/#usage-for-embedding-model">Inference</a> <a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/finetune">Fine-tune</a></td> 
   <td align="center">Embedding Model which map text into vector</td> 
   <td align="center"><code>为这个句子生成表示以用于检索相关文章：</code></td> 
  </tr> 
  <tr> 
   <td align="left"><a href="https://huggingface.co/BAAI/bge-base-zh">BAAI/bge-base-zh</a></td> 
   <td align="center">Chinese</td> 
   <td align="center"><a href="https://raw.githubusercontent.com/FlagOpen/FlagEmbedding/master/#usage-for-embedding-model">Inference</a> <a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/finetune">Fine-tune</a></td> 
   <td align="center">a base-scale model but with similar ability to <code>bge-large-zh</code></td> 
   <td align="center"><code>为这个句子生成表示以用于检索相关文章：</code></td> 
  </tr> 
  <tr> 
   <td align="left"><a href="https://huggingface.co/BAAI/bge-small-zh">BAAI/bge-small-zh</a></td> 
   <td align="center">Chinese</td> 
   <td align="center"><a href="https://raw.githubusercontent.com/FlagOpen/FlagEmbedding/master/#usage-for-embedding-model">Inference</a> <a href="https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/finetune">Fine-tune</a></td> 
   <td align="center">a small-scale model but with competitive performance</td> 
   <td align="center"><code>为这个句子生成表示以用于检索相关文章：</code></td> 
  </tr> 
 </tbody> 
</table> 
<h3>Contributors:</h3> 
<a href="https://github.com/FlagOpen/FlagEmbedding/graphs/contributors"> <img src="https://contrib.rocks/image?repo=FlagOpen/FlagEmbedding" /> </a> 
<h2>Citation</h2> 
<p>If you find this repository useful, please consider giving a star <span>⭐</span> and citation</p> 
<pre><code>@misc{bge_m3,
  title={BGE M3-Embedding: Multi-Lingual, Multi-Functionality, Multi-Granularity Text Embeddings Through Self-Knowledge Distillation},
  author={Chen, Jianlv and Xiao, Shitao and Zhang, Peitian and Luo, Kun and Lian, Defu and Liu, Zheng},
  year={2023},
  eprint={2309.07597},
  archivePrefix={arXiv},
  primaryClass={cs.CL}
}

@misc{cocktail,
      title={LM-Cocktail: Resilient Tuning of Language Models via Model Merging}, 
      author={Shitao Xiao and Zheng Liu and Peitian Zhang and Xingrun Xing},
      year={2023},
      eprint={2311.13534},
      archivePrefix={arXiv},
      primaryClass={cs.CL}
}

@misc{llm_embedder,
      title={Retrieve Anything To Augment Large Language Models}, 
      author={Peitian Zhang and Shitao Xiao and Zheng Liu and Zhicheng Dou and Jian-Yun Nie},
      year={2023},
      eprint={2310.07554},
      archivePrefix={arXiv},
      primaryClass={cs.IR}
}

@misc{bge_embedding,
      title={C-Pack: Packaged Resources To Advance General Chinese Embedding}, 
      author={Shitao Xiao and Zheng Liu and Peitian Zhang and Niklas Muennighoff},
      year={2023},
      eprint={2309.07597},
      archivePrefix={arXiv},
      primaryClass={cs.CL}
}
</code></pre> 
<h2>License</h2> 
<p>FlagEmbedding is licensed under the <a href="https://github.com/FlagOpen/FlagEmbedding/raw/master/LICENSE">MIT License</a>.</p></description>
</item>
<item>
<title>YunaiV/ruoyi-vue-pro</title>
<link>https://github.com/YunaiV/ruoyi-vue-pro</link>
<description>Content Length: 37116

<p>🔥 官方推荐 🔥 RuoYi-Vue 全新 Pro 版本，优化重构所有功能。基于 Spring Boot + MyBatis Plus + Vue & Element 实现的后台管理系统 + 微信小程序，支持 RBAC 动态权限、数据权限、SaaS 多租户、Flowable 工作流、三方登录、支付、短信、商城、CRM、ERP 等功能。你的 ⭐️ Star ⭐️，是作者生发的动力！</p><hr /><p align="center"> <img alt="Downloads" src="https://img.shields.io/badge/Spring%20Boot-2.7.18-blue.svg?sanitize=true" /> <img alt="Downloads" src="https://img.shields.io/badge/Vue-3.2-blue.svg?sanitize=true" /> <img src="https://img.shields.io/github/license/YunaiV/ruoyi-vue-pro" /> </p> 
<p><strong>严肃声明：现在、未来都不会有商业版本，所有代码全部开源!！</strong></p> 
<p><strong>「我喜欢写代码，乐此不疲」</strong><br /> <strong>「我喜欢做开源，以此为乐」</strong></p> 
<p>我 🐶 在上海艰苦奋斗，早中晚在 top3 大厂认真搬砖，夜里为开源做贡献。</p> 
<p>如果这个项目让你有所收获，记得 Star 关注哦，这对我是非常不错的鼓励与支持。</p> 
<h2>🐶 新手必读</h2> 
<ul> 
 <li>演示地址【Vue3 + element-plus】：<a href="http://dashboard-vue3.yudao.iocoder.cn">http://dashboard-vue3.yudao.iocoder.cn</a></li> 
 <li>演示地址【Vue3 + vben(ant-design-vue)】：<a href="http://dashboard-vben.yudao.iocoder.cn">http://dashboard-vben.yudao.iocoder.cn</a></li> 
 <li>演示地址【Vue2 + element-ui】：<a href="http://dashboard.yudao.iocoder.cn">http://dashboard.yudao.iocoder.cn</a></li> 
 <li>启动文档：<a href="https://doc.iocoder.cn/quick-start/">https://doc.iocoder.cn/quick-start/</a></li> 
 <li>视频教程：<a href="https://doc.iocoder.cn/video/">https://doc.iocoder.cn/video/</a></li> 
</ul> 
<h2>🐯 平台简介</h2> 
<p><strong>芋道</strong>，以开发者为中心，打造中国第一流的快速开发平台，全部开源，个人与企业可 100% 免费使用。</p> 
<blockquote> 
 <p>有任何问题，或者想要的功能，可以在 <em>Issues</em> 中提给艿艿。</p> 
 <p>😜 给项目点点 Star 吧，这对我们真的很重要！</p> 
</blockquote> 
<p><img alt="架构图" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/common/ruoyi-vue-pro-architecture.png" /></p> 
<ul> 
 <li>Java 后端：<code>master</code> 分支为 JDK 8 + Spring Boot 2.7.18，<code>master-jdk21</code> 分支为 JDK21 + Spring Boot 3.2.0</li> 
 <li>管理后台的电脑端：Vue3 提供 <code>element-plus</code>、<code>vben(ant-design-vue)</code> 两个版本，Vue2 提供 <code>element-ui</code> 版本</li> 
 <li>管理后台的移动端：采用 <code>uni-app</code> 方案，一份代码多终端适配，同时支持 APP、小程序、H5！</li> 
 <li>后端采用 Spring Boot 多模块架构、MySQL + MyBatis Plus、Redis + Redisson</li> 
 <li>数据库可使用 MySQL、Oracle、PostgreSQL、SQL Server、MariaDB、国产达梦 DM、TiDB 等</li> 
 <li>消息队列可使用 Event、Redis、RabbitMQ、Kafka、RocketMQ 等</li> 
 <li>权限认证使用 Spring Security &amp; Token &amp; Redis，支持多终端、多种用户的认证系统，支持 SSO 单点登录</li> 
 <li>支持加载动态权限菜单，按钮级别权限控制，Redis 缓存提升性能</li> 
 <li>支持 SaaS 多租户，可自定义每个租户的权限，提供透明化的多租户底层封装</li> 
 <li>工作流使用 Flowable，支持动态表单、在线设计流程、会签 / 或签、多种任务分配方式</li> 
 <li>高效率开发，使用代码生成器可以一键生成 Java、Vue 前后端代码、SQL 脚本、接口文档，支持单表、树表、主子表</li> 
 <li>实时通信，采用 Spring WebSocket 实现，内置 Token 身份校验，支持 WebSocket 集群</li> 
 <li>集成微信小程序、微信公众号、企业微信、钉钉等三方登陆，集成支付宝、微信等支付与退款</li> 
 <li>集成阿里云、腾讯云等短信渠道，集成 MinIO、阿里云、腾讯云、七牛云等云存储服务</li> 
 <li>集成报表设计器、大屏设计器，通过拖拽即可生成酷炫的报表与大屏</li> 
</ul> 
<h2>🐳 项目关系</h2> 
<p><img alt="架构演进" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/common/yudao-roadmap.png" /></p> 
<p>三个项目的功能对比，可见社区共同整理的 <a href="https://www.yuque.com/xiatian-bsgny/lm0ec1/wqf8mn">国产开源项目对比</a> 表格。</p> 
<h3>后端项目</h3> 
<table> 
 <thead> 
  <tr> 
   <th>项目</th> 
   <th>Star</th> 
   <th>简介</th> 
  </tr> 
 </thead> 
 <tbody> 
  <tr> 
   <td><a href="https://gitee.com/zhijiantianya/ruoyi-vue-pro">ruoyi-vue-pro</a></td> 
   <td><a href="https://gitee.com/zhijiantianya/ruoyi-vue-pro"><img alt="Gitee star" src="https://gitee.com/zhijiantianya/ruoyi-vue-pro/badge/star.svg?theme=white" /></a> <a href="https://github.com/YunaiV/ruoyi-vue-pro"><img alt="GitHub stars" src="https://img.shields.io/github/stars/YunaiV/ruoyi-vue-pro.svg?style=social&amp;label=Stars" /></a></td> 
   <td>基于 Spring Boot 多模块架构</td> 
  </tr> 
  <tr> 
   <td><a href="https://gitee.com/zhijiantianya/yudao-cloud">yudao-cloud</a></td> 
   <td><a href="https://gitee.com/zhijiantianya/yudao-cloud"><img alt="Gitee star" src="https://gitee.com/zhijiantianya/yudao-cloud/badge/star.svg?theme=white" /></a> <a href="https://github.com/YunaiV/yudao-cloud"><img alt="GitHub stars" src="https://img.shields.io/github/stars/YunaiV/yudao-cloud.svg?style=social&amp;label=Stars" /></a></td> 
   <td>基于 Spring Cloud 微服务架构</td> 
  </tr> 
  <tr> 
   <td><a href="https://gitee.com/yudaocode/SpringBoot-Labs">Spring-Boot-Labs</a></td> 
   <td><a href="https://gitee.com/zhijiantianya/yudao-cloud"><img alt="Gitee star" src="https://gitee.com/yudaocode/SpringBoot-Labs/badge/star.svg?theme=white" /></a> <a href="https://github.com/yudaocode/SpringBoot-Labs"><img alt="GitHub stars" src="https://img.shields.io/github/stars/yudaocode/SpringBoot-Labs.svg?style=social&amp;label=Stars" /></a></td> 
   <td>系统学习 Spring Boot &amp; Cloud 专栏</td> 
  </tr> 
 </tbody> 
</table> 
<h3>前端项目</h3> 
<table> 
 <thead> 
  <tr> 
   <th>项目</th> 
   <th>Star</th> 
   <th>简介</th> 
  </tr> 
 </thead> 
 <tbody> 
  <tr> 
   <td><a href="https://gitee.com/yudaocode/yudao-ui-admin-vue3">yudao-ui-admin-vue3</a></td> 
   <td><a href="https://gitee.com/yudaocode/yudao-ui-admin-vue3"><img alt="Gitee star" src="https://gitee.com/yudaocode/yudao-ui-admin-vue3/badge/star.svg?theme=white" /></a> <a href="https://github.com/yudaocode/yudao-ui-admin-vue3"><img alt="GitHub stars" src="https://img.shields.io/github/stars/yudaocode/yudao-ui-admin-vue3.svg?style=social&amp;label=Stars" /></a></td> 
   <td>基于 Vue3 + element-plus 实现的管理后台</td> 
  </tr> 
  <tr> 
   <td><a href="https://gitee.com/yudaocode/yudao-ui-admin-vben">yudao-ui-admin-vben</a></td> 
   <td><a href="https://gitee.com/yudaocode/yudao-ui-admin-vben"><img alt="Gitee star" src="https://gitee.com/yudaocode/yudao-ui-admin-vben/badge/star.svg?theme=white" /></a> <a href="https://github.com/yudaocode/yudao-ui-admin-vben"><img alt="GitHub stars" src="https://img.shields.io/github/stars/yudaocode/yudao-ui-admin-vben.svg?style=social&amp;label=Stars" /></a></td> 
   <td>基于 Vue3 + vben(ant-design-vue) 实现的管理后台</td> 
  </tr> 
  <tr> 
   <td><a href="https://gitee.com/yudaocode/yudao-mall-uniapp">yudao-mall-uniapp</a></td> 
   <td><a href="https://gitee.com/yudaocode/yudao-mall-uniapp"><img alt="Gitee star" src="https://gitee.com/yudaocode/yudao-mall-uniapp/badge/star.svg?theme=white" /></a> <a href="https://github.com/yudaocode/yudao-mall-uniapp"><img alt="GitHub stars" src="https://img.shields.io/github/stars/yudaocode/yudao-mall-uniapp.svg?style=social&amp;label=Stars" /></a></td> 
   <td>基于 uni-app 实现的商城小程序</td> 
  </tr> 
  <tr> 
   <td><a href="https://gitee.com/yudaocode/yudao-ui-admin-vue2">yudao-ui-admin-vue2</a></td> 
   <td><a href="https://gitee.com/yudaocode/yudao-ui-admin-vue2"><img alt="Gitee star" src="https://gitee.com/yudaocode/yudao-ui-admin-vue2/badge/star.svg?theme=white" /></a> <a href="https://github.com/yudaocode/yudao-ui-admin-vue2"><img alt="GitHub stars" src="https://img.shields.io/github/stars/yudaocode/yudao-ui-admin-vue2.svg?style=social&amp;label=Stars" /></a></td> 
   <td>基于 Vue2 + element-ui 实现的管理后台</td> 
  </tr> 
  <tr> 
   <td><a href="https://gitee.com/yudaocode/yudao-ui-admin-uniapp">yudao-ui-admin-uniapp</a></td> 
   <td><a href="https://gitee.com/yudaocode/yudao-ui-admin-uniapp"><img alt="Gitee star" src="https://gitee.com/yudaocode/yudao-ui-admin-uniapp/badge/star.svg?theme=white" /></a> <a href="https://github.com/yudaocode/yudao-ui-admin-uniapp"><img alt="GitHub stars" src="https://img.shields.io/github/stars/yudaocode/yudao-ui-admin-uniapp.svg?style=social&amp;label=Stars" /></a></td> 
   <td>基于 Vue2 + element-ui 实现的管理后台</td> 
  </tr> 
  <tr> 
   <td><a href="https://gitee.com/yudaocode/yudao-ui-go-view">yudao-ui-go-view</a></td> 
   <td><a href="https://gitee.com/yudaocode/yudao-ui-go-view"><img alt="Gitee star" src="https://gitee.com/yudaocode/yudao-ui-go-view/badge/star.svg?theme=white" /></a> <a href="https://github.com/yudaocode/yudao-ui-go-view"><img alt="GitHub stars" src="https://img.shields.io/github/stars/yudaocode/yudao-ui-go-view.svg?style=social&amp;label=Stars" /></a></td> 
   <td>基于 Vue3 + naive-ui 实现的大屏报表</td> 
  </tr> 
 </tbody> 
</table> 
<h2>🐰 分支说明</h2> 
<h3>⬅️ 完整版</h3> 
<p>【完整版】包括系统功能、基础设施、会员中心、数据报表、工作流程、商城系统、微信公众号、CRM 等功能</p> 
<ul> 
 <li>JDK 8 + Spring Boot 2.7.18 版本：<a href="https://gitee.com/zhijiantianya/ruoyi-vue-pro">https://gitee.com/zhijiantianya/ruoyi-vue-pro</a> 的 <code>master</code> 分支</li> 
 <li>JDK 21 + Spring Boot 3.2.0 版本：<a href="https://gitee.com/zhijiantianya/ruoyi-vue-pro">https://gitee.com/zhijiantianya/ruoyi-vue-pro</a> 的 <code>master-jdk21</code> 分支</li> 
</ul> 
<p>两个分支的功能是一致的，可以放心使用！</p> 
<h3>➡️️ 精简版</h3> 
<p>【精简版】只包括系统功能、基础设施功能，不包括会员中心、数据报表、工作流程、商城系统、微信公众号、CRM 等功能</p> 
<ul> 
 <li>JDK 8 + Spring Boot 2.7.18 版本：<a href="https://gitee.com/yudaocode/yudao-boot-mini">https://gitee.com/yudaocode/yudao-boot-mini</a> 的 <code>master</code> 分支</li> 
 <li>JDK 21 + Spring Boot 3.2.0 版本：<a href="https://gitee.com/yudaocode/yudao-boot-mini">https://gitee.com/yudaocode/yudao-boot-mini</a> 的 <code>master-jdk21</code> 分支</li> 
</ul> 
<p>如果你想把【完整版】的功能，迁移到【精简版】，可以参考 <a href="https://doc.iocoder.cn/migrate-module/">《迁移功能到精简版》</a> 文档。</p> 
<p>如果你想把【完整版】的功能，迁移到【精简版】，可以参考 <a href="https://doc.iocoder.cn/migrate-module/">《迁移功能到精简版》</a> 文档。</p> 
<h2>😎 开源协议</h2> 
<p><strong>为什么推荐使用本项目？</strong></p> 
<p>① 本项目采用比 Apache 2.0 更宽松的 <a href="https://gitee.com/zhijiantianya/ruoyi-vue-pro/blob/master/LICENSE">MIT License</a> 开源协议，个人与企业可 100% 免费使用，不用保留类作者、Copyright 信息。</p> 
<p>② 代码全部开源，不会像其他项目一样，只开源部分代码，让你无法了解整个项目的架构设计。<a href="https://www.yuque.com/xiatian-bsgny/lm0ec1/wqf8mn">国产开源项目对比</a></p> 
<p><img alt="开源项目对比" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/common/project-vs.png" /></p> 
<p>③ 代码整洁、架构整洁，遵循《阿里巴巴 Java 开发手册》规范，代码注释详细，113770 行 Java 代码，42462 行代码注释。</p> 
<h2>🤝 项目外包</h2> 
<p>我们也是接外包滴，如果你有项目想要外包，可以微信联系【<strong>Aix9975</strong>】。</p> 
<p>团队包含专业的项目经理、架构师、前端工程师、后端工程师、测试工程师、运维工程师，可以提供全流程的外包服务。</p> 
<p>项目可以是商城、SCRM 系统、OA 系统、物流系统、ERP 系统、CMS 系统、HIS 系统、支付系统、IM 聊天、微信公众号、微信小程序等等。</p> 
<h2>🐼 内置功能</h2> 
<p>系统内置多种多种业务功能，可以用于快速你的业务系统：</p> 
<p><img alt="功能分层" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/common/ruoyi-vue-pro-biz.png" /></p> 
<ul> 
 <li>系统功能</li> 
 <li>基础设施</li> 
 <li>工作流程</li> 
 <li>支付系统</li> 
 <li>会员中心</li> 
 <li>数据报表</li> 
 <li>商城系统</li> 
 <li>微信公众号</li> 
 <li>ERP 系统</li> 
 <li>CRM 系统</li> 
</ul> 
<blockquote> 
 <p>友情提示：本项目基于 RuoYi-Vue 修改，<strong>重构优化</strong>后端的代码，<strong>美化</strong>前端的界面。</p> 
 <ul> 
  <li>额外新增的功能，我们使用 🚀 标记。</li> 
  <li>重新实现的功能，我们使用 ⭐️ 标记。</li> 
 </ul> 
</blockquote> 
<p>🙂 所有功能，都通过 <strong>单元测试</strong> 保证高质量。</p> 
<h3>系统功能</h3> 
<table> 
 <thead> 
  <tr> 
   <th></th> 
   <th>功能</th> 
   <th>描述</th> 
  </tr> 
 </thead> 
 <tbody> 
  <tr> 
   <td></td> 
   <td>用户管理</td> 
   <td>用户是系统操作者，该功能主要完成系统用户配置</td> 
  </tr> 
  <tr> 
   <td>⭐️</td> 
   <td>在线用户</td> 
   <td>当前系统中活跃用户状态监控，支持手动踢下线</td> 
  </tr> 
  <tr> 
   <td></td> 
   <td>角色管理</td> 
   <td>角色菜单权限分配、设置角色按机构进行数据范围权限划分</td> 
  </tr> 
  <tr> 
   <td></td> 
   <td>菜单管理</td> 
   <td>配置系统菜单、操作权限、按钮权限标识等，本地缓存提供性能</td> 
  </tr> 
  <tr> 
   <td></td> 
   <td>部门管理</td> 
   <td>配置系统组织机构（公司、部门、小组），树结构展现支持数据权限</td> 
  </tr> 
  <tr> 
   <td></td> 
   <td>岗位管理</td> 
   <td>配置系统用户所属担任职务</td> 
  </tr> 
  <tr> 
   <td>🚀</td> 
   <td>租户管理</td> 
   <td>配置系统租户，支持 SaaS 场景下的多租户功能</td> 
  </tr> 
  <tr> 
   <td>🚀</td> 
   <td>租户套餐</td> 
   <td>配置租户套餐，自定每个租户的菜单、操作、按钮的权限</td> 
  </tr> 
  <tr> 
   <td></td> 
   <td>字典管理</td> 
   <td>对系统中经常使用的一些较为固定的数据进行维护</td> 
  </tr> 
  <tr> 
   <td>🚀</td> 
   <td>短信管理</td> 
   <td>短信渠道、短息模板、短信日志，对接阿里云、腾讯云等主流短信平台</td> 
  </tr> 
  <tr> 
   <td>🚀</td> 
   <td>邮件管理</td> 
   <td>邮箱账号、邮件模版、邮件发送日志，支持所有邮件平台</td> 
  </tr> 
  <tr> 
   <td>🚀</td> 
   <td>站内信</td> 
   <td>系统内的消息通知，提供站内信模版、站内信消息</td> 
  </tr> 
  <tr> 
   <td>🚀</td> 
   <td>操作日志</td> 
   <td>系统正常操作日志记录和查询，集成 Swagger 生成日志内容</td> 
  </tr> 
  <tr> 
   <td>⭐️</td> 
   <td>登录日志</td> 
   <td>系统登录日志记录查询，包含登录异常</td> 
  </tr> 
  <tr> 
   <td>🚀</td> 
   <td>错误码管理</td> 
   <td>系统所有错误码的管理，可在线修改错误提示，无需重启服务</td> 
  </tr> 
  <tr> 
   <td></td> 
   <td>通知公告</td> 
   <td>系统通知公告信息发布维护</td> 
  </tr> 
  <tr> 
   <td>🚀</td> 
   <td>敏感词</td> 
   <td>配置系统敏感词，支持标签分组</td> 
  </tr> 
  <tr> 
   <td>🚀</td> 
   <td>应用管理</td> 
   <td>管理 SSO 单点登录的应用，支持多种 OAuth2 授权方式</td> 
  </tr> 
  <tr> 
   <td>🚀</td> 
   <td>地区管理</td> 
   <td>展示省份、城市、区镇等城市信息，支持 IP 对应城市</td> 
  </tr> 
 </tbody> 
</table> 
<h3>工作流程</h3> 
<table> 
 <thead> 
  <tr> 
   <th></th> 
   <th>功能</th> 
   <th>描述</th> 
  </tr> 
 </thead> 
 <tbody> 
  <tr> 
   <td>🚀</td> 
   <td>流程模型</td> 
   <td>配置工作流的流程模型，支持文件导入与在线设计流程图，提供 7 种任务分配规则</td> 
  </tr> 
  <tr> 
   <td>🚀</td> 
   <td>流程表单</td> 
   <td>拖动表单元素生成相应的工作流表单，覆盖 Element UI 所有的表单组件</td> 
  </tr> 
  <tr> 
   <td>🚀</td> 
   <td>用户分组</td> 
   <td>自定义用户分组，可用于工作流的审批分组</td> 
  </tr> 
  <tr> 
   <td>🚀</td> 
   <td>我的流程</td> 
   <td>查看我发起的工作流程，支持新建、取消流程等操作，高亮流程图、审批时间线</td> 
  </tr> 
  <tr> 
   <td>🚀</td> 
   <td>待办任务</td> 
   <td>查看自己【未】审批的工作任务，支持通过、不通过、转发、委派、退回等操作</td> 
  </tr> 
  <tr> 
   <td>🚀</td> 
   <td>已办任务</td> 
   <td>查看自己【已】审批的工作任务，未来会支持回退操作</td> 
  </tr> 
  <tr> 
   <td>🚀</td> 
   <td>OA 请假</td> 
   <td>作为业务自定义接入工作流的使用示例，只需创建请求对应的工作流程，即可进行审批</td> 
  </tr> 
 </tbody> 
</table> 
<h3>支付系统</h3> 
<table> 
 <thead> 
  <tr> 
   <th></th> 
   <th>功能</th> 
   <th>描述</th> 
  </tr> 
 </thead> 
 <tbody> 
  <tr> 
   <td>🚀</td> 
   <td>应用信息</td> 
   <td>配置商户的应用信息，对接支付宝、微信等多个支付渠道</td> 
  </tr> 
  <tr> 
   <td>🚀</td> 
   <td>支付订单</td> 
   <td>查看用户发起的支付宝、微信等的【支付】订单</td> 
  </tr> 
  <tr> 
   <td>🚀</td> 
   <td>退款订单</td> 
   <td>查看用户发起的支付宝、微信等的【退款】订单</td> 
  </tr> 
  <tr> 
   <td>🚀</td> 
   <td>回调通知</td> 
   <td>查看支付回调业务的【支付】【退款】的通知结果</td> 
  </tr> 
  <tr> 
   <td>🚀</td> 
   <td>接入示例</td> 
   <td>提供接入支付系统的【支付】【退款】的功能实战</td> 
  </tr> 
 </tbody> 
</table> 
<h3>基础设施</h3> 
<table> 
 <thead> 
  <tr> 
   <th></th> 
   <th>功能</th> 
   <th>描述</th> 
  </tr> 
 </thead> 
 <tbody> 
  <tr> 
   <td>🚀</td> 
   <td>代码生成</td> 
   <td>前后端代码的生成（Java、Vue、SQL、单元测试），支持 CRUD 下载</td> 
  </tr> 
  <tr> 
   <td>🚀</td> 
   <td>系统接口</td> 
   <td>基于 Swagger 自动生成相关的 RESTful API 接口文档</td> 
  </tr> 
  <tr> 
   <td>🚀</td> 
   <td>数据库文档</td> 
   <td>基于 Screw 自动生成数据库文档，支持导出 Word、HTML、MD 格式</td> 
  </tr> 
  <tr> 
   <td></td> 
   <td>表单构建</td> 
   <td>拖动表单元素生成相应的 HTML 代码，支持导出 JSON、Vue 文件</td> 
  </tr> 
  <tr> 
   <td>🚀</td> 
   <td>配置管理</td> 
   <td>对系统动态配置常用参数，支持 SpringBoot 加载</td> 
  </tr> 
  <tr> 
   <td>⭐️</td> 
   <td>定时任务</td> 
   <td>在线（添加、修改、删除)任务调度包含执行结果日志</td> 
  </tr> 
  <tr> 
   <td>🚀</td> 
   <td>文件服务</td> 
   <td>支持将文件存储到 S3（MinIO、阿里云、腾讯云、七牛云）、本地、FTP、数据库等</td> 
  </tr> 
  <tr> 
   <td>🚀</td> 
   <td>WebSocket</td> 
   <td>提供 WebSocket 接入示例，支持一对一、一对多发送方式</td> 
  </tr> 
  <tr> 
   <td>🚀</td> 
   <td>API 日志</td> 
   <td>包括 RESTful API 访问日志、异常日志两部分，方便排查 API 相关的问题</td> 
  </tr> 
  <tr> 
   <td></td> 
   <td>MySQL 监控</td> 
   <td>监视当前系统数据库连接池状态，可进行分析SQL找出系统性能瓶颈</td> 
  </tr> 
  <tr> 
   <td></td> 
   <td>Redis 监控</td> 
   <td>监控 Redis 数据库的使用情况，使用的 Redis Key 管理</td> 
  </tr> 
  <tr> 
   <td>🚀</td> 
   <td>消息队列</td> 
   <td>基于 Redis 实现消息队列，Stream 提供集群消费，Pub/Sub 提供广播消费</td> 
  </tr> 
  <tr> 
   <td>🚀</td> 
   <td>Java 监控</td> 
   <td>基于 Spring Boot Admin 实现 Java 应用的监控</td> 
  </tr> 
  <tr> 
   <td>🚀</td> 
   <td>链路追踪</td> 
   <td>接入 SkyWalking 组件，实现链路追踪</td> 
  </tr> 
  <tr> 
   <td>🚀</td> 
   <td>日志中心</td> 
   <td>接入 SkyWalking 组件，实现日志中心</td> 
  </tr> 
  <tr> 
   <td>🚀</td> 
   <td>分布式锁</td> 
   <td>基于 Redis 实现分布式锁，满足并发场景</td> 
  </tr> 
  <tr> 
   <td>🚀</td> 
   <td>幂等组件</td> 
   <td>基于 Redis 实现幂等组件，解决重复请求问题</td> 
  </tr> 
  <tr> 
   <td>🚀</td> 
   <td>服务保障</td> 
   <td>基于 Resilience4j 实现服务的稳定性，包括限流、熔断等功能</td> 
  </tr> 
  <tr> 
   <td>🚀</td> 
   <td>日志服务</td> 
   <td>轻量级日志中心，查看远程服务器的日志</td> 
  </tr> 
  <tr> 
   <td>🚀</td> 
   <td>单元测试</td> 
   <td>基于 JUnit + Mockito 实现单元测试，保证功能的正确性、代码的质量等</td> 
  </tr> 
 </tbody> 
</table> 
<h3>数据报表</h3> 
<table> 
 <thead> 
  <tr> 
   <th></th> 
   <th>功能</th> 
   <th>描述</th> 
  </tr> 
 </thead> 
 <tbody> 
  <tr> 
   <td>🚀</td> 
   <td>报表设计器</td> 
   <td>支持数据报表、图形报表、打印设计等</td> 
  </tr> 
  <tr> 
   <td>🚀</td> 
   <td>大屏设计器</td> 
   <td>拖拽生成数据大屏，内置几十种图表组件</td> 
  </tr> 
 </tbody> 
</table> 
<h3>微信公众号</h3> 
<table> 
 <thead> 
  <tr> 
   <th></th> 
   <th>功能</th> 
   <th>描述</th> 
  </tr> 
 </thead> 
 <tbody> 
  <tr> 
   <td>🚀</td> 
   <td>账号管理</td> 
   <td>配置接入的微信公众号，可支持多个公众号</td> 
  </tr> 
  <tr> 
   <td>🚀</td> 
   <td>数据统计</td> 
   <td>统计公众号的用户增减、累计用户、消息概况、接口分析等数据</td> 
  </tr> 
  <tr> 
   <td>🚀</td> 
   <td>粉丝管理</td> 
   <td>查看已关注、取关的粉丝列表，可对粉丝进行同步、打标签等操作</td> 
  </tr> 
  <tr> 
   <td>🚀</td> 
   <td>消息管理</td> 
   <td>查看粉丝发送的消息列表，可主动回复粉丝消息</td> 
  </tr> 
  <tr> 
   <td>🚀</td> 
   <td>自动回复</td> 
   <td>自动回复粉丝发送的消息，支持关注回复、消息回复、关键字回复</td> 
  </tr> 
  <tr> 
   <td>🚀</td> 
   <td>标签管理</td> 
   <td>对公众号的标签进行创建、查询、修改、删除等操作</td> 
  </tr> 
  <tr> 
   <td>🚀</td> 
   <td>菜单管理</td> 
   <td>自定义公众号的菜单，也可以从公众号同步菜单</td> 
  </tr> 
  <tr> 
   <td>🚀</td> 
   <td>素材管理</td> 
   <td>管理公众号的图片、语音、视频等素材，支持在线播放语音、视频</td> 
  </tr> 
  <tr> 
   <td>🚀</td> 
   <td>图文草稿箱</td> 
   <td>新增常用的图文素材到草稿箱，可发布到公众号</td> 
  </tr> 
  <tr> 
   <td>🚀</td> 
   <td>图文发表记录</td> 
   <td>查看已发布成功的图文素材，支持删除操作</td> 
  </tr> 
 </tbody> 
</table> 
<h3>商城系统</h3> 
<p><img alt="功能图" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/common/mall-feature.png" /></p> 
<p><img alt="功能图" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/common/mall-preview.png" /></p> 
<p>演示地址：<a href="https://doc.iocoder.cn/mall-preview/">https://doc.iocoder.cn/mall-preview/</a></p> 
<h3>会员中心</h3> 
<table> 
 <thead> 
  <tr> 
   <th></th> 
   <th>功能</th> 
   <th>描述</th> 
  </tr> 
 </thead> 
 <tbody> 
  <tr> 
   <td>🚀</td> 
   <td>会员管理</td> 
   <td>会员是 C 端的消费者，该功能用于会员的搜索与管理</td> 
  </tr> 
  <tr> 
   <td>🚀</td> 
   <td>会员标签</td> 
   <td>对会员的标签进行创建、查询、修改、删除等操作</td> 
  </tr> 
  <tr> 
   <td>🚀</td> 
   <td>会员等级</td> 
   <td>对会员的等级、成长值进行管理，可用于订单折扣等会员权益</td> 
  </tr> 
  <tr> 
   <td>🚀</td> 
   <td>会员分组</td> 
   <td>对会员进行分组，用于用户画像、内容推送等运营手段</td> 
  </tr> 
  <tr> 
   <td>🚀</td> 
   <td>积分签到</td> 
   <td>回馈给签到、消费等行为的积分，会员可订单抵现、积分兑换等途径消耗</td> 
  </tr> 
 </tbody> 
</table> 
<h3>ERP 系统</h3> 
<p><img alt="功能图" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/common/erp-feature.png" /></p> 
<p>演示地址：<a href="https://doc.iocoder.cn/erp-preview/">https://doc.iocoder.cn/erp-preview/</a></p> 
<h3>CRM 系统</h3> 
<p><img alt="功能图" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/common/crm-feature.png" /></p> 
<p>演示地址：<a href="https://doc.iocoder.cn/crm-preview/">https://doc.iocoder.cn/crm-preview/</a></p> 
<h2>🐨 技术栈</h2> 
<h3>模块</h3> 
<table> 
 <thead> 
  <tr> 
   <th>项目</th> 
   <th>说明</th> 
  </tr> 
 </thead> 
 <tbody> 
  <tr> 
   <td><code>yudao-dependencies</code></td> 
   <td>Maven 依赖版本管理</td> 
  </tr> 
  <tr> 
   <td><code>yudao-framework</code></td> 
   <td>Java 框架拓展</td> 
  </tr> 
  <tr> 
   <td><code>yudao-server</code></td> 
   <td>管理后台 + 用户 APP 的服务端</td> 
  </tr> 
  <tr> 
   <td><code>yudao-module-system</code></td> 
   <td>系统功能的 Module 模块</td> 
  </tr> 
  <tr> 
   <td><code>yudao-module-member</code></td> 
   <td>会员中心的 Module 模块</td> 
  </tr> 
  <tr> 
   <td><code>yudao-module-infra</code></td> 
   <td>基础设施的 Module 模块</td> 
  </tr> 
  <tr> 
   <td><code>yudao-module-bpm</code></td> 
   <td>工作流程的 Module 模块</td> 
  </tr> 
  <tr> 
   <td><code>yudao-module-pay</code></td> 
   <td>支付系统的 Module 模块</td> 
  </tr> 
  <tr> 
   <td><code>yudao-module-mall</code></td> 
   <td>商城系统的 Module 模块</td> 
  </tr> 
  <tr> 
   <td><code>yudao-module-erp</code></td> 
   <td>ERP 系统的 Module 模块</td> 
  </tr> 
  <tr> 
   <td><code>yudao-module-crm</code></td> 
   <td>CRM 系统的 Module 模块</td> 
  </tr> 
  <tr> 
   <td><code>yudao-module-mp</code></td> 
   <td>微信公众号的 Module 模块</td> 
  </tr> 
  <tr> 
   <td><code>yudao-module-report</code></td> 
   <td>大屏报表 Module 模块</td> 
  </tr> 
 </tbody> 
</table> 
<h3>框架</h3> 
<table> 
 <thead> 
  <tr> 
   <th>框架</th> 
   <th>说明</th> 
   <th>版本</th> 
   <th>学习指南</th> 
  </tr> 
 </thead> 
 <tbody> 
  <tr> 
   <td><a href="https://spring.io/projects/spring-boot">Spring Boot</a></td> 
   <td>应用开发框架</td> 
   <td>2.7.18</td> 
   <td><a href="https://github.com/YunaiV/SpringBoot-Labs">文档</a></td> 
  </tr> 
  <tr> 
   <td><a href="https://www.mysql.com/cn/">MySQL</a></td> 
   <td>数据库服务器</td> 
   <td>5.7 / 8.0+</td> 
   <td></td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/alibaba/druid">Druid</a></td> 
   <td>JDBC 连接池、监控组件</td> 
   <td>1.2.19</td> 
   <td><a href="http://www.iocoder.cn/Spring-Boot/datasource-pool/?yudao">文档</a></td> 
  </tr> 
  <tr> 
   <td><a href="https://mp.baomidou.com/">MyBatis Plus</a></td> 
   <td>MyBatis 增强工具包</td> 
   <td>3.5.3.2</td> 
   <td><a href="http://www.iocoder.cn/Spring-Boot/MyBatis/?yudao">文档</a></td> 
  </tr> 
  <tr> 
   <td><a href="https://dynamic-datasource.com/">Dynamic Datasource</a></td> 
   <td>动态数据源</td> 
   <td>3.6.1</td> 
   <td><a href="http://www.iocoder.cn/Spring-Boot/datasource-pool/?yudao">文档</a></td> 
  </tr> 
  <tr> 
   <td><a href="https://redis.io/">Redis</a></td> 
   <td>key-value 数据库</td> 
   <td>5.0 / 6.0 /7.0</td> 
   <td></td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/redisson/redisson">Redisson</a></td> 
   <td>Redis 客户端</td> 
   <td>3.18.0</td> 
   <td><a href="http://www.iocoder.cn/Spring-Boot/Redis/?yudao">文档</a></td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/spring-projects/spring-framework/tree/master/spring-webmvc">Spring MVC</a></td> 
   <td>MVC 框架</td> 
   <td>5.3.24</td> 
   <td><a href="http://www.iocoder.cn/SpringMVC/MVC/?yudao">文档</a></td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/spring-projects/spring-security">Spring Security</a></td> 
   <td>Spring 安全框架</td> 
   <td>5.7.11</td> 
   <td><a href="http://www.iocoder.cn/Spring-Boot/Spring-Security/?yudao">文档</a></td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/hibernate/hibernate-validator">Hibernate Validator</a></td> 
   <td>参数校验组件</td> 
   <td>6.2.5</td> 
   <td><a href="http://www.iocoder.cn/Spring-Boot/Validation/?yudao">文档</a></td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/flowable/flowable-engine">Flowable</a></td> 
   <td>工作流引擎</td> 
   <td>6.8.0</td> 
   <td><a href="https://doc.iocoder.cn/bpm/">文档</a></td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/quartz-scheduler">Quartz</a></td> 
   <td>任务调度组件</td> 
   <td>2.3.2</td> 
   <td><a href="http://www.iocoder.cn/Spring-Boot/Job/?yudao">文档</a></td> 
  </tr> 
  <tr> 
   <td><a href="https://springdoc.org/">Springdoc</a></td> 
   <td>Swagger 文档</td> 
   <td>1.6.15</td> 
   <td><a href="http://www.iocoder.cn/Spring-Boot/Swagger/?yudao">文档</a></td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/resilience4j/resilience4j">Resilience4j</a></td> 
   <td>服务保障组件</td> 
   <td>1.7.1</td> 
   <td><a href="http://www.iocoder.cn/Spring-Boot/Resilience4j/?yudao">文档</a></td> 
  </tr> 
  <tr> 
   <td><a href="https://skywalking.apache.org/">SkyWalking</a></td> 
   <td>分布式应用追踪系统</td> 
   <td>8.12.0</td> 
   <td><a href="http://www.iocoder.cn/Spring-Boot/SkyWalking/?yudao">文档</a></td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/codecentric/spring-boot-admin">Spring Boot Admin</a></td> 
   <td>Spring Boot 监控平台</td> 
   <td>2.7.10</td> 
   <td><a href="http://www.iocoder.cn/Spring-Boot/Admin/?yudao">文档</a></td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/FasterXML/jackson">Jackson</a></td> 
   <td>JSON 工具库</td> 
   <td>2.13.3</td> 
   <td></td> 
  </tr> 
  <tr> 
   <td><a href="https://mapstruct.org/">MapStruct</a></td> 
   <td>Java Bean 转换</td> 
   <td>1.5.5.Final</td> 
   <td><a href="http://www.iocoder.cn/Spring-Boot/MapStruct/?yudao">文档</a></td> 
  </tr> 
  <tr> 
   <td><a href="https://projectlombok.org/">Lombok</a></td> 
   <td>消除冗长的 Java 代码</td> 
   <td>1.18.30</td> 
   <td><a href="http://www.iocoder.cn/Spring-Boot/Lombok/?yudao">文档</a></td> 
  </tr> 
  <tr> 
   <td><a href="https://junit.org/junit5/">JUnit</a></td> 
   <td>Java 单元测试框架</td> 
   <td>5.8.2</td> 
   <td>-</td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/mockito/mockito">Mockito</a></td> 
   <td>Java Mock 框架</td> 
   <td>4.8.0</td> 
   <td>-</td> 
  </tr> 
 </tbody> 
</table> 
<h2>🐷 演示图</h2> 
<h3>系统功能</h3> 
<table> 
 <thead> 
  <tr> 
   <th>模块</th> 
   <th>biu</th> 
   <th>biu</th> 
   <th>biu</th> 
  </tr> 
 </thead> 
 <tbody> 
  <tr> 
   <td>登录 &amp; 首页</td> 
   <td><img alt="登录" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E7%99%BB%E5%BD%95.jpg" /></td> 
   <td><img alt="首页" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E9%A6%96%E9%A1%B5.jpg" /></td> 
   <td><img alt="个人中心" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E4%B8%AA%E4%BA%BA%E4%B8%AD%E5%BF%83.jpg" /></td> 
  </tr> 
  <tr> 
   <td>用户 &amp; 应用</td> 
   <td><img alt="用户管理" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86.jpg" /></td> 
   <td><img alt="令牌管理" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E4%BB%A4%E7%89%8C%E7%AE%A1%E7%90%86.jpg" /></td> 
   <td><img alt="应用管理" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E5%BA%94%E7%94%A8%E7%AE%A1%E7%90%86.jpg" /></td> 
  </tr> 
  <tr> 
   <td>租户 &amp; 套餐</td> 
   <td><img alt="租户管理" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E7%A7%9F%E6%88%B7%E7%AE%A1%E7%90%86.jpg" /></td> 
   <td><img alt="租户套餐" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E7%A7%9F%E6%88%B7%E5%A5%97%E9%A4%90.png" /></td> 
   <td>-</td> 
  </tr> 
  <tr> 
   <td>部门 &amp; 岗位</td> 
   <td><img alt="部门管理" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E9%83%A8%E9%97%A8%E7%AE%A1%E7%90%86.jpg" /></td> 
   <td><img alt="岗位管理" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E5%B2%97%E4%BD%8D%E7%AE%A1%E7%90%86.jpg" /></td> 
   <td>-</td> 
  </tr> 
  <tr> 
   <td>菜单 &amp; 角色</td> 
   <td><img alt="菜单管理" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E8%8F%9C%E5%8D%95%E7%AE%A1%E7%90%86.jpg" /></td> 
   <td><img alt="角色管理" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E8%A7%92%E8%89%B2%E7%AE%A1%E7%90%86.jpg" /></td> 
   <td>-</td> 
  </tr> 
  <tr> 
   <td>审计日志</td> 
   <td><img alt="操作日志" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E6%93%8D%E4%BD%9C%E6%97%A5%E5%BF%97.jpg" /></td> 
   <td><img alt="登录日志" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E7%99%BB%E5%BD%95%E6%97%A5%E5%BF%97.jpg" /></td> 
   <td>-</td> 
  </tr> 
  <tr> 
   <td>短信</td> 
   <td><img alt="短信渠道" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E7%9F%AD%E4%BF%A1%E6%B8%A0%E9%81%93.jpg" /></td> 
   <td><img alt="短信模板" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E7%9F%AD%E4%BF%A1%E6%A8%A1%E6%9D%BF.jpg" /></td> 
   <td><img alt="短信日志" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E7%9F%AD%E4%BF%A1%E6%97%A5%E5%BF%97.jpg" /></td> 
  </tr> 
  <tr> 
   <td>字典 &amp; 敏感词</td> 
   <td><img alt="字典类型" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E5%AD%97%E5%85%B8%E7%B1%BB%E5%9E%8B.jpg" /></td> 
   <td><img alt="字典数据" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E5%AD%97%E5%85%B8%E6%95%B0%E6%8D%AE.jpg" /></td> 
   <td><img alt="敏感词" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E6%95%8F%E6%84%9F%E8%AF%8D.jpg" /></td> 
  </tr> 
  <tr> 
   <td>错误码 &amp; 通知</td> 
   <td><img alt="错误码管理" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E9%94%99%E8%AF%AF%E7%A0%81%E7%AE%A1%E7%90%86.jpg" /></td> 
   <td><img alt="通知公告" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E9%80%9A%E7%9F%A5%E5%85%AC%E5%91%8A.jpg" /></td> 
   <td>-</td> 
  </tr> 
 </tbody> 
</table> 
<h3>工作流程</h3> 
<table> 
 <thead> 
  <tr> 
   <th>模块</th> 
   <th>biu</th> 
   <th>biu</th> 
   <th>biu</th> 
  </tr> 
 </thead> 
 <tbody> 
  <tr> 
   <td>流程模型</td> 
   <td><img alt="流程模型-列表" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E6%B5%81%E7%A8%8B%E6%A8%A1%E5%9E%8B-%E5%88%97%E8%A1%A8.jpg" /></td> 
   <td><img alt="流程模型-设计" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E6%B5%81%E7%A8%8B%E6%A8%A1%E5%9E%8B-%E8%AE%BE%E8%AE%A1.jpg" /></td> 
   <td><img alt="流程模型-定义" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E6%B5%81%E7%A8%8B%E6%A8%A1%E5%9E%8B-%E5%AE%9A%E4%B9%89.jpg" /></td> 
  </tr> 
  <tr> 
   <td>表单 &amp; 分组</td> 
   <td><img alt="流程表单" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E6%B5%81%E7%A8%8B%E8%A1%A8%E5%8D%95.jpg" /></td> 
   <td><img alt="用户分组" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E7%94%A8%E6%88%B7%E5%88%86%E7%BB%84.jpg" /></td> 
   <td>-</td> 
  </tr> 
  <tr> 
   <td>我的流程</td> 
   <td><img alt="我的流程-列表" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E6%88%91%E7%9A%84%E6%B5%81%E7%A8%8B-%E5%88%97%E8%A1%A8.jpg" /></td> 
   <td><img alt="我的流程-发起" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E6%88%91%E7%9A%84%E6%B5%81%E7%A8%8B-%E5%8F%91%E8%B5%B7.jpg" /></td> 
   <td><img alt="我的流程-详情" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E6%88%91%E7%9A%84%E6%B5%81%E7%A8%8B-%E8%AF%A6%E6%83%85.jpg" /></td> 
  </tr> 
  <tr> 
   <td>待办 &amp; 已办</td> 
   <td><img alt="任务列表-审批" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E4%BB%BB%E5%8A%A1%E5%88%97%E8%A1%A8-%E5%AE%A1%E6%89%B9.jpg" /></td> 
   <td><img alt="任务列表-待办" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E4%BB%BB%E5%8A%A1%E5%88%97%E8%A1%A8-%E5%BE%85%E5%8A%9E.jpg" /></td> 
   <td><img alt="任务列表-已办" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E4%BB%BB%E5%8A%A1%E5%88%97%E8%A1%A8-%E5%B7%B2%E5%8A%9E.jpg" /></td> 
  </tr> 
  <tr> 
   <td>OA 请假</td> 
   <td><img alt="OA请假-列表" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/OA%E8%AF%B7%E5%81%87-%E5%88%97%E8%A1%A8.jpg" /></td> 
   <td><img alt="OA请假-发起" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/OA%E8%AF%B7%E5%81%87-%E5%8F%91%E8%B5%B7.jpg" /></td> 
   <td><img alt="OA请假-详情" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/OA%E8%AF%B7%E5%81%87-%E8%AF%A6%E6%83%85.jpg" /></td> 
  </tr> 
 </tbody> 
</table> 
<h3>基础设施</h3> 
<table> 
 <thead> 
  <tr> 
   <th>模块</th> 
   <th>biu</th> 
   <th>biu</th> 
   <th>biu</th> 
  </tr> 
 </thead> 
 <tbody> 
  <tr> 
   <td>代码生成</td> 
   <td><img alt="代码生成" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90.jpg" /></td> 
   <td><img alt="生成效果" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E7%94%9F%E6%88%90%E6%95%88%E6%9E%9C.jpg" /></td> 
   <td>-</td> 
  </tr> 
  <tr> 
   <td>文档</td> 
   <td><img alt="系统接口" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E7%B3%BB%E7%BB%9F%E6%8E%A5%E5%8F%A3.jpg" /></td> 
   <td><img alt="数据库文档" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%96%87%E6%A1%A3.jpg" /></td> 
   <td>-</td> 
  </tr> 
  <tr> 
   <td>文件 &amp; 配置</td> 
   <td><img alt="文件配置" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E6%96%87%E4%BB%B6%E9%85%8D%E7%BD%AE.jpg" /></td> 
   <td><img alt="文件管理" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%862.jpg" /></td> 
   <td><img alt="配置管理" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E9%85%8D%E7%BD%AE%E7%AE%A1%E7%90%86.jpg" /></td> 
  </tr> 
  <tr> 
   <td>定时任务</td> 
   <td><img alt="定时任务" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1.jpg" /></td> 
   <td><img alt="任务日志" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E4%BB%BB%E5%8A%A1%E6%97%A5%E5%BF%97.jpg" /></td> 
   <td>-</td> 
  </tr> 
  <tr> 
   <td>API 日志</td> 
   <td><img alt="访问日志" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E8%AE%BF%E9%97%AE%E6%97%A5%E5%BF%97.jpg" /></td> 
   <td><img alt="错误日志" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E9%94%99%E8%AF%AF%E6%97%A5%E5%BF%97.jpg" /></td> 
   <td>-</td> 
  </tr> 
  <tr> 
   <td>MySQL &amp; Redis</td> 
   <td><img alt="MySQL" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/MySQL.jpg" /></td> 
   <td><img alt="Redis" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/Redis.jpg" /></td> 
   <td>-</td> 
  </tr> 
  <tr> 
   <td>监控平台</td> 
   <td><img alt="Java监控" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/Java%E7%9B%91%E6%8E%A7.jpg" /></td> 
   <td><img alt="链路追踪" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AA.jpg" /></td> 
   <td><img alt="日志中心" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E6%97%A5%E5%BF%97%E4%B8%AD%E5%BF%83.jpg" /></td> 
  </tr> 
 </tbody> 
</table> 
<h3>支付系统</h3> 
<table> 
 <thead> 
  <tr> 
   <th>模块</th> 
   <th>biu</th> 
   <th>biu</th> 
   <th>biu</th> 
  </tr> 
 </thead> 
 <tbody> 
  <tr> 
   <td>商家 &amp; 应用</td> 
   <td><img alt="商户信息" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E5%95%86%E6%88%B7%E4%BF%A1%E6%81%AF.jpg" /></td> 
   <td><img alt="应用信息-列表" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E5%BA%94%E7%94%A8%E4%BF%A1%E6%81%AF-%E5%88%97%E8%A1%A8.jpg" /></td> 
   <td><img alt="应用信息-编辑" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E5%BA%94%E7%94%A8%E4%BF%A1%E6%81%AF-%E7%BC%96%E8%BE%91.jpg" /></td> 
  </tr> 
  <tr> 
   <td>支付 &amp; 退款</td> 
   <td><img alt="支付订单" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E6%94%AF%E4%BB%98%E8%AE%A2%E5%8D%95.jpg" /></td> 
   <td><img alt="退款订单" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E9%80%80%E6%AC%BE%E8%AE%A2%E5%8D%95.jpg" /></td> 
   <td>---</td> 
  </tr> 
 </tbody> 
</table> 
<h3>数据报表</h3> 
<table> 
 <thead> 
  <tr> 
   <th>模块</th> 
   <th>biu</th> 
   <th>biu</th> 
   <th>biu</th> 
  </tr> 
 </thead> 
 <tbody> 
  <tr> 
   <td>报表设计器</td> 
   <td><img alt="数据报表" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E6%8A%A5%E8%A1%A8%E8%AE%BE%E8%AE%A1%E5%99%A8-%E6%95%B0%E6%8D%AE%E6%8A%A5%E8%A1%A8.jpg" /></td> 
   <td><img alt="图形报表" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E6%8A%A5%E8%A1%A8%E8%AE%BE%E8%AE%A1%E5%99%A8-%E5%9B%BE%E5%BD%A2%E6%8A%A5%E8%A1%A8.jpg" /></td> 
   <td><img alt="报表设计器-打印设计" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E6%8A%A5%E8%A1%A8%E8%AE%BE%E8%AE%A1%E5%99%A8-%E6%89%93%E5%8D%B0%E8%AE%BE%E8%AE%A1.jpg" /></td> 
  </tr> 
  <tr> 
   <td>大屏设计器</td> 
   <td><img alt="大屏列表" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E5%A4%A7%E5%B1%8F%E8%AE%BE%E8%AE%A1%E5%99%A8-%E5%88%97%E8%A1%A8.jpg" /></td> 
   <td><img alt="大屏预览" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E5%A4%A7%E5%B1%8F%E8%AE%BE%E8%AE%A1%E5%99%A8-%E9%A2%84%E8%A7%88.jpg" /></td> 
   <td><img alt="大屏编辑" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/%E5%A4%A7%E5%B1%8F%E8%AE%BE%E8%AE%A1%E5%99%A8-%E7%BC%96%E8%BE%91.jpg" /></td> 
  </tr> 
 </tbody> 
</table> 
<h3>移动端（管理后台）</h3> 
<table> 
 <thead> 
  <tr> 
   <th>biu</th> 
   <th>biu</th> 
   <th>biu</th> 
  </tr> 
 </thead> 
 <tbody> 
  <tr> 
   <td><img alt="" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/admin-uniapp/01.png" /></td> 
   <td><img alt="" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/admin-uniapp/02.png" /></td> 
   <td><img alt="" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/admin-uniapp/03.png" /></td> 
  </tr> 
  <tr> 
   <td><img alt="" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/admin-uniapp/04.png" /></td> 
   <td><img alt="" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/admin-uniapp/05.png" /></td> 
   <td><img alt="" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/admin-uniapp/06.png" /></td> 
  </tr> 
  <tr> 
   <td><img alt="" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/admin-uniapp/07.png" /></td> 
   <td><img alt="" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/admin-uniapp/08.png" /></td> 
   <td><img alt="" src="https://raw.githubusercontent.com/YunaiV/ruoyi-vue-pro/master/.image/admin-uniapp/09.png" /></td> 
  </tr> 
 </tbody> 
</table> 
<p>目前已经实现登录、我的、工作台、编辑资料、头像修改、密码修改、常见问题、关于我们等基础功能。</p></description>
</item>
<item>
<title>microsoft/garnet</title>
<link>https://github.com/microsoft/garnet</link>
<description>Content Length: 9372

<p>Garnet is a remote cache-store from Microsoft Research that offers strong performance (throughput and latency), scalability, storage, recovery, cluster sharding, key migration, and replication features. Garnet can work with existing Redis clients.</p><hr /><h1>Garnet</h1> 
<p><a href="https://github.com/microsoft/garnet/actions/workflows/ci.yml"><img alt=".NET CI" src="https://github.com/microsoft/garnet/actions/workflows/ci.yml/badge.svg?branch=main" /></a> <a href="https://aka.ms/garnet-discord"><img alt="Discord Shield" src="https://discordapp.com/api/guilds/1213937452272582676/widget.png?style=shield" /></a></p> 
<p>Garnet is a new remote cache-store from Microsoft Research, that offers several unique benefits:</p> 
<ul> 
 <li>Garnet adopts the popular <a href="https://redis.io/docs/reference/protocol-spec/">RESP</a> wire protocol as a starting point, which makes it possible to use Garnet from unmodified Redis clients available in most programming languages of today, such as <a href="https://github.com/StackExchange/StackExchange.Redis">StackExchange.Redis</a> in C#.</li> 
 <li>Garnet offers much better throughput and scalability with many client connections and small batches, relative to comparable open-source cache-stores, leading to cost savings for large apps and services.</li> 
 <li>Garnet demonstrates extremely low client latencies (often less than 300 microseconds at the 99.9th percentile) using commodity cloud (Azure) VMs with accelerated TCP enabled, which is critical to real-world scenarios.</li> 
 <li>Based on the latest .NET technology, Garnet is cross-platform, extensible, and modern. It is designed to be easy to develop for and evolve, without sacrificing performance in the common case. We leveraged the rich library ecosystem of .NET for API breadth, with open opportunities for optimization. Thanks to our careful use of .NET, Garnet achieves state-of-the-art performance on both Linux and Windows.</li> 
</ul> 
<p>This repo contains the code to build and run Garnet. For more information and documentation, check out our website at <a href="https://microsoft.github.io/garnet">https://microsoft.github.io/garnet</a>.</p> 
<h2>Feature Summary</h2> 
<p>Garnet implements a wide range of APIs including raw strings (e.g., gets, sets, and key expiration), analytical (e.g., HyperLogLog and Bitmap), and object (e.g., sorted sets and lists) operations. It can handle multi-key transactions in the form of client-side RESP transactions and our own server-side stored procedures in C# and allows users to define custom operations on both raw strings and new object types, all in the convenience and safety of C#, leading to a lower bar for developing custom extensions.</p> 
<p>Garnet uses a fast and pluggable network layer, enabling future extensions such as leveraging kernel-bypass stacks. It supports secure transport layer security (TLS) communications using the robust <a href="https://learn.microsoft.com/en-us/dotnet/api/system.net.security.sslstream">SslStream</a> library of .NET, as well as basic access control. Garnet’s storage layer, called Tsavorite, was forked from our prior open-source project <a href="https://github.com/microsoft/FASTER">FASTER</a>, and includes strong database features such as thread scalability, tiered storage support (memory, SSD, and cloud storage), fast non-blocking checkpointing, recovery, operation logging for durability, multi-key transaction support, and better memory management and reuse. Finally, Garnet supports a cluster mode of operation with support for sharding, replication, and dynamic key migration.</p> 
<p align="center"> <img src="https://github.com/microsoft/garnet/assets/18355833/851be90b-e43a-40ca-ae56-7dc087cf6adc" width="350" /> </p> 
<h2>Performance Preview</h2> 
<p>We illustrate a few key results on our <a href="https://microsoft.github.io/garnet/docs/benchmarking/overview">website</a> comparing Garnet to leading open-source cache-stores.</p> 
<h2>Design Highlights</h2> 
<p>Garnet’s design re-thinks the entire cache-store stack – from receiving packets on the network, to parsing and processing database operations, to performing storage interactions. We build on top of years of our <a href="https://microsoft.github.io/FASTER/docs/td-research-papers/">prior research</a>. Below is Garnet’s overall architecture.</p> 
<p align="center"> <img src="https://github.com/microsoft/garnet/assets/18355833/8d89f719-f86b-4b1f-81d1-1ae7bd450001" width="400" /> </p> 
<p>Garnet’s network layer inherits a shared memory design inspired by our prior research on <a href="https://www.microsoft.com/en-us/research/publication/achieving-high-throughput-and-elasticity-in-a-larger-than-memory-store/">ShadowFax</a>. TLS processing and storage interactions are performed on the IO completion thread, avoiding thread switching overheads in the common case. This approach allows CPU cache coherence to bring the data to the network, instead of traditional shuffle-based designs, which require data movement on the server.</p> 
<p>Garnet’s storage design consists of two Tsavorite key-value stores whose fates are bound by a unified operation log. The first store, called the “main store,” is optimized for raw string operations and manages memory carefully to avoid garbage collection. The second, and optional, “object store” is optimized for complex objects and custom data types, including popular types such as Sorted Set, Set, Hash, List, and Geo. Data types in the object store leverage the .NET library ecosystem for their current implementations. They are stored on the heap in memory (which makes updates very efficient) and in a serialized form on disk. In the future, we plan to investigate using a unified index and log to ease maintenance.</p> 
<p>A distinguishing feature of Garnet’s design is its narrow-waist Tsavorite storage API, which is used to implement the large, rich, and extensible RESP API surface on top. This API consists of read, upsert, delete, and atomic read-modify-write operations, implemented with asynchronous callbacks for Garnet to interject logic at various points during each operation. Our storage API model allows us to cleanly separate Garnet’s parsing and query processing concerns from storage details such as concurrency, storage tiering, and checkpointing. Garnet uses two-phase locking for multi-key transactions.</p> 
<h3>Cluster Mode</h3> 
<p>In addition to single-node execution, Garnet supports a cluster mode, which allows users to create and manage a sharded and replicated deployment. Garnet also supports an efficient and dynamic key migration scheme to rebalance shards. Users can use standard Redis cluster commands to create and manage Garnet clusters, and nodes perform gossip to share and evolve cluster state. Cluster is still work in progress.</p> 
<h2>Next Steps</h2> 
<p>Head over to our <a href="https://microsoft.github.io/garnet">documentation</a> site, or jump directly to the <a href="https://microsoft.github.io/garnet/docs/getting-started">getting started</a> or <a href="https://microsoft.github.io/garnet/docs/welcome/releases">releases</a> section.</p> 
<h2>License</h2> 
<p>This project is licensed under the <a href="https://opensource.org/licenses/MIT">MIT License</a>, see the <a href="https://raw.githubusercontent.com/microsoft/garnet/main/LICENSE">LICENSE</a> file.</p> 
<h2>Privacy</h2> 
<p>Privacy information can be found at <a href="https://privacy.microsoft.com/en-us/privacystatement">https://privacy.microsoft.com/en-us/</a>.</p> 
<h2>Contributing</h2> 
<p>This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit <a href="https://cla.opensource.microsoft.com">https://cla.opensource.microsoft.com</a>.</p> 
<p>When you submit a pull request, a CLA bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.</p> 
<p>This project has adopted the <a href="https://opensource.microsoft.com/codeofconduct/">Microsoft Open Source Code of Conduct</a>. For more information see the <a href="https://opensource.microsoft.com/codeofconduct/faq/">Code of Conduct FAQ</a> or contact <a href="mailto:opencode@microsoft.com">opencode@microsoft.com</a> with any additional questions or comments.</p> 
<h2>Trademarks</h2> 
<p>This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow <a href="https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general">Microsoft's Trademark &amp; Brand Guidelines</a>. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party's policies.</p> 
<p>Redis is a registered trademark of Redis Ltd. Any rights therein are reserved to Redis Ltd. Any use by Microsoft is for referential purposes only and does not indicate any sponsorship, endorsement or affiliation between Redis and Microsoft.</p></description>
</item>
<item>
<title>shadcn-ui/ui</title>
<link>https://github.com/shadcn-ui/ui</link>
<description>Content Length: 827

<p>Beautifully designed components that you can copy and paste into your apps. Accessible. Customizable. Open Source.</p><hr /><h1>shadcn/ui</h1> 
<p>Accessible and customizable components that you can copy and paste into your apps. Free. Open Source. <strong>Use this to build your own component library</strong>.</p> 
<p><img alt="hero" src="https://raw.githubusercontent.com/shadcn-ui/ui/main/apps/www/public/og.jpg" /></p> 
<h2>Documentation</h2> 
<p>Visit <a href="http://ui.shadcn.com/docs">http://ui.shadcn.com/docs</a> to view the documentation.</p> 
<h2>Contributing</h2> 
<p>Please read the <a href="https://raw.githubusercontent.com/shadcn-ui/ui/main/CONTRIBUTING.md">contributing guide</a>.</p> 
<h2>License</h2> 
<p>Licensed under the <a href="https://github.com/shadcn/ui/raw/main/LICENSE.md">MIT license</a>.</p></description>
</item>
<item>
<title>abi/screenshot-to-code</title>
<link>https://github.com/abi/screenshot-to-code</link>
<description>Content Length: 6277

<p>Drop in a screenshot and convert it to clean code (HTML/Tailwind/React/Vue)</p><hr /><h1>screenshot-to-code</h1> 
<p>A simple tool to convert screenshots, mockups and Figma designs into clean, functional code using AI.</p> 
<p><a href="https://github.com/abi/screenshot-to-code/assets/23818/6cebadae-2fe3-4986-ac6a-8fb9db030045">https://github.com/abi/screenshot-to-code/assets/23818/6cebadae-2fe3-4986-ac6a-8fb9db030045</a></p> 
<p>Supported stacks:</p> 
<ul> 
 <li>HTML + Tailwind</li> 
 <li>React + Tailwind</li> 
 <li>Vue + Tailwind</li> 
 <li>Bootstrap</li> 
 <li>Ionic + Tailwind</li> 
 <li>SVG</li> 
</ul> 
<p>Supported AI models:</p> 
<ul> 
 <li>GPT-4 Vision</li> 
 <li>Claude 3 Sonnet (faster, and on par or better than GPT-4 vision for many inputs)</li> 
 <li>DALL-E 3 for image generation</li> 
</ul> 
<p>See the <a href="https://raw.githubusercontent.com/abi/screenshot-to-code/main/#-examples">Examples</a> section below for more demos.</p> 
<p>We also just added experimental support for taking a video/screen recording of a website in action and turning that into a functional prototype.</p> 
<p><img alt="google in app quick 3" src="https://github.com/abi/screenshot-to-code/assets/23818/8758ffa4-9483-4b9b-bb66-abd6d1594c33" /></p> 
<p><a href="https://github.com/abi/screenshot-to-code/wiki/Screen-Recording-to-Code">Learn more about video here</a>.</p> 
<p><a href="https://twitter.com/_abi_">Follow me on Twitter for updates</a>.</p> 
<h2>🚀 Try It Out!</h2> 
<p>🆕 <a href="https://screenshottocode.com">Try it live on the hosted version</a> (bring your own OpenAI key - <strong>your key must have access to GPT-4 Vision. See <a href="https://raw.githubusercontent.com/abi/screenshot-to-code/main/#%EF%B8%8F-faqs">FAQ</a> section below for details</strong>). Or see <a href="https://raw.githubusercontent.com/abi/screenshot-to-code/main/#-getting-started">Getting Started</a> below for local install instructions.</p> 
<h2>🛠 Getting Started</h2> 
<p>The app has a React/Vite frontend and a FastAPI backend. You will need an OpenAI API key with access to the GPT-4 Vision API or an Anthropic key if you want to use Claude Sonnet, or for experimental video support.</p> 
<p>Run the backend (I use Poetry for package management - <code>pip install poetry</code> if you don't have it):</p> 
<pre><code class="language-bash">cd backend
echo "OPENAI_API_KEY=sk-your-key" &gt; .env
poetry install
poetry shell
poetry run uvicorn main:app --reload --port 7001
</code></pre> 
<p>If you want to use Anthropic, add the <code>ANTHROPIC_API_KEY</code> to <code>backend/.env</code> with your API key from Anthropic.</p> 
<p>Run the frontend:</p> 
<pre><code class="language-bash">cd frontend
yarn
yarn dev
</code></pre> 
<p>Open <a href="http://localhost:5173">http://localhost:5173</a> to use the app.</p> 
<p>If you prefer to run the backend on a different port, update VITE_WS_BACKEND_URL in <code>frontend/.env.local</code></p> 
<p>For debugging purposes, if you don't want to waste GPT4-Vision credits, you can run the backend in mock mode (which streams a pre-recorded response):</p> 
<pre><code class="language-bash">MOCK=true poetry run uvicorn main:app --reload --port 7001
</code></pre> 
<h2>Docker</h2> 
<p>If you have Docker installed on your system, in the root directory, run:</p> 
<pre><code class="language-bash">echo "OPENAI_API_KEY=sk-your-key" &gt; .env
docker-compose up -d --build
</code></pre> 
<p>The app will be up and running at <a href="http://localhost:5173">http://localhost:5173</a>. Note that you can't develop the application with this setup as the file changes won't trigger a rebuild.</p> 
<h2>🙋‍♂️ FAQs</h2> 
<ul> 
 <li><strong>I'm running into an error when setting up the backend. How can I fix it?</strong> <a href="https://github.com/abi/screenshot-to-code/issues/3#issuecomment-1814777959">Try this</a>. If that still doesn't work, open an issue.</li> 
 <li><strong>How do I get an OpenAI API key?</strong> See <a href="https://github.com/abi/screenshot-to-code/raw/main/Troubleshooting.md">https://github.com/abi/screenshot-to-code/blob/main/Troubleshooting.md</a></li> 
 <li><strong>How can I configure an OpenAI proxy?</strong> - you can configure the OpenAI base URL if you need to use a proxy: Set OPENAI_BASE_URL in the <code>backend/.env</code> or directly in the UI in the settings dialog</li> 
 <li><strong>How can I provide feedback?</strong> For feedback, feature requests and bug reports, open an issue or ping me on <a href="https://twitter.com/_abi_">Twitter</a>.</li> 
</ul> 
<h2>📚 Examples</h2> 
<p><strong>NYTimes</strong></p> 
<table> 
 <thead> 
  <tr> 
   <th>Original</th> 
   <th>Replica</th> 
  </tr> 
 </thead> 
 <tbody> 
  <tr> 
   <td><img alt="Screenshot 2023-11-20 at 12 54 03 PM" src="https://github.com/abi/screenshot-to-code/assets/23818/3b644dfa-9ca6-4148-84a7-3405b6671922" width="1238" /></td> 
   <td><img alt="Screenshot 2023-11-20 at 12 59 56 PM" src="https://github.com/abi/screenshot-to-code/assets/23818/26201c9f-1a28-4f35-a3b1-1f04e2b8ce2a" width="1414" /></td> 
  </tr> 
 </tbody> 
</table> 
<p><strong>Instagram page (with not Taylor Swift pics)</strong></p> 
<p><a href="https://github.com/abi/screenshot-to-code/assets/23818/503eb86a-356e-4dfc-926a-dabdb1ac7ba1">https://github.com/abi/screenshot-to-code/assets/23818/503eb86a-356e-4dfc-926a-dabdb1ac7ba1</a></p> 
<p><strong>Hacker News</strong> but it gets the colors wrong at first so we nudge it</p> 
<p><a href="https://github.com/abi/screenshot-to-code/assets/23818/3fec0f77-44e8-4fb3-a769-ac7410315e5d">https://github.com/abi/screenshot-to-code/assets/23818/3fec0f77-44e8-4fb3-a769-ac7410315e5d</a></p> 
<h2>🌍 Hosted Version</h2> 
<p>🆕 <a href="https://screenshottocode.com">Try it here</a> (bring your own OpenAI key - <strong>your key must have access to GPT-4 Vision. See <a href="https://raw.githubusercontent.com/abi/screenshot-to-code/main/#%EF%B8%8F-faqs">FAQ</a> section for details</strong>). Or see <a href="https://raw.githubusercontent.com/abi/screenshot-to-code/main/#-getting-started">Getting Started</a> for local install instructions.</p> 
<p><a href="https://www.buymeacoffee.com/abiraja"><img alt="&quot;Buy Me A Coffee&quot;" src="https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png" /></a></p></description>
</item>
<item>
<title>SakanaAI/evolutionary-model-merge</title>
<link>https://github.com/SakanaAI/evolutionary-model-merge</link>
<description>Content Length: 7563

<p>Official repository of Evolutionary Optimization of Model Merging Recipes</p><hr /><h1>🐟 Evolutionary Optimization of Model Merging Recipes</h1> 
<p>🤗 <a href="https://huggingface.co/SakanaAI">Models</a> | 👀 <a href="https://huggingface.co/spaces/SakanaAI/EvoVLM-JP">Demo</a> | 📚 <a href="https://arxiv.org/abs/2403.13187">Paper</a> | 📝 <a href="https://sakana.ai/evolutionary-model-merge/">Blog</a> | 🐦 <a href="https://twitter.com/SakanaAILabs">Twitter</a></p> 
<div align="center"> 
 <img alt="Method" src="https://raw.githubusercontent.com/SakanaAI/evolutionary-model-merge/main/assets/method.gif" title="method" /> 
</div> 
<p>This repository serves as a central hub for SakanaAI's <a href="https://arxiv.org/abs/2403.13187">Evolutionary Model Merge</a> series, showcasing its releases and resources. It includes models and code for reproducing the evaluation presented in our paper. Look forward to more updates and additions coming soon.</p> 
<h2>Models</h2> 
<h3>Our Models</h3> 
<table> 
 <thead> 
  <tr> 
   <th align="left">Model</th> 
   <th align="right">Size</th> 
   <th align="left">License</th> 
   <th align="left">Source</th> 
  </tr> 
 </thead> 
 <tbody> 
  <tr> 
   <td align="left"><a href="https://huggingface.co/SakanaAI/EvoLLM-JP-v1-7B">EvoLLM-JP-v1-7B</a></td> 
   <td align="right">7B</td> 
   <td align="left">Microsoft Research License</td> 
   <td align="left"><a href="https://huggingface.co/augmxnt/shisa-gamma-7b-v1">shisa-gamma-7b-v1</a>, <a href="https://huggingface.co/WizardLM/WizardMath-7B-V1.1">WizardMath-7B-V1.1</a>, <a href="https://huggingface.co/GAIR/Abel-7B-002">GAIR/Abel-7B-002</a></td> 
  </tr> 
  <tr> 
   <td align="left"><a href="https://huggingface.co/SakanaAI/EvoLLM-JP-v1-10B">EvoLLM-JP-v1-10B</a></td> 
   <td align="right">10B</td> 
   <td align="left">Microsoft Research License</td> 
   <td align="left">EvoLLM-JP-v1-7B, <a href="https://huggingface.co/augmxnt/shisa-gamma-7b-v1">shisa-gamma-7b-v1</a></td> 
  </tr> 
  <tr> 
   <td align="left"><a href="https://huggingface.co/SakanaAI/EvoLLM-JP-A-v1-7B">EvoLLM-JP-A-v1-7B</a></td> 
   <td align="right">7B</td> 
   <td align="left">Apache 2.0</td> 
   <td align="left"><a href="https://huggingface.co/augmxnt/shisa-gamma-7b-v1">shisa-gamma-7b-v1</a>, <a href="https://huggingface.co/upaya07/Arithmo2-Mistral-7B">Arithmo2-Mistral-7B</a>, <a href="https://huggingface.co/GAIR/Abel-7B-002">GAIR/Abel-7B-002</a></td> 
  </tr> 
  <tr> 
   <td align="left"><a href="https://huggingface.co/SakanaAI/EvoVLM-JP-v1-7B">EvoVLM-JP-v1-7B</a></td> 
   <td align="right">7B</td> 
   <td align="left">Apache 2.0</td> 
   <td align="left"><a href="https://huggingface.co/liuhaotian/llava-v1.6-mistral-7b">LLaVA-1.6-Mistral-7B</a>, <a href="https://huggingface.co/augmxnt/shisa-gamma-7b-v1">shisa-gamma-7b-v1</a></td> 
  </tr> 
 </tbody> 
</table> 
<h3>Comparing EvoLLM-JP w/ Source LLMs</h3> 
<p>For details on the evaluation, please refer to Section 4.1 of the paper.</p> 
<table> 
 <thead> 
  <tr> 
   <th align="left">Model</th> 
   <th align="right">MGSM-JA (acc ↑)</th> 
   <th align="right"><a href="https://github.com/Stability-AI/lm-evaluation-harness/tree/jp-stable">lm-eval-harness</a> (avg ↑)</th> 
  </tr> 
 </thead> 
 <tbody> 
  <tr> 
   <td align="left"><a href="https://huggingface.co/augmxnt/shisa-gamma-7b-v1">Shisa Gamma 7B v1</a></td> 
   <td align="right">9.6</td> 
   <td align="right">66.1</td> 
  </tr> 
  <tr> 
   <td align="left"><a href="https://huggingface.co/WizardLM/WizardMath-7B-V1.1">WizardMath 7B V1.1</a></td> 
   <td align="right">18.4</td> 
   <td align="right">60.1</td> 
  </tr> 
  <tr> 
   <td align="left"><a href="https://huggingface.co/GAIR/Abel-7B-002">Abel 7B 002</a></td> 
   <td align="right">30.0</td> 
   <td align="right">56.5</td> 
  </tr> 
  <tr> 
   <td align="left"><a href="https://huggingface.co/upaya07/Arithmo2-Mistral-7B">Arithmo2 Mistral 7B</a></td> 
   <td align="right">24.0</td> 
   <td align="right">56.4</td> 
  </tr> 
  <tr> 
   <td align="left"><a href="https://huggingface.co/SakanaAI/EvoLLM-JP-A-v1-7B">EvoLLM-JP-A-v1-7B</a></td> 
   <td align="right"><strong>52.4</strong></td> 
   <td align="right"><strong>69.0</strong></td> 
  </tr> 
  <tr> 
   <td align="left"><a href="https://huggingface.co/SakanaAI/EvoLLM-JP-v1-7B">EvoLLM-JP-v1-7B</a></td> 
   <td align="right"><strong>52.0</strong></td> 
   <td align="right"><strong>70.5</strong></td> 
  </tr> 
  <tr> 
   <td align="left"><a href="https://huggingface.co/SakanaAI/EvoLLM-JP-v1-10B">EvoLLM-JP-v1-10B</a></td> 
   <td align="right"><strong>55.6</strong></td> 
   <td align="right"><strong>66.2</strong></td> 
  </tr> 
 </tbody> 
</table> 
<h3>Comparing EvoVLM-JP w/ Existing VLMs</h3> 
<p>For details on the evaluation, please see Section 4.2 of the paper.</p> 
<table> 
 <thead> 
  <tr> 
   <th align="left">Model</th> 
   <th align="right">JA-VG-VQA-500 (ROUGE-L ↑)</th> 
   <th align="right">JA-VLM-Bench-In-the-Wild (ROUGE-L ↑)</th> 
  </tr> 
 </thead> 
 <tbody> 
  <tr> 
   <td align="left"><a href="https://llava-vl.github.io/blog/2024-01-30-llava-next/">LLaVA-1.6-Mistral-7B</a></td> 
   <td align="right">14.32</td> 
   <td align="right">41.10</td> 
  </tr> 
  <tr> 
   <td align="left"><a href="https://huggingface.co/stabilityai/japanese-stable-vlm">Japanese Stable VLM</a></td> 
   <td align="right">-<sup>*1</sup></td> 
   <td align="right">40.50</td> 
  </tr> 
  <tr> 
   <td align="left"><a href="https://huggingface.co/turing-motors/heron-chat-blip-ja-stablelm-base-7b-v1-llava-620k">Heron BLIP Japanese StableLM Base 7B llava-620k</a></td> 
   <td align="right">8.73<sup>*2</sup></td> 
   <td align="right">27.37<sup>*2</sup></td> 
  </tr> 
  <tr> 
   <td align="left"><a href="https://huggingface.co/SakanaAI/EvoVLM-JP-v1-7B">EvoVLM-JP-v1-7B</a></td> 
   <td align="right"><strong>19.70</strong></td> 
   <td align="right"><strong>51.25</strong></td> 
  </tr> 
 </tbody> 
</table> 
<ul> 
 <li>*1: Japanese Stable VLM cannot be evaluated using the JA-VG-VQA-500 dataset because this model has used this dataset for training.</li> 
 <li>*2: We are checking with the authors to see if this current results are valid.</li> 
</ul> 
<h2>Reproducing the Evaluation</h2> 
<h3>1. Clone the Repo</h3> 
<pre><code class="language-bash">git clone https://github.com/SakanaAI/evolutionary-model-merge.git
cd evolutionary-model-merge
</code></pre> 
<h3>2. Download fastext Model</h3> 
<p>We use fastext to detect language for evaluation. Please download <code>lid.176.ftz</code> from <a href="https://fasttext.cc/docs/en/language-identification.html">this link</a> and place it in your current directory. If you place the file in a directory other than the current directory, specify the path to the file using the <code>LID176FTZ_PATH</code> environment variable.</p> 
<h3>3. Install Libraries</h3> 
<pre><code class="language-bash">pip install -e .
</code></pre> 
<p>We conducted our tests in the following environment: Python Version 3.10.12 and CUDA Version 12.3. We cannot guarantee that it will work in other environments.</p> 
<h3>4. Run</h3> 
<p>To launch evaluation, run the following script with a certain config. All configs used for the paper are in <code>configs</code>.</p> 
<pre><code class="language-bash">python evaluate.py --config_path {path-to-config}
</code></pre> 
<h2>Acknowledgement</h2> 
<p>We would like to thank the developers of the source models for their contributions and for making their work available. Our math evaluation code builds on the WizardMath repository, and we are grateful for their work.</p></description>
</item>
<item>
<title>redis/redis</title>
<link>https://github.com/redis/redis</link>
<description>Content Length: 27289

<p>Redis is an in-memory database that persists on disk. The data model is key-value, but many different kind of values are supported: Strings, Lists, Sets, Sorted Sets, Hashes, Streams, HyperLogLogs, Bitmaps.</p><hr /><p>This README is just a fast <em>quick start</em> document. You can find more detailed documentation at <a href="https://redis.io">redis.io</a>.</p> 
<h2>What is Redis?</h2> 
<p>Redis is often referred to as a <em>data structures</em> server. What this means is that Redis provides access to mutable data structures via a set of commands, which are sent using a <em>server-client</em> model with TCP sockets and a simple protocol. So different processes can query and modify the same data structures in a shared way.</p> 
<p>Data structures implemented into Redis have a few special properties:</p> 
<ul> 
 <li>Redis cares to store them on disk, even if they are always served and modified into the server memory. This means that Redis is fast, but that it is also non-volatile.</li> 
 <li>The implementation of data structures emphasizes memory efficiency, so data structures inside Redis will likely use less memory compared to the same data structure modelled using a high-level programming language.</li> 
 <li>Redis offers a number of features that are natural to find in a database, like replication, tunable levels of durability, clustering, and high availability.</li> 
</ul> 
<p>Another good example is to think of Redis as a more complex version of memcached, where the operations are not just SETs and GETs, but operations that work with complex data types like Lists, Sets, ordered data structures, and so forth.</p> 
<p>If you want to know more, this is a list of selected starting points:</p> 
<ul> 
 <li>Introduction to Redis data types. <a href="https://redis.io/topics/data-types-intro">https://redis.io/topics/data-types-intro</a></li> 
 <li>Try Redis directly inside your browser. <a href="https://try.redis.io">https://try.redis.io</a></li> 
 <li>The full list of Redis commands. <a href="https://redis.io/commands">https://redis.io/commands</a></li> 
 <li>There is much more inside the official Redis documentation. <a href="https://redis.io/documentation">https://redis.io/documentation</a></li> 
</ul> 
<h2>Building Redis</h2> 
<p>Redis can be compiled and used on Linux, OSX, OpenBSD, NetBSD, FreeBSD. We support big endian and little endian architectures, and both 32 bit and 64 bit systems.</p> 
<p>It may compile on Solaris derived systems (for instance SmartOS) but our support for this platform is <em>best effort</em> and Redis is not guaranteed to work as well as in Linux, OSX, and *BSD.</p> 
<p>It is as simple as:</p> 
<pre><code>% make
</code></pre> 
<p>To build with TLS support, you'll need OpenSSL development libraries (e.g. libssl-dev on Debian/Ubuntu) and run:</p> 
<pre><code>% make BUILD_TLS=yes
</code></pre> 
<p>To build with systemd support, you'll need systemd development libraries (such as libsystemd-dev on Debian/Ubuntu or systemd-devel on CentOS) and run:</p> 
<pre><code>% make USE_SYSTEMD=yes
</code></pre> 
<p>To append a suffix to Redis program names, use:</p> 
<pre><code>% make PROG_SUFFIX="-alt"
</code></pre> 
<p>You can build a 32 bit Redis binary using:</p> 
<pre><code>% make 32bit
</code></pre> 
<p>After building Redis, it is a good idea to test it using:</p> 
<pre><code>% make test
</code></pre> 
<p>If TLS is built, running the tests with TLS enabled (you will need <code>tcl-tls</code> installed):</p> 
<pre><code>% ./utils/gen-test-certs.sh
% ./runtest --tls
</code></pre> 
<h2>Fixing build problems with dependencies or cached build options</h2> 
<p>Redis has some dependencies which are included in the <code>deps</code> directory. <code>make</code> does not automatically rebuild dependencies even if something in the source code of dependencies changes.</p> 
<p>When you update the source code with <code>git pull</code> or when code inside the dependencies tree is modified in any other way, make sure to use the following command in order to really clean everything and rebuild from scratch:</p> 
<pre><code>% make distclean
</code></pre> 
<p>This will clean: jemalloc, lua, hiredis, linenoise and other dependencies.</p> 
<p>Also if you force certain build options like 32bit target, no C compiler optimizations (for debugging purposes), and other similar build time options, those options are cached indefinitely until you issue a <code>make distclean</code> command.</p> 
<h2>Fixing problems building 32 bit binaries</h2> 
<p>If after building Redis with a 32 bit target you need to rebuild it with a 64 bit target, or the other way around, you need to perform a <code>make distclean</code> in the root directory of the Redis distribution.</p> 
<p>In case of build errors when trying to build a 32 bit binary of Redis, try the following steps:</p> 
<ul> 
 <li>Install the package libc6-dev-i386 (also try g++-multilib).</li> 
 <li>Try using the following command line instead of <code>make 32bit</code>: <code>make CFLAGS="-m32 -march=native" LDFLAGS="-m32"</code></li> 
</ul> 
<h2>Allocator</h2> 
<p>Selecting a non-default memory allocator when building Redis is done by setting the <code>MALLOC</code> environment variable. Redis is compiled and linked against libc malloc by default, with the exception of jemalloc being the default on Linux systems. This default was picked because jemalloc has proven to have fewer fragmentation problems than libc malloc.</p> 
<p>To force compiling against libc malloc, use:</p> 
<pre><code>% make MALLOC=libc
</code></pre> 
<p>To compile against jemalloc on Mac OS X systems, use:</p> 
<pre><code>% make MALLOC=jemalloc
</code></pre> 
<h2>Monotonic clock</h2> 
<p>By default, Redis will build using the POSIX clock_gettime function as the monotonic clock source. On most modern systems, the internal processor clock can be used to improve performance. Cautions can be found here: <a href="http://oliveryang.net/2015/09/pitfalls-of-TSC-usage/">http://oliveryang.net/2015/09/pitfalls-of-TSC-usage/</a></p> 
<p>To build with support for the processor's internal instruction clock, use:</p> 
<pre><code>% make CFLAGS="-DUSE_PROCESSOR_CLOCK"
</code></pre> 
<h2>Verbose build</h2> 
<p>Redis will build with a user-friendly colorized output by default. If you want to see a more verbose output, use the following:</p> 
<pre><code>% make V=1
</code></pre> 
<h2>Running Redis</h2> 
<p>To run Redis with the default configuration, just type:</p> 
<pre><code>% cd src
% ./redis-server
</code></pre> 
<p>If you want to provide your redis.conf, you have to run it using an additional parameter (the path of the configuration file):</p> 
<pre><code>% cd src
% ./redis-server /path/to/redis.conf
</code></pre> 
<p>It is possible to alter the Redis configuration by passing parameters directly as options using the command line. Examples:</p> 
<pre><code>% ./redis-server --port 9999 --replicaof 127.0.0.1 6379
% ./redis-server /etc/redis/6379.conf --loglevel debug
</code></pre> 
<p>All the options in redis.conf are also supported as options using the command line, with exactly the same name.</p> 
<h2>Running Redis with TLS:</h2> 
<p>Please consult the <a href="https://raw.githubusercontent.com/redis/redis/unstable/TLS.md">TLS.md</a> file for more information on how to use Redis with TLS.</p> 
<h2>Playing with Redis</h2> 
<p>You can use redis-cli to play with Redis. Start a redis-server instance, then in another terminal try the following:</p> 
<pre><code>% cd src
% ./redis-cli
redis&gt; ping
PONG
redis&gt; set foo bar
OK
redis&gt; get foo
"bar"
redis&gt; incr mycounter
(integer) 1
redis&gt; incr mycounter
(integer) 2
redis&gt;
</code></pre> 
<p>You can find the list of all the available commands at <a href="https://redis.io/commands">https://redis.io/commands</a>.</p> 
<h2>Installing Redis</h2> 
<p>In order to install Redis binaries into /usr/local/bin, just use:</p> 
<pre><code>% make install
</code></pre> 
<p>You can use <code>make PREFIX=/some/other/directory install</code> if you wish to use a different destination.</p> 
<p><code>make install</code> will just install binaries in your system, but will not configure init scripts and configuration files in the appropriate place. This is not needed if you just want to play a bit with Redis, but if you are installing it the proper way for a production system, we have a script that does this for Ubuntu and Debian systems:</p> 
<pre><code>% cd utils
% ./install_server.sh
</code></pre> 
<p><em>Note</em>: <code>install_server.sh</code> will not work on Mac OSX; it is built for Linux only.</p> 
<p>The script will ask you a few questions and will setup everything you need to run Redis properly as a background daemon that will start again on system reboots.</p> 
<p>You'll be able to stop and start Redis using the script named <code>/etc/init.d/redis_&lt;portnumber&gt;</code>, for instance <code>/etc/init.d/redis_6379</code>.</p> 
<h2>Code contributions</h2> 
<p>By contributing code to the Redis project in any form, including sending a pull request via GitHub, a code fragment or patch via private email or public discussion groups, you agree to release your code under the terms of the <a href="https://github.com/redis/redis/raw/unstable/CONTRIBUTING.md">Redis Software Grant and Contributor License Agreement</a>. Redis software contains contributions to the original Redis core project, which are owned by their contributors and licensed under the 3BSD license. Any copy of that license in this repository applies only to those contributions. Redis releases all Redis project versions from 7.4.x and thereafter under the RSALv2/SSPL dual-license as described in the <a href="https://github.com/redis/redis/raw/unstable/LICENSE.txt">LICENSE.txt</a> file included in the Redis source distribution.</p> 
<p>Please see the <a href="https://github.com/redis/redis/raw/unstable/CONTRIBUTING.md">CONTRIBUTING.md</a> file in this source distribution for more information. For security bugs and vulnerabilities, please see <a href="https://github.com/redis/redis/raw/unstable/SECURITY.md">SECURITY.md</a>.</p> 
<h2>Redis Trademarks</h2> 
<p>The purpose of a trademark is to identify the goods and services of a person or company without causing confusion. As the registered owner of its name and logo, Redis accepts certain limited uses of its trademarks but it has requirements that must be followed as described in its Trademark Guidelines available at: <a href="https://redis.com/legal/trademark-guidelines/">https://redis.com/legal/trademark-guidelines/</a>.</p> 
<h1>Redis internals</h1> 
<p>If you are reading this README you are likely in front of a Github page or you just untarred the Redis distribution tar ball. In both the cases you are basically one step away from the source code, so here we explain the Redis source code layout, what is in each file as a general idea, the most important functions and structures inside the Redis server and so forth. We keep all the discussion at a high level without digging into the details since this document would be huge otherwise and our code base changes continuously, but a general idea should be a good starting point to understand more. Moreover most of the code is heavily commented and easy to follow.</p> 
<h2>Source code layout</h2> 
<p>The Redis root directory just contains this README, the Makefile which calls the real Makefile inside the <code>src</code> directory and an example configuration for Redis and Sentinel. You can find a few shell scripts that are used in order to execute the Redis, Redis Cluster and Redis Sentinel unit tests, which are implemented inside the <code>tests</code> directory.</p> 
<p>Inside the root are the following important directories:</p> 
<ul> 
 <li><code>src</code>: contains the Redis implementation, written in C.</li> 
 <li><code>tests</code>: contains the unit tests, implemented in Tcl.</li> 
 <li><code>deps</code>: contains libraries Redis uses. Everything needed to compile Redis is inside this directory; your system just needs to provide <code>libc</code>, a POSIX compatible interface and a C compiler. Notably <code>deps</code> contains a copy of <code>jemalloc</code>, which is the default allocator of Redis under Linux. Note that under <code>deps</code> there are also things which started with the Redis project, but for which the main repository is not <code>redis/redis</code>.</li> 
</ul> 
<p>There are a few more directories but they are not very important for our goals here. We'll focus mostly on <code>src</code>, where the Redis implementation is contained, exploring what there is inside each file. The order in which files are exposed is the logical one to follow in order to disclose different layers of complexity incrementally.</p> 
<p>Note: lately Redis was refactored quite a bit. Function names and file names have been changed, so you may find that this documentation reflects the <code>unstable</code> branch more closely. For instance, in Redis 3.0 the <code>server.c</code> and <code>server.h</code> files were named <code>redis.c</code> and <code>redis.h</code>. However the overall structure is the same. Keep in mind that all the new developments and pull requests should be performed against the <code>unstable</code> branch.</p> 
<h2>server.h</h2> 
<p>The simplest way to understand how a program works is to understand the data structures it uses. So we'll start from the main header file of Redis, which is <code>server.h</code>.</p> 
<p>All the server configuration and in general all the shared state is defined in a global structure called <code>server</code>, of type <code>struct redisServer</code>. A few important fields in this structure are:</p> 
<ul> 
 <li><code>server.db</code> is an array of Redis databases, where data is stored.</li> 
 <li><code>server.commands</code> is the command table.</li> 
 <li><code>server.clients</code> is a linked list of clients connected to the server.</li> 
 <li><code>server.master</code> is a special client, the master, if the instance is a replica.</li> 
</ul> 
<p>There are tons of other fields. Most fields are commented directly inside the structure definition.</p> 
<p>Another important Redis data structure is the one defining a client. In the past it was called <code>redisClient</code>, now just <code>client</code>. The structure has many fields, here we'll just show the main ones:</p> 
<pre><code class="language-c">struct client {
    int fd;
    sds querybuf;
    int argc;
    robj **argv;
    redisDb *db;
    int flags;
    list *reply;
    // ... many other fields ...
    char buf[PROTO_REPLY_CHUNK_BYTES];
}
</code></pre> 
<p>The client structure defines a <em>connected client</em>:</p> 
<ul> 
 <li>The <code>fd</code> field is the client socket file descriptor.</li> 
 <li><code>argc</code> and <code>argv</code> are populated with the command the client is executing, so that functions implementing a given Redis command can read the arguments.</li> 
 <li><code>querybuf</code> accumulates the requests from the client, which are parsed by the Redis server according to the Redis protocol and executed by calling the implementations of the commands the client is executing.</li> 
 <li><code>reply</code> and <code>buf</code> are dynamic and static buffers that accumulate the replies the server sends to the client. These buffers are incrementally written to the socket as soon as the file descriptor is writable.</li> 
</ul> 
<p>As you can see in the client structure above, arguments in a command are described as <code>robj</code> structures. The following is the full <code>robj</code> structure, which defines a <em>Redis object</em>:</p> 
<pre><code class="language-c">struct redisObject {
    unsigned type:4;
    unsigned encoding:4;
    unsigned lru:LRU_BITS; /* LRU time (relative to global lru_clock) or
                            * LFU data (least significant 8 bits frequency
                            * and most significant 16 bits access time). */
    int refcount;
    void *ptr;
};
</code></pre> 
<p>Basically this structure can represent all the basic Redis data types like strings, lists, sets, sorted sets and so forth. The interesting thing is that it has a <code>type</code> field, so that it is possible to know what type a given object has, and a <code>refcount</code>, so that the same object can be referenced in multiple places without allocating it multiple times. Finally the <code>ptr</code> field points to the actual representation of the object, which might vary even for the same type, depending on the <code>encoding</code> used.</p> 
<p>Redis objects are used extensively in the Redis internals, however in order to avoid the overhead of indirect accesses, recently in many places we just use plain dynamic strings not wrapped inside a Redis object.</p> 
<h2>server.c</h2> 
<p>This is the entry point of the Redis server, where the <code>main()</code> function is defined. The following are the most important steps in order to startup the Redis server.</p> 
<ul> 
 <li><code>initServerConfig()</code> sets up the default values of the <code>server</code> structure.</li> 
 <li><code>initServer()</code> allocates the data structures needed to operate, setup the listening socket, and so forth.</li> 
 <li><code>aeMain()</code> starts the event loop which listens for new connections.</li> 
</ul> 
<p>There are two special functions called periodically by the event loop:</p> 
<ol> 
 <li><code>serverCron()</code> is called periodically (according to <code>server.hz</code> frequency), and performs tasks that must be performed from time to time, like checking for timed out clients.</li> 
 <li><code>beforeSleep()</code> is called every time the event loop fired, Redis served a few requests, and is returning back into the event loop.</li> 
</ol> 
<p>Inside server.c you can find code that handles other vital things of the Redis server:</p> 
<ul> 
 <li><code>call()</code> is used in order to call a given command in the context of a given client.</li> 
 <li><code>activeExpireCycle()</code> handles eviction of keys with a time to live set via the <code>EXPIRE</code> command.</li> 
 <li><code>performEvictions()</code> is called when a new write command should be performed but Redis is out of memory according to the <code>maxmemory</code> directive.</li> 
 <li>The global variable <code>redisCommandTable</code> defines all the Redis commands, specifying the name of the command, the function implementing the command, the number of arguments required, and other properties of each command.</li> 
</ul> 
<h2>commands.c</h2> 
<p>This file is auto generated by utils/generate-command-code.py, the content is based on the JSON files in the src/commands folder. These are meant to be the single source of truth about the Redis commands, and all the metadata about them. These JSON files are not meant to be used by anyone directly, instead that metadata can be obtained via the <code>COMMAND</code> command.</p> 
<h2>networking.c</h2> 
<p>This file defines all the I/O functions with clients, masters and replicas (which in Redis are just special clients):</p> 
<ul> 
 <li><code>createClient()</code> allocates and initializes a new client.</li> 
 <li>The <code>addReply*()</code> family of functions are used by command implementations in order to append data to the client structure, that will be transmitted to the client as a reply for a given command executed.</li> 
 <li><code>writeToClient()</code> transmits the data pending in the output buffers to the client and is called by the <em>writable event handler</em> <code>sendReplyToClient()</code>.</li> 
 <li><code>readQueryFromClient()</code> is the <em>readable event handler</em> and accumulates data read from the client into the query buffer.</li> 
 <li><code>processInputBuffer()</code> is the entry point in order to parse the client query buffer according to the Redis protocol. Once commands are ready to be processed, it calls <code>processCommand()</code> which is defined inside <code>server.c</code> in order to actually execute the command.</li> 
 <li><code>freeClient()</code> deallocates, disconnects and removes a client.</li> 
</ul> 
<h2>aof.c and rdb.c</h2> 
<p>As you can guess from the names, these files implement the RDB and AOF persistence for Redis. Redis uses a persistence model based on the <code>fork()</code> system call in order to create a process with the same (shared) memory content of the main Redis process. This secondary process dumps the content of the memory on disk. This is used by <code>rdb.c</code> to create the snapshots on disk and by <code>aof.c</code> in order to perform the AOF rewrite when the append only file gets too big.</p> 
<p>The implementation inside <code>aof.c</code> has additional functions in order to implement an API that allows commands to append new commands into the AOF file as clients execute them.</p> 
<p>The <code>call()</code> function defined inside <code>server.c</code> is responsible for calling the functions that in turn will write the commands into the AOF.</p> 
<h2>db.c</h2> 
<p>Certain Redis commands operate on specific data types; others are general. Examples of generic commands are <code>DEL</code> and <code>EXPIRE</code>. They operate on keys and not on their values specifically. All those generic commands are defined inside <code>db.c</code>.</p> 
<p>Moreover <code>db.c</code> implements an API in order to perform certain operations on the Redis dataset without directly accessing the internal data structures.</p> 
<p>The most important functions inside <code>db.c</code> which are used in many command implementations are the following:</p> 
<ul> 
 <li><code>lookupKeyRead()</code> and <code>lookupKeyWrite()</code> are used in order to get a pointer to the value associated to a given key, or <code>NULL</code> if the key does not exist.</li> 
 <li><code>dbAdd()</code> and its higher level counterpart <code>setKey()</code> create a new key in a Redis database.</li> 
 <li><code>dbDelete()</code> removes a key and its associated value.</li> 
 <li><code>emptyData()</code> removes an entire single database or all the databases defined.</li> 
</ul> 
<p>The rest of the file implements the generic commands exposed to the client.</p> 
<h2>object.c</h2> 
<p>The <code>robj</code> structure defining Redis objects was already described. Inside <code>object.c</code> there are all the functions that operate with Redis objects at a basic level, like functions to allocate new objects, handle the reference counting and so forth. Notable functions inside this file:</p> 
<ul> 
 <li><code>incrRefCount()</code> and <code>decrRefCount()</code> are used in order to increment or decrement an object reference count. When it drops to 0 the object is finally freed.</li> 
 <li><code>createObject()</code> allocates a new object. There are also specialized functions to allocate string objects having a specific content, like <code>createStringObjectFromLongLong()</code> and similar functions.</li> 
</ul> 
<p>This file also implements the <code>OBJECT</code> command.</p> 
<h2>replication.c</h2> 
<p>This is one of the most complex files inside Redis, it is recommended to approach it only after getting a bit familiar with the rest of the code base. In this file there is the implementation of both the master and replica role of Redis.</p> 
<p>One of the most important functions inside this file is <code>replicationFeedSlaves()</code> that writes commands to the clients representing replica instances connected to our master, so that the replicas can get the writes performed by the clients: this way their data set will remain synchronized with the one in the master.</p> 
<p>This file also implements both the <code>SYNC</code> and <code>PSYNC</code> commands that are used in order to perform the first synchronization between masters and replicas, or to continue the replication after a disconnection.</p> 
<h2>Script</h2> 
<p>The script unit is composed of 3 units:</p> 
<ul> 
 <li><code>script.c</code> - integration of scripts with Redis (commands execution, set replication/resp, ...)</li> 
 <li><code>script_lua.c</code> - responsible to execute Lua code, uses script.c to interact with Redis from within the Lua code.</li> 
 <li><code>function_lua.c</code> - contains the Lua engine implementation, uses script_lua.c to execute the Lua code.</li> 
 <li><code>functions.c</code> - contains Redis Functions implementation (FUNCTION command), uses functions_lua.c if the function it wants to invoke needs the Lua engine.</li> 
 <li><code>eval.c</code> - contains the <code>eval</code> implementation using <code>script_lua.c</code> to invoke the Lua code.</li> 
</ul> 
<h2>Other C files</h2> 
<ul> 
 <li><code>t_hash.c</code>, <code>t_list.c</code>, <code>t_set.c</code>, <code>t_string.c</code>, <code>t_zset.c</code> and <code>t_stream.c</code> contains the implementation of the Redis data types. They implement both an API to access a given data type, and the client command implementations for these data types.</li> 
 <li><code>ae.c</code> implements the Redis event loop, it's a self contained library which is simple to read and understand.</li> 
 <li><code>sds.c</code> is the Redis string library, check <a href="https://github.com/antirez/sds">https://github.com/antirez/sds</a> for more information.</li> 
 <li><code>anet.c</code> is a library to use POSIX networking in a simpler way compared to the raw interface exposed by the kernel.</li> 
 <li><code>dict.c</code> is an implementation of a non-blocking hash table which rehashes incrementally.</li> 
 <li><code>cluster.c</code> implements the Redis Cluster. Probably a good read only after being very familiar with the rest of the Redis code base. If you want to read <code>cluster.c</code> make sure to read the <a href="https://redis.io/topics/cluster-spec">Redis Cluster specification</a>.</li> 
</ul> 
<h2>Anatomy of a Redis command</h2> 
<p>All the Redis commands are defined in the following way:</p> 
<pre><code class="language-c">void foobarCommand(client *c) {
    printf("%s",c-&gt;argv[1]-&gt;ptr); /* Do something with the argument. */
    addReply(c,shared.ok); /* Reply something to the client. */
}
</code></pre> 
<p>The command function is referenced by a JSON file, together with its metadata, see <code>commands.c</code> described above for details. The command flags are documented in the comment above the <code>struct redisCommand</code> in <code>server.h</code>. For other details, please refer to the <code>COMMAND</code> command. <a href="https://redis.io/commands/command/">https://redis.io/commands/command/</a></p> 
<p>After the command operates in some way, it returns a reply to the client, usually using <code>addReply()</code> or a similar function defined inside <code>networking.c</code>.</p> 
<p>There are tons of command implementations inside the Redis source code that can serve as examples of actual commands implementations (e.g. pingCommand). Writing a few toy commands can be a good exercise to get familiar with the code base.</p> 
<p>There are also many other files not described here, but it is useless to cover everything. We just want to help you with the first steps. Eventually you'll find your way inside the Redis code base :-)</p> 
<p>Enjoy!</p></description>
</item>
<item>
<title>hiyouga/LLaMA-Factory</title>
<link>https://github.com/hiyouga/LLaMA-Factory</link>
<description>Content Length: 47386

<p>Unify Efficient Fine-tuning of 100+ LLMs</p><hr /><p><img alt="# LLaMA Factory" src="https://raw.githubusercontent.com/hiyouga/LLaMA-Factory/main/assets/logo.png" /></p> 
<p><a href="https://github.com/hiyouga/LLaMA-Factory/stargazers"><img alt="GitHub Repo stars" src="https://img.shields.io/github/stars/hiyouga/LLaMA-Factory?style=social" /></a> <a href="https://raw.githubusercontent.com/hiyouga/LLaMA-Factory/main/LICENSE"><img alt="GitHub Code License" src="https://img.shields.io/github/license/hiyouga/LLaMA-Factory" /></a> <a href="https://github.com/hiyouga/LLaMA-Factory/commits/main"><img alt="GitHub last commit" src="https://img.shields.io/github/last-commit/hiyouga/LLaMA-Factory" /></a> <a href="https://pypi.org/project/llmtuner/"><img alt="PyPI" src="https://img.shields.io/pypi/v/llmtuner" /></a> <a href="https://pypi.org/project/llmtuner/"><img alt="Downloads" src="https://static.pepy.tech/badge/llmtuner" /></a> <a href="https://raw.githubusercontent.com/hiyouga/LLaMA-Factory/main/#projects-using-llama-factory"><img alt="Citation" src="https://img.shields.io/badge/citation-26-green" /></a> <a href="https://github.com/hiyouga/LLaMA-Factory/pulls"><img alt="GitHub pull request" src="https://img.shields.io/badge/PRs-welcome-blue" /></a> <a href="https://discord.gg/rKfvV9r9FK"><img alt="Discord" src="https://dcbadge.vercel.app/api/server/rKfvV9r9FK?compact=true&amp;style=flat" /></a> <a href="https://twitter.com/llamafactory_ai"><img alt="Twitter" src="https://img.shields.io/twitter/follow/llamafactory_ai" /></a> <a href="https://huggingface.co/spaces/hiyouga/LLaMA-Board"><img alt="Spaces" src="https://img.shields.io/badge/%F0%9F%A4%97-Open%20in%20Spaces-blue" /></a> <a href="https://modelscope.cn/studios/hiyouga/LLaMA-Board"><img alt="Studios" src="https://img.shields.io/badge/ModelScope-Open%20in%20Studios-blue" /></a> <a href="https://colab.research.google.com/drive/1eRTPn37ltBbYsISy9Aw2NuI2Aq5CQrD9?usp=sharing"><img alt="Open in Colab" src="https://colab.research.google.com/assets/colab-badge.svg?sanitize=true" /></a></p> 
<p>👋 Join our <a href="https://raw.githubusercontent.com/hiyouga/LLaMA-Factory/main/assets/wechat.jpg">WeChat</a>.</p> 
<p>[ English | <a href="https://raw.githubusercontent.com/hiyouga/LLaMA-Factory/main/README_zh.md">中文</a> ]</p> 
<p><strong>Fine-tuning a large language model can be easy as...</strong></p> 
<p><a href="https://github.com/hiyouga/LLaMA-Factory/assets/16256802/9840a653-7e9c-41c8-ae89-7ace5698baf6">https://github.com/hiyouga/LLaMA-Factory/assets/16256802/9840a653-7e9c-41c8-ae89-7ace5698baf6</a></p> 
<p>Choose your path:</p> 
<ul> 
 <li><strong>Colab</strong>: <a href="https://colab.research.google.com/drive/1eRTPn37ltBbYsISy9Aw2NuI2Aq5CQrD9?usp=sharing">https://colab.research.google.com/drive/1eRTPn37ltBbYsISy9Aw2NuI2Aq5CQrD9?usp=sharing</a></li> 
 <li><strong>Local machine</strong>: Please refer to <a href="https://raw.githubusercontent.com/hiyouga/LLaMA-Factory/main/#getting-started">usage</a></li> 
</ul> 
<h2>Table of Contents</h2> 
<ul> 
 <li><a href="https://raw.githubusercontent.com/hiyouga/LLaMA-Factory/main/#features">Features</a></li> 
 <li><a href="https://raw.githubusercontent.com/hiyouga/LLaMA-Factory/main/#benchmark">Benchmark</a></li> 
 <li><a href="https://raw.githubusercontent.com/hiyouga/LLaMA-Factory/main/#changelog">Changelog</a></li> 
 <li><a href="https://raw.githubusercontent.com/hiyouga/LLaMA-Factory/main/#supported-models">Supported Models</a></li> 
 <li><a href="https://raw.githubusercontent.com/hiyouga/LLaMA-Factory/main/#supported-training-approaches">Supported Training Approaches</a></li> 
 <li><a href="https://raw.githubusercontent.com/hiyouga/LLaMA-Factory/main/#provided-datasets">Provided Datasets</a></li> 
 <li><a href="https://raw.githubusercontent.com/hiyouga/LLaMA-Factory/main/#requirement">Requirement</a></li> 
 <li><a href="https://raw.githubusercontent.com/hiyouga/LLaMA-Factory/main/#getting-started">Getting Started</a></li> 
 <li><a href="https://raw.githubusercontent.com/hiyouga/LLaMA-Factory/main/#projects-using-llama-factory">Projects using LLaMA Factory</a></li> 
 <li><a href="https://raw.githubusercontent.com/hiyouga/LLaMA-Factory/main/#license">License</a></li> 
 <li><a href="https://raw.githubusercontent.com/hiyouga/LLaMA-Factory/main/#citation">Citation</a></li> 
 <li><a href="https://raw.githubusercontent.com/hiyouga/LLaMA-Factory/main/#acknowledgement">Acknowledgement</a></li> 
</ul> 
<h2>Features</h2> 
<ul> 
 <li><strong>Various models</strong>: LLaMA, Mistral, Mixtral-MoE, Qwen, Yi, Gemma, Baichuan, ChatGLM, Phi, etc.</li> 
 <li><strong>Integrated methods</strong>: (Continuous) pre-training, supervised fine-tuning, reward modeling, PPO and DPO.</li> 
 <li><strong>Scalable resources</strong>: 32-bit full-tuning, 16-bit freeze-tuning, 16-bit LoRA and 2/4/8-bit QLoRA via AQLM/AWQ/GPTQ/LLM.int8.</li> 
 <li><strong>Advanced algorithms</strong>: GaLore, DoRA, LongLoRA, LLaMA Pro, LoRA+, LoftQ and Agent tuning.</li> 
 <li><strong>Practical tricks</strong>: FlashAttention-2, Unsloth, RoPE scaling, NEFTune and rsLoRA.</li> 
 <li><strong>Experiment monitors</strong>: LlamaBoard, TensorBoard, Wandb, MLflow, etc.</li> 
 <li><strong>Faster inference</strong>: OpenAI-style API, Gradio UI and CLI with vLLM worker.</li> 
</ul> 
<h2>Benchmark</h2> 
<p>Compared to ChatGLM's <a href="https://github.com/THUDM/ChatGLM2-6B/tree/main/ptuning">P-Tuning</a>, LLaMA-Factory's LoRA tuning offers up to <strong>3.7 times faster</strong> training speed with a better Rouge score on the advertising text generation task. By leveraging 4-bit quantization technique, LLaMA-Factory's QLoRA further improves the efficiency regarding the GPU memory.</p> 
<p><img alt="benchmark" src="https://raw.githubusercontent.com/hiyouga/LLaMA-Factory/main/assets/benchmark.svg?sanitize=true" /></p> 
<details>
 Definitions 
 <ul> 
  <li><strong>Training Speed</strong>: the number of training samples processed per second during the training. (bs=4, cutoff_len=1024)</li> 
  <li><strong>Rouge Score</strong>: Rouge-2 score on the development set of the <a href="https://aclanthology.org/D19-1321.pdf">advertising text generation</a> task. (bs=4, cutoff_len=1024)</li> 
  <li><strong>GPU Memory</strong>: Peak GPU memory usage in 4-bit quantized training. (bs=1, cutoff_len=1024)</li> 
  <li>We adopt <code>pre_seq_len=128</code> for ChatGLM's P-Tuning and <code>lora_rank=32</code> for LLaMA-Factory's LoRA tuning.</li> 
 </ul> 
</details> 
<h2>Changelog</h2> 
<p>[24/03/21] Our paper "<a href="https://arxiv.org/abs/2403.13372">LlamaFactory: Unified Efficient Fine-Tuning of 100+ Language Models</a>" is available at arXiv!</p> 
<p>[24/03/20] We supported <strong>FSDP+QLoRA</strong> that fine-tunes a 70B model on 2x24GB GPUs. See <code>examples/fsdp_qlora</code> for usage.</p> 
<p>[24/03/13] We supported <strong><a href="https://arxiv.org/abs/2402.12354">LoRA+</a></strong>. Try <code>loraplus_lr_ratio=16.0</code> to enable LoRA+ algorithm.</p> 
<p>[24/03/07] We supported gradient low-rank projection (<strong><a href="https://arxiv.org/abs/2403.03507">GaLore</a></strong>) algorithm. Try <code>--use_galore</code> to use the memory-efficient optimizer.</p> 
<p>[24/03/07] We integrated <strong><a href="https://github.com/vllm-project/vllm">vLLM</a></strong> for faster and concurrent inference. Try <code>--infer_backend vllm</code> to enjoy <strong>270%</strong> inference speed. (LoRA is not yet supported, merge it first.)</p> 
<details>
 Full Changelog 
 <p>[24/02/28] We supported weight-decomposed LoRA (<strong><a href="https://arxiv.org/abs/2402.09353">DoRA</a></strong>). Try <code>--use_dora</code> to activate DoRA training.</p> 
 <p>[24/02/15] We supported <strong>block expansion</strong> proposed by <a href="https://github.com/TencentARC/LLaMA-Pro">LLaMA Pro</a>. See <code>examples/extras/llama_pro</code> for usage.</p> 
 <p>[24/02/05] Qwen1.5 (Qwen2 beta version) series models are supported in LLaMA-Factory. Check this <a href="https://qwenlm.github.io/blog/qwen1.5/">blog post</a> for details.</p> 
 <p>[24/01/18] We supported <strong>agent tuning</strong> for most models, equipping model with tool using abilities by fine-tuning with <code>--dataset glaive_toolcall</code>.</p> 
 <p>[23/12/23] We supported <strong><a href="https://github.com/unslothai/unsloth">unsloth</a></strong>'s implementation to boost LoRA tuning for the LLaMA, Mistral and Yi models. Try <code>--use_unsloth</code> argument to activate unsloth patch. It achieves <strong>170%</strong> speed in our benchmark, check <a href="https://github.com/hiyouga/LLaMA-Factory/wiki/Performance-comparison">this page</a> for details.</p> 
 <p>[23/12/12] We supported fine-tuning the latest MoE model <strong><a href="https://huggingface.co/mistralai/Mixtral-8x7B-v0.1">Mixtral 8x7B</a></strong> in our framework. See hardware requirement <a href="https://raw.githubusercontent.com/hiyouga/LLaMA-Factory/main/#hardware-requirement">here</a>.</p> 
 <p>[23/12/01] We supported downloading pre-trained models and datasets from the <strong><a href="https://modelscope.cn/models">ModelScope Hub</a></strong> for Chinese mainland users. See <a href="https://raw.githubusercontent.com/hiyouga/LLaMA-Factory/main/#use-modelscope-hub-optional">this tutorial</a> for usage.</p> 
 <p>[23/10/21] We supported <strong><a href="https://arxiv.org/abs/2310.05914">NEFTune</a></strong> trick for fine-tuning. Try <code>--neftune_noise_alpha</code> argument to activate NEFTune, e.g., <code>--neftune_noise_alpha 5</code>.</p> 
 <p>[23/09/27] We supported <strong>$S^2$-Attn</strong> proposed by <a href="https://github.com/dvlab-research/LongLoRA">LongLoRA</a> for the LLaMA models. Try <code>--shift_attn</code> argument to enable shift short attention.</p> 
 <p>[23/09/23] We integrated MMLU, C-Eval and CMMLU benchmarks in this repo. See <a href="https://raw.githubusercontent.com/hiyouga/LLaMA-Factory/main/#evaluation">this example</a> to evaluate your models.</p> 
 <p>[23/09/10] We supported <strong><a href="https://github.com/Dao-AILab/flash-attention">FlashAttention-2</a></strong>. Try <code>--flash_attn</code> argument to enable FlashAttention-2 if you are using RTX4090, A100 or H100 GPUs.</p> 
 <p>[23/08/12] We supported <strong>RoPE scaling</strong> to extend the context length of the LLaMA models. Try <code>--rope_scaling linear</code> argument in training and <code>--rope_scaling dynamic</code> argument at inference to extrapolate the position embeddings.</p> 
 <p>[23/08/11] We supported <strong><a href="https://arxiv.org/abs/2305.18290">DPO training</a></strong> for instruction-tuned models. See <a href="https://raw.githubusercontent.com/hiyouga/LLaMA-Factory/main/#dpo-training">this example</a> to train your models.</p> 
 <p>[23/07/31] We supported <strong>dataset streaming</strong>. Try <code>--streaming</code> and <code>--max_steps 10000</code> arguments to load your dataset in streaming mode.</p> 
 <p>[23/07/29] We released two instruction-tuned 13B models at Hugging Face. See these Hugging Face Repos (<a href="https://huggingface.co/hiyouga/Llama-2-Chinese-13b-chat">LLaMA-2</a> / <a href="https://huggingface.co/hiyouga/Baichuan-13B-sft">Baichuan</a>) for details.</p> 
 <p>[23/07/18] We developed an <strong>all-in-one Web UI</strong> for training, evaluation and inference. Try <code>train_web.py</code> to fine-tune models in your Web browser. Thank <a href="https://github.com/KanadeSiina">@KanadeSiina</a> and <a href="https://github.com/codemayq">@codemayq</a> for their efforts in the development.</p> 
 <p>[23/07/09] We released <strong><a href="https://github.com/hiyouga/FastEdit">FastEdit</a></strong> ⚡🩹, an easy-to-use package for editing the factual knowledge of large language models efficiently. Please follow <a href="https://github.com/hiyouga/FastEdit">FastEdit</a> if you are interested.</p> 
 <p>[23/06/29] We provided a <strong>reproducible example</strong> of training a chat model using instruction-following datasets, see <a href="https://huggingface.co/hiyouga/Baichuan-7B-sft">Baichuan-7B-sft</a> for details.</p> 
 <p>[23/06/22] We aligned the <a href="https://raw.githubusercontent.com/hiyouga/LLaMA-Factory/main/src/api_demo.py">demo API</a> with the <a href="https://platform.openai.com/docs/api-reference/chat">OpenAI's</a> format where you can insert the fine-tuned model in <strong>arbitrary ChatGPT-based applications</strong>.</p> 
 <p>[23/06/03] We supported quantized training and inference (aka <strong><a href="https://github.com/artidoro/qlora">QLoRA</a></strong>). Try <code>--quantization_bit 4/8</code> argument to work with quantized models.</p> 
</details> 
<h2>Supported Models</h2> 
<table> 
 <thead> 
  <tr> 
   <th>Model</th> 
   <th>Model size</th> 
   <th>Default module</th> 
   <th>Template</th> 
  </tr> 
 </thead> 
 <tbody> 
  <tr> 
   <td><a href="https://huggingface.co/baichuan-inc">Baichuan2</a></td> 
   <td>7B/13B</td> 
   <td>W_pack</td> 
   <td>baichuan2</td> 
  </tr> 
  <tr> 
   <td><a href="https://huggingface.co/bigscience/bloom">BLOOM</a></td> 
   <td>560M/1.1B/1.7B/3B/7.1B/176B</td> 
   <td>query_key_value</td> 
   <td>-</td> 
  </tr> 
  <tr> 
   <td><a href="https://huggingface.co/bigscience/bloomz">BLOOMZ</a></td> 
   <td>560M/1.1B/1.7B/3B/7.1B/176B</td> 
   <td>query_key_value</td> 
   <td>-</td> 
  </tr> 
  <tr> 
   <td><a href="https://huggingface.co/THUDM/chatglm3-6b">ChatGLM3</a></td> 
   <td>6B</td> 
   <td>query_key_value</td> 
   <td>chatglm3</td> 
  </tr> 
  <tr> 
   <td><a href="https://huggingface.co/deepseek-ai">DeepSeek (MoE)</a></td> 
   <td>7B/16B/67B</td> 
   <td>q_proj,v_proj</td> 
   <td>deepseek</td> 
  </tr> 
  <tr> 
   <td><a href="https://huggingface.co/tiiuae">Falcon</a></td> 
   <td>7B/40B/180B</td> 
   <td>query_key_value</td> 
   <td>falcon</td> 
  </tr> 
  <tr> 
   <td><a href="https://huggingface.co/google">Gemma</a></td> 
   <td>2B/7B</td> 
   <td>q_proj,v_proj</td> 
   <td>gemma</td> 
  </tr> 
  <tr> 
   <td><a href="https://huggingface.co/internlm">InternLM2</a></td> 
   <td>7B/20B</td> 
   <td>wqkv</td> 
   <td>intern2</td> 
  </tr> 
  <tr> 
   <td><a href="https://github.com/facebookresearch/llama">LLaMA</a></td> 
   <td>7B/13B/33B/65B</td> 
   <td>q_proj,v_proj</td> 
   <td>-</td> 
  </tr> 
  <tr> 
   <td><a href="https://huggingface.co/meta-llama">LLaMA-2</a></td> 
   <td>7B/13B/70B</td> 
   <td>q_proj,v_proj</td> 
   <td>llama2</td> 
  </tr> 
  <tr> 
   <td><a href="https://huggingface.co/mistralai">Mistral</a></td> 
   <td>7B</td> 
   <td>q_proj,v_proj</td> 
   <td>mistral</td> 
  </tr> 
  <tr> 
   <td><a href="https://huggingface.co/mistralai">Mixtral</a></td> 
   <td>8x7B</td> 
   <td>q_proj,v_proj</td> 
   <td>mistral</td> 
  </tr> 
  <tr> 
   <td><a href="https://huggingface.co/allenai">OLMo</a></td> 
   <td>1B/7B</td> 
   <td>att_proj</td> 
   <td>olmo</td> 
  </tr> 
  <tr> 
   <td><a href="https://huggingface.co/microsoft">Phi-1.5/2</a></td> 
   <td>1.3B/2.7B</td> 
   <td>q_proj,v_proj</td> 
   <td>-</td> 
  </tr> 
  <tr> 
   <td><a href="https://huggingface.co/Qwen">Qwen</a></td> 
   <td>1.8B/7B/14B/72B</td> 
   <td>c_attn</td> 
   <td>qwen</td> 
  </tr> 
  <tr> 
   <td><a href="https://huggingface.co/Qwen">Qwen1.5</a></td> 
   <td>0.5B/1.8B/4B/7B/14B/72B</td> 
   <td>q_proj,v_proj</td> 
   <td>qwen</td> 
  </tr> 
  <tr> 
   <td><a href="https://huggingface.co/bigcode">StarCoder2</a></td> 
   <td>3B/7B/15B</td> 
   <td>q_proj,v_proj</td> 
   <td>-</td> 
  </tr> 
  <tr> 
   <td><a href="https://huggingface.co/xverse">XVERSE</a></td> 
   <td>7B/13B/65B</td> 
   <td>q_proj,v_proj</td> 
   <td>xverse</td> 
  </tr> 
  <tr> 
   <td><a href="https://huggingface.co/01-ai">Yi</a></td> 
   <td>6B/9B/34B</td> 
   <td>q_proj,v_proj</td> 
   <td>yi</td> 
  </tr> 
  <tr> 
   <td><a href="https://huggingface.co/IEITYuan">Yuan</a></td> 
   <td>2B/51B/102B</td> 
   <td>q_proj,v_proj</td> 
   <td>yuan</td> 
  </tr> 
 </tbody> 
</table> 
<blockquote> 
 <p>[!NOTE] <strong>Default module</strong> is used for the <code>--lora_target</code> argument, you can use <code>--lora_target all</code> to specify all the available modules.</p> 
 <p>For the "base" models, the <code>--template</code> argument can be chosen from <code>default</code>, <code>alpaca</code>, <code>vicuna</code> etc. But make sure to use the <strong>corresponding template</strong> for the "chat" models.</p> 
</blockquote> 
<p>Please refer to <a href="https://raw.githubusercontent.com/hiyouga/LLaMA-Factory/main/src/llmtuner/extras/constants.py">constants.py</a> for a full list of models we supported.</p> 
<p>You also can add a custom chat template to <a href="https://raw.githubusercontent.com/hiyouga/LLaMA-Factory/main/src/llmtuner/data/template.py">template.py</a>.</p> 
<h2>Supported Training Approaches</h2> 
<table> 
 <thead> 
  <tr> 
   <th>Approach</th> 
   <th>Full-tuning</th> 
   <th>Freeze-tuning</th> 
   <th>LoRA</th> 
   <th>QLoRA</th> 
  </tr> 
 </thead> 
 <tbody> 
  <tr> 
   <td>Pre-Training</td> 
   <td><span>✅</span></td> 
   <td><span>✅</span></td> 
   <td><span>✅</span></td> 
   <td><span>✅</span></td> 
  </tr> 
  <tr> 
   <td>Supervised Fine-Tuning</td> 
   <td><span>✅</span></td> 
   <td><span>✅</span></td> 
   <td><span>✅</span></td> 
   <td><span>✅</span></td> 
  </tr> 
  <tr> 
   <td>Reward Modeling</td> 
   <td><span>✅</span></td> 
   <td><span>✅</span></td> 
   <td><span>✅</span></td> 
   <td><span>✅</span></td> 
  </tr> 
  <tr> 
   <td>PPO Training</td> 
   <td><span>✅</span></td> 
   <td><span>✅</span></td> 
   <td><span>✅</span></td> 
   <td><span>✅</span></td> 
  </tr> 
  <tr> 
   <td>DPO Training</td> 
   <td><span>✅</span></td> 
   <td><span>✅</span></td> 
   <td><span>✅</span></td> 
   <td><span>✅</span></td> 
  </tr> 
 </tbody> 
</table> 
<blockquote> 
 <p>[!NOTE] Use <code>--quantization_bit 4</code> argument to enable QLoRA.</p> 
</blockquote> 
<h2>Provided Datasets</h2> 
<details>
 Pre-training datasets 
 <ul> 
  <li><a href="https://raw.githubusercontent.com/hiyouga/LLaMA-Factory/main/data/wiki_demo.txt">Wiki Demo (en)</a></li> 
  <li><a href="https://huggingface.co/datasets/tiiuae/falcon-refinedweb">RefinedWeb (en)</a></li> 
  <li><a href="https://huggingface.co/datasets/togethercomputer/RedPajama-Data-V2">RedPajama V2 (en)</a></li> 
  <li><a href="https://huggingface.co/datasets/olm/olm-wikipedia-20221220">Wikipedia (en)</a></li> 
  <li><a href="https://huggingface.co/datasets/pleisto/wikipedia-cn-20230720-filtered">Wikipedia (zh)</a></li> 
  <li><a href="https://huggingface.co/datasets/EleutherAI/pile">Pile (en)</a></li> 
  <li><a href="https://huggingface.co/datasets/Skywork/SkyPile-150B">SkyPile (zh)</a></li> 
  <li><a href="https://huggingface.co/datasets/bigcode/the-stack">The Stack (en)</a></li> 
  <li><a href="https://huggingface.co/datasets/bigcode/starcoderdata">StarCoder (en)</a></li> 
 </ul> 
</details> 
<details>
 Supervised fine-tuning datasets 
 <ul> 
  <li><a href="https://github.com/tatsu-lab/stanford_alpaca">Stanford Alpaca (en)</a></li> 
  <li><a href="https://github.com/ymcui/Chinese-LLaMA-Alpaca">Stanford Alpaca (zh)</a></li> 
  <li><a href="https://github.com/Instruction-Tuning-with-GPT-4/GPT-4-LLM">Alpaca GPT4 (en&amp;zh)</a></li> 
  <li><a href="https://raw.githubusercontent.com/hiyouga/LLaMA-Factory/main/data/self_cognition.json">Self Cognition (zh)</a></li> 
  <li><a href="https://huggingface.co/datasets/OpenAssistant/oasst1">Open Assistant (multilingual)</a></li> 
  <li><a href="https://huggingface.co/datasets/QingyiSi/Alpaca-CoT/tree/main/Chinese-instruction-collection">ShareGPT (zh)</a></li> 
  <li><a href="https://huggingface.co/datasets/JosephusCheung/GuanacoDataset">Guanaco Dataset (multilingual)</a></li> 
  <li><a href="https://huggingface.co/datasets/BelleGroup/train_2M_CN">BELLE 2M (zh)</a></li> 
  <li><a href="https://huggingface.co/datasets/BelleGroup/train_1M_CN">BELLE 1M (zh)</a></li> 
  <li><a href="https://huggingface.co/datasets/BelleGroup/train_0.5M_CN">BELLE 0.5M (zh)</a></li> 
  <li><a href="https://huggingface.co/datasets/BelleGroup/generated_chat_0.4M">BELLE Dialogue 0.4M (zh)</a></li> 
  <li><a href="https://huggingface.co/datasets/BelleGroup/school_math_0.25M">BELLE School Math 0.25M (zh)</a></li> 
  <li><a href="https://huggingface.co/datasets/BelleGroup/multiturn_chat_0.8M">BELLE Multiturn Chat 0.8M (zh)</a></li> 
  <li><a href="https://github.com/thunlp/UltraChat">UltraChat (en)</a></li> 
  <li><a href="https://huggingface.co/datasets/GAIR/lima">LIMA (en)</a></li> 
  <li><a href="https://huggingface.co/datasets/garage-bAInd/Open-Platypus">OpenPlatypus (en)</a></li> 
  <li><a href="https://huggingface.co/datasets/sahil2801/CodeAlpaca-20k">CodeAlpaca 20k (en)</a></li> 
  <li><a href="https://huggingface.co/datasets/QingyiSi/Alpaca-CoT">Alpaca CoT (multilingual)</a></li> 
  <li><a href="https://huggingface.co/datasets/Open-Orca/OpenOrca">OpenOrca (en)</a></li> 
  <li><a href="https://huggingface.co/datasets/Open-Orca/SlimOrca">SlimOrca (en)</a></li> 
  <li><a href="https://huggingface.co/datasets/TIGER-Lab/MathInstruct">MathInstruct (en)</a></li> 
  <li><a href="https://huggingface.co/datasets/YeungNLP/firefly-train-1.1M">Firefly 1.1M (zh)</a></li> 
  <li><a href="https://huggingface.co/datasets/wiki_qa">Wiki QA (en)</a></li> 
  <li><a href="https://huggingface.co/datasets/suolyer/webqa">Web QA (zh)</a></li> 
  <li><a href="https://huggingface.co/datasets/zxbsmk/webnovel_cn">WebNovel (zh)</a></li> 
  <li><a href="https://huggingface.co/datasets/berkeley-nest/Nectar">Nectar (en)</a></li> 
  <li><a href="https://www.modelscope.cn/datasets/deepctrl/deepctrl-sft-data">deepctrl (en&amp;zh)</a></li> 
  <li><a href="https://huggingface.co/datasets/HasturOfficial/adgen">Ad Gen (zh)</a></li> 
  <li><a href="https://huggingface.co/datasets/totally-not-an-llm/sharegpt-hyperfiltered-3k">ShareGPT Hyperfiltered (en)</a></li> 
  <li><a href="https://huggingface.co/datasets/shibing624/sharegpt_gpt4">ShareGPT4 (en&amp;zh)</a></li> 
  <li><a href="https://huggingface.co/datasets/HuggingFaceH4/ultrachat_200k">UltraChat 200k (en)</a></li> 
  <li><a href="https://huggingface.co/datasets/THUDM/AgentInstruct">AgentInstruct (en)</a></li> 
  <li><a href="https://huggingface.co/datasets/lmsys/lmsys-chat-1m">LMSYS Chat 1M (en)</a></li> 
  <li><a href="https://huggingface.co/datasets/WizardLM/WizardLM_evol_instruct_V2_196k">Evol Instruct V2 (en)</a></li> 
  <li><a href="https://huggingface.co/datasets/glaiveai/glaive-function-calling-v2">Glaive Function Calling V2 (en)</a></li> 
  <li><a href="https://huggingface.co/datasets/HuggingFaceTB/cosmopedia">Cosmopedia (en)</a></li> 
  <li><a href="https://huggingface.co/datasets/mayflowergmbh/oasst_de">Open Assistant (de)</a></li> 
  <li><a href="https://huggingface.co/datasets/mayflowergmbh/dolly-15k_de">Dolly 15k (de)</a></li> 
  <li><a href="https://huggingface.co/datasets/mayflowergmbh/alpaca-gpt4_de">Alpaca GPT4 (de)</a></li> 
  <li><a href="https://huggingface.co/datasets/mayflowergmbh/openschnabeltier_de">OpenSchnabeltier (de)</a></li> 
  <li><a href="https://huggingface.co/datasets/mayflowergmbh/evol-instruct_de">Evol Instruct (de)</a></li> 
  <li><a href="https://huggingface.co/datasets/mayflowergmbh/dolphin_de">Dolphin (de)</a></li> 
  <li><a href="https://huggingface.co/datasets/mayflowergmbh/booksum_de">Booksum (de)</a></li> 
  <li><a href="https://huggingface.co/datasets/mayflowergmbh/airoboros-3.0_de">Airoboros (de)</a></li> 
  <li><a href="https://huggingface.co/datasets/mayflowergmbh/ultra-chat_de">Ultrachat (de)</a></li> 
 </ul> 
</details> 
<details>
 Preference datasets 
 <ul> 
  <li><a href="https://huggingface.co/datasets/Anthropic/hh-rlhf">HH-RLHF (en)</a></li> 
  <li><a href="https://huggingface.co/datasets/OpenAssistant/oasst1">Open Assistant (multilingual)</a></li> 
  <li><a href="https://github.com/Instruction-Tuning-with-GPT-4/GPT-4-LLM">GPT-4 Generated Data (en&amp;zh)</a></li> 
  <li><a href="https://huggingface.co/datasets/Intel/orca_dpo_pairs">Orca DPO (en)</a></li> 
  <li><a href="https://huggingface.co/datasets/berkeley-nest/Nectar">Nectar (en)</a></li> 
  <li><a href="https://huggingface.co/datasets/mayflowergmbh/intel_orca_dpo_pairs_de">Orca DPO (de)</a></li> 
 </ul> 
</details> 
<p>Please refer to <a href="https://raw.githubusercontent.com/hiyouga/LLaMA-Factory/main/data/README.md">data/README.md</a> for details.</p> 
<p>Some datasets require confirmation before using them, so we recommend logging in with your Hugging Face account using these commands.</p> 
<pre><code class="language-bash">pip install --upgrade huggingface_hub
huggingface-cli login
</code></pre> 
<h2>Requirement</h2> 
<table> 
 <thead> 
  <tr> 
   <th>Mandatory</th> 
   <th>Minimum</th> 
   <th>Recommend</th> 
  </tr> 
 </thead> 
 <tbody> 
  <tr> 
   <td>python</td> 
   <td>3.8</td> 
   <td>3.10</td> 
  </tr> 
  <tr> 
   <td>torch</td> 
   <td>1.13.1</td> 
   <td>2.2.0</td> 
  </tr> 
  <tr> 
   <td>transformers</td> 
   <td>4.37.2</td> 
   <td>4.39.1</td> 
  </tr> 
  <tr> 
   <td>datasets</td> 
   <td>2.14.3</td> 
   <td>2.17.1</td> 
  </tr> 
  <tr> 
   <td>accelerate</td> 
   <td>0.27.2</td> 
   <td>0.28.0</td> 
  </tr> 
  <tr> 
   <td>peft</td> 
   <td>0.9.0</td> 
   <td>0.10.0</td> 
  </tr> 
  <tr> 
   <td>trl</td> 
   <td>0.8.1</td> 
   <td>0.8.1</td> 
  </tr> 
 </tbody> 
</table> 
<table> 
 <thead> 
  <tr> 
   <th>Optional</th> 
   <th>Minimum</th> 
   <th>Recommend</th> 
  </tr> 
 </thead> 
 <tbody> 
  <tr> 
   <td>CUDA</td> 
   <td>11.6</td> 
   <td>12.2</td> 
  </tr> 
  <tr> 
   <td>deepspeed</td> 
   <td>0.10.0</td> 
   <td>0.14.0</td> 
  </tr> 
  <tr> 
   <td>bitsandbytes</td> 
   <td>0.39.0</td> 
   <td>0.43.0</td> 
  </tr> 
  <tr> 
   <td>flash-attn</td> 
   <td>2.3.0</td> 
   <td>2.5.6</td> 
  </tr> 
 </tbody> 
</table> 
<h3>Hardware Requirement</h3> 
<p>* <em>estimated</em></p> 
<table> 
 <thead> 
  <tr> 
   <th>Method</th> 
   <th>Bits</th> 
   <th>7B</th> 
   <th>13B</th> 
   <th>30B</th> 
   <th>70B</th> 
   <th>8x7B</th> 
  </tr> 
 </thead> 
 <tbody> 
  <tr> 
   <td>Full</td> 
   <td>AMP</td> 
   <td>120GB</td> 
   <td>240GB</td> 
   <td>600GB</td> 
   <td>1200GB</td> 
   <td>900GB</td> 
  </tr> 
  <tr> 
   <td>Full</td> 
   <td>16</td> 
   <td>60GB</td> 
   <td>120GB</td> 
   <td>300GB</td> 
   <td>600GB</td> 
   <td>400GB</td> 
  </tr> 
  <tr> 
   <td>GaLore</td> 
   <td>16</td> 
   <td>16GB</td> 
   <td>32GB</td> 
   <td>64GB</td> 
   <td>160GB</td> 
   <td>120GB</td> 
  </tr> 
  <tr> 
   <td>Freeze</td> 
   <td>16</td> 
   <td>20GB</td> 
   <td>40GB</td> 
   <td>80GB</td> 
   <td>200GB</td> 
   <td>160GB</td> 
  </tr> 
  <tr> 
   <td>LoRA</td> 
   <td>16</td> 
   <td>16GB</td> 
   <td>32GB</td> 
   <td>64GB</td> 
   <td>160GB</td> 
   <td>120GB</td> 
  </tr> 
  <tr> 
   <td>QLoRA</td> 
   <td>8</td> 
   <td>10GB</td> 
   <td>20GB</td> 
   <td>40GB</td> 
   <td>80GB</td> 
   <td>60GB</td> 
  </tr> 
  <tr> 
   <td>QLoRA</td> 
   <td>4</td> 
   <td>6GB</td> 
   <td>12GB</td> 
   <td>24GB</td> 
   <td>48GB</td> 
   <td>30GB</td> 
  </tr> 
  <tr> 
   <td>QLoRA</td> 
   <td>2</td> 
   <td>4GB</td> 
   <td>8GB</td> 
   <td>16GB</td> 
   <td>24GB</td> 
   <td>18GB</td> 
  </tr> 
 </tbody> 
</table> 
<h2>Getting Started</h2> 
<h3>Data Preparation (optional)</h3> 
<p>Please refer to <a href="https://raw.githubusercontent.com/hiyouga/LLaMA-Factory/main/data/README.md">data/README.md</a> for checking the details about the format of dataset files. You can either use a single <code>.json</code> file or a <a href="https://huggingface.co/docs/datasets/dataset_script">dataset loading script</a> with multiple files to create a custom dataset.</p> 
<blockquote> 
 <p>[!NOTE] Please update <code>data/dataset_info.json</code> to use your custom dataset. About the format of this file, please refer to <code>data/README.md</code>.</p> 
</blockquote> 
<h3>Dependence Installation (optional)</h3> 
<pre><code class="language-bash">git clone https://github.com/hiyouga/LLaMA-Factory.git
conda create -n llama_factory python=3.10
conda activate llama_factory
cd LLaMA-Factory
pip install -r requirements.txt
</code></pre> 
<p>If you want to enable the quantized LoRA (QLoRA) on the Windows platform, you will be required to install a pre-built version of <code>bitsandbytes</code> library, which supports CUDA 11.1 to 12.2.</p> 
<pre><code class="language-bash">pip install https://github.com/jllllll/bitsandbytes-windows-webui/releases/download/wheels/bitsandbytes-0.40.0-py3-none-win_amd64.whl
</code></pre> 
<p>To enable FlashAttention-2 on the Windows platform, you need to install the precompiled <code>flash-attn</code> library, which supports CUDA 12.1 to 12.2. Please download the corresponding version from <a href="https://github.com/bdashore3/flash-attention/releases">flash-attention</a> based on your requirements.</p> 
<h3>Use ModelScope Hub (optional)</h3> 
<p>If you have trouble with downloading models and datasets from Hugging Face, you can use LLaMA-Factory together with ModelScope in the following manner.</p> 
<pre><code class="language-bash">export USE_MODELSCOPE_HUB=1 # `set USE_MODELSCOPE_HUB=1` for Windows
</code></pre> 
<p>Then you can train the corresponding model by specifying a model ID of the ModelScope Hub. (find a full list of model IDs at <a href="https://modelscope.cn/models">ModelScope Hub</a>)</p> 
<pre><code class="language-bash">CUDA_VISIBLE_DEVICES=0 python src/train_bash.py \
    --model_name_or_path modelscope/Llama-2-7b-ms \
    ... # arguments (same as below)
</code></pre> 
<p>LLaMA Board also supports using the models and datasets on the ModelScope Hub.</p> 
<pre><code class="language-bash">CUDA_VISIBLE_DEVICES=0 USE_MODELSCOPE_HUB=1 python src/train_web.py
</code></pre> 
<h3>Train on a single GPU</h3> 
<blockquote> 
 <p>[!IMPORTANT] If you want to train models on multiple GPUs, please refer to <a href="https://raw.githubusercontent.com/hiyouga/LLaMA-Factory/main/#distributed-training">Distributed Training</a>.</p> 
</blockquote> 
<h4>LLaMA Board GUI</h4> 
<pre><code class="language-bash">CUDA_VISIBLE_DEVICES=0 python src/train_web.py
</code></pre> 
<h4>Pre-Training</h4> 
<pre><code class="language-bash">CUDA_VISIBLE_DEVICES=0 python src/train_bash.py \
    --stage pt \
    --do_train \
    --model_name_or_path path_to_llama_model \
    --dataset wiki_demo \
    --finetuning_type lora \
    --lora_target q_proj,v_proj \
    --output_dir path_to_pt_checkpoint \
    --overwrite_cache \
    --per_device_train_batch_size 4 \
    --gradient_accumulation_steps 4 \
    --lr_scheduler_type cosine \
    --logging_steps 10 \
    --save_steps 1000 \
    --learning_rate 5e-5 \
    --num_train_epochs 3.0 \
    --plot_loss \
    --fp16
</code></pre> 
<h4>Supervised Fine-Tuning</h4> 
<pre><code class="language-bash">CUDA_VISIBLE_DEVICES=0 python src/train_bash.py \
    --stage sft \
    --do_train \
    --model_name_or_path path_to_llama_model \
    --dataset alpaca_gpt4_en \
    --template default \
    --finetuning_type lora \
    --lora_target q_proj,v_proj \
    --output_dir path_to_sft_checkpoint \
    --overwrite_cache \
    --per_device_train_batch_size 4 \
    --gradient_accumulation_steps 4 \
    --lr_scheduler_type cosine \
    --logging_steps 10 \
    --save_steps 1000 \
    --learning_rate 5e-5 \
    --num_train_epochs 3.0 \
    --plot_loss \
    --fp16
</code></pre> 
<h4>Reward Modeling</h4> 
<pre><code class="language-bash">CUDA_VISIBLE_DEVICES=0 python src/train_bash.py \
    --stage rm \
    --do_train \
    --model_name_or_path path_to_llama_model \
    --adapter_name_or_path path_to_sft_checkpoint \
    --create_new_adapter \
    --dataset comparison_gpt4_en \
    --template default \
    --finetuning_type lora \
    --lora_target q_proj,v_proj \
    --output_dir path_to_rm_checkpoint \
    --per_device_train_batch_size 2 \
    --gradient_accumulation_steps 4 \
    --lr_scheduler_type cosine \
    --logging_steps 10 \
    --save_steps 1000 \
    --learning_rate 1e-6 \
    --num_train_epochs 1.0 \
    --plot_loss \
    --fp16
</code></pre> 
<h4>PPO Training</h4> 
<pre><code class="language-bash">CUDA_VISIBLE_DEVICES=0 python src/train_bash.py \
    --stage ppo \
    --do_train \
    --model_name_or_path path_to_llama_model \
    --adapter_name_or_path path_to_sft_checkpoint \
    --create_new_adapter \
    --dataset alpaca_gpt4_en \
    --template default \
    --finetuning_type lora \
    --lora_target q_proj,v_proj \
    --reward_model path_to_rm_checkpoint \
    --output_dir path_to_ppo_checkpoint \
    --per_device_train_batch_size 2 \
    --gradient_accumulation_steps 4 \
    --lr_scheduler_type cosine \
    --top_k 0 \
    --top_p 0.9 \
    --logging_steps 10 \
    --save_steps 1000 \
    --learning_rate 1e-5 \
    --num_train_epochs 1.0 \
    --plot_loss \
    --fp16
</code></pre> 
<blockquote> 
 <p>[!TIP] Use <code>--adapter_name_or_path path_to_sft_checkpoint,path_to_ppo_checkpoint</code> to infer the fine-tuned model.</p> 
</blockquote> 
<blockquote> 
 <p>[!WARNING] Use <code>--per_device_train_batch_size=1</code> for LLaMA-2 models in fp16 PPO training.</p> 
</blockquote> 
<h4>DPO Training</h4> 
<pre><code class="language-bash">CUDA_VISIBLE_DEVICES=0 python src/train_bash.py \
    --stage dpo \
    --do_train \
    --model_name_or_path path_to_llama_model \
    --adapter_name_or_path path_to_sft_checkpoint \
    --create_new_adapter \
    --dataset comparison_gpt4_en \
    --template default \
    --finetuning_type lora \
    --lora_target q_proj,v_proj \
    --output_dir path_to_dpo_checkpoint \
    --per_device_train_batch_size 2 \
    --gradient_accumulation_steps 4 \
    --lr_scheduler_type cosine \
    --logging_steps 10 \
    --save_steps 1000 \
    --learning_rate 1e-5 \
    --num_train_epochs 1.0 \
    --plot_loss \
    --fp16
</code></pre> 
<blockquote> 
 <p>[!TIP] Use <code>--adapter_name_or_path path_to_sft_checkpoint,path_to_dpo_checkpoint</code> to infer the fine-tuned model.</p> 
</blockquote> 
<h3>Distributed Training</h3> 
<h4>Use Huggingface Accelerate</h4> 
<pre><code class="language-bash">accelerate launch --config_file config.yaml src/train_bash.py \
    --ddp_timeout 180000000 \
    ... # arguments (same as above)
</code></pre> 
<details>
 Example config.yaml for LoRA training 
 <pre><code class="language-yaml">compute_environment: LOCAL_MACHINE
debug: false
distributed_type: MULTI_GPU
downcast_bf16: 'no'
gpu_ids: all
machine_rank: 0
main_training_function: main
mixed_precision: fp16
num_machines: 1
num_processes: 4
rdzv_backend: static
same_network: true
tpu_env: []
tpu_use_cluster: false
tpu_use_sudo: false
use_cpu: false
</code></pre> 
</details> 
<blockquote> 
 <p>[!TIP] We commend using Accelerate for LoRA tuning.</p> 
</blockquote> 
<h4>Use DeepSpeed</h4> 
<pre><code class="language-bash">deepspeed --num_gpus 8 src/train_bash.py \
    --deepspeed ds_config.json \
    --ddp_timeout 180000000 \
    ... # arguments (same as above)
</code></pre> 
<details>
 Example ds_config.json for full-parameter training with DeepSpeed ZeRO-2 
 <pre><code class="language-json">{
  "train_batch_size": "auto",
  "train_micro_batch_size_per_gpu": "auto",
  "gradient_accumulation_steps": "auto",
  "gradient_clipping": "auto",
  "zero_allow_untested_optimizer": true,
  "fp16": {
    "enabled": "auto",
    "loss_scale": 0,
    "loss_scale_window": 1000,
    "initial_scale_power": 16,
    "hysteresis": 2,
    "min_loss_scale": 1
  },
  "bf16": {
    "enabled": "auto"
  },
  "zero_optimization": {
    "stage": 2,
    "allgather_partitions": true,
    "allgather_bucket_size": 5e8,
    "overlap_comm": true,
    "reduce_scatter": true,
    "reduce_bucket_size": 5e8,
    "contiguous_gradients": true,
    "round_robin_gradients": true
  }
}
</code></pre> 
</details> 
<blockquote> 
 <p>[!TIP] Refer to <a href="https://raw.githubusercontent.com/hiyouga/LLaMA-Factory/main/examples">examples</a> for more training scripts.</p> 
</blockquote> 
<h3>Merge LoRA weights and export model</h3> 
<pre><code class="language-bash">CUDA_VISIBLE_DEVICES=0 python src/export_model.py \
    --model_name_or_path path_to_llama_model \
    --adapter_name_or_path path_to_checkpoint \
    --template default \
    --finetuning_type lora \
    --export_dir path_to_export \
    --export_size 2 \
    --export_legacy_format False
</code></pre> 
<blockquote> 
 <p>[!WARNING] Merging LoRA weights into a quantized model is not supported.</p> 
</blockquote> 
<blockquote> 
 <p>[!TIP] Use <code>--model_name_or_path path_to_export</code> solely to use the exported model.</p> 
 <p>Use <code>--export_quantization_bit 4</code> and <code>--export_quantization_dataset data/c4_demo.json</code> to quantize the model with AutoGPTQ after merging the LoRA weights.</p> 
</blockquote> 
<h3>Inference with OpenAI-style API</h3> 
<pre><code class="language-bash">CUDA_VISIBLE_DEVICES=0 API_PORT=8000 python src/api_demo.py \
    --model_name_or_path path_to_llama_model \
    --adapter_name_or_path path_to_checkpoint \
    --template default \
    --finetuning_type lora
</code></pre> 
<blockquote> 
 <p>[!TIP] Visit <code>http://localhost:8000/docs</code> for API documentation.</p> 
</blockquote> 
<h3>Inference with command line</h3> 
<pre><code class="language-bash">CUDA_VISIBLE_DEVICES=0 python src/cli_demo.py \
    --model_name_or_path path_to_llama_model \
    --adapter_name_or_path path_to_checkpoint \
    --template default \
    --finetuning_type lora
</code></pre> 
<h3>Inference with web browser</h3> 
<pre><code class="language-bash">CUDA_VISIBLE_DEVICES=0 python src/web_demo.py \
    --model_name_or_path path_to_llama_model \
    --adapter_name_or_path path_to_checkpoint \
    --template default \
    --finetuning_type lora
</code></pre> 
<h3>Evaluation</h3> 
<pre><code class="language-bash">CUDA_VISIBLE_DEVICES=0 python src/evaluate.py \
    --model_name_or_path path_to_llama_model \
    --adapter_name_or_path path_to_checkpoint \
    --template vanilla \
    --finetuning_type lora \
    --task mmlu \
    --split test \
    --lang en \
    --n_shot 5 \
    --batch_size 4
</code></pre> 
<h3>Predict</h3> 
<pre><code class="language-bash">CUDA_VISIBLE_DEVICES=0 python src/train_bash.py \
    --stage sft \
    --do_predict \
    --model_name_or_path path_to_llama_model \
    --adapter_name_or_path path_to_checkpoint \
    --dataset alpaca_gpt4_en \
    --template default \
    --finetuning_type lora \
    --output_dir path_to_predict_result \
    --per_device_eval_batch_size 1 \
    --max_samples 100 \
    --predict_with_generate \
    --fp16
</code></pre> 
<blockquote> 
 <p>[!WARNING] Use <code>--per_device_train_batch_size=1</code> for LLaMA-2 models in fp16 predict.</p> 
</blockquote> 
<blockquote> 
 <p>[!TIP] We recommend using <code>--per_device_eval_batch_size=1</code> and <code>--max_target_length 128</code> at 4/8-bit predict.</p> 
</blockquote> 
<h3>Dockerize Training</h3> 
<h4>Get ready</h4> 
<p>Necessary dockerized environment is needed, such as Docker or Docker Compose.</p> 
<h4>Docker support</h4> 
<pre><code class="language-bash">docker build -f ./Dockerfile -t llama-factory:latest .

docker run --gpus=all -v ./hf_cache:/root/.cache/huggingface/ -v ./data:/app/data -v ./output:/app/output -p 7860:7860 --shm-size 16G --name llama_factory -d llama-factory:latest
</code></pre> 
<h4>Docker Compose support</h4> 
<pre><code class="language-bash">docker compose -f ./docker-compose.yml up -d
</code></pre> 
<blockquote> 
 <p>[!TIP] Details about volume:</p> 
 <ul> 
  <li>hf_cache: Utilize Huggingface cache on the host machine. Reassignable if a cache already exists in a different directory.</li> 
  <li>data: Place datasets on this dir of the host machine so that they can be selected on LLaMA Board GUI.</li> 
  <li>output: Set export dir to this location so that the merged result can be accessed directly on the host machine.</li> 
 </ul> 
</blockquote> 
<h2>Projects using LLaMA Factory</h2> 
<ol> 
 <li>Wang et al. ESRL: Efficient Sampling-based Reinforcement Learning for Sequence Generation. 2023. <a href="https://arxiv.org/abs/2308.02223">[arxiv]</a></li> 
 <li>Yu et al. Open, Closed, or Small Language Models for Text Classification? 2023. <a href="https://arxiv.org/abs/2308.10092">[arxiv]</a></li> 
 <li>Wang et al. UbiPhysio: Support Daily Functioning, Fitness, and Rehabilitation with Action Understanding and Feedback in Natural Language. 2023. <a href="https://arxiv.org/abs/2308.10526">[arxiv]</a></li> 
 <li>Luceri et al. Leveraging Large Language Models to Detect Influence Campaigns in Social Media. 2023. <a href="https://arxiv.org/abs/2311.07816">[arxiv]</a></li> 
 <li>Zhang et al. Alleviating Hallucinations of Large Language Models through Induced Hallucinations. 2023. <a href="https://arxiv.org/abs/2312.15710">[arxiv]</a></li> 
 <li>Wang et al. Know Your Needs Better: Towards Structured Understanding of Marketer Demands with Analogical Reasoning Augmented LLMs. 2024. <a href="https://arxiv.org/abs/2401.04319">[arxiv]</a></li> 
 <li>Wang et al. CANDLE: Iterative Conceptualization and Instantiation Distillation from Large Language Models for Commonsense Reasoning. 2024. <a href="https://arxiv.org/abs/2401.07286">[arxiv]</a></li> 
 <li>Choi et al. FACT-GPT: Fact-Checking Augmentation via Claim Matching with LLMs. 2024. <a href="https://arxiv.org/abs/2402.05904">[arxiv]</a></li> 
 <li>Zhang et al. AutoMathText: Autonomous Data Selection with Language Models for Mathematical Texts. 2024. <a href="https://arxiv.org/abs/2402.07625">[arxiv]</a></li> 
 <li>Lyu et al. KnowTuning: Knowledge-aware Fine-tuning for Large Language Models. 2024. <a href="https://arxiv.org/abs/2402.11176">[arxiv]</a></li> 
 <li>Yang et al. LaCo: Large Language Model Pruning via Layer Collaps. 2024. <a href="https://arxiv.org/abs/2402.11187">[arxiv]</a></li> 
 <li>Bhardwaj et al. Language Models are Homer Simpson! Safety Re-Alignment of Fine-tuned Language Models through Task Arithmetic. 2024. <a href="https://arxiv.org/abs/2402.11746">[arxiv]</a></li> 
 <li>Yang et al. Enhancing Empathetic Response Generation by Augmenting LLMs with Small-scale Empathetic Models. 2024. <a href="https://arxiv.org/abs/2402.11801">[arxiv]</a></li> 
 <li>Yi et al. Generation Meets Verification: Accelerating Large Language Model Inference with Smart Parallel Auto-Correct Decoding. 2024. <a href="https://arxiv.org/abs/2402.11809">[arxiv]</a></li> 
 <li>Cao et al. Head-wise Shareable Attention for Large Language Models. 2024. <a href="https://arxiv.org/abs/2402.11819">[arxiv]</a></li> 
 <li>Zhang et al. Enhancing Multilingual Capabilities of Large Language Models through Self-Distillation from Resource-Rich Languages. 2024. <a href="https://arxiv.org/abs/2402.12204">[arxiv]</a></li> 
 <li>Kim et al. Efficient and Effective Vocabulary Expansion Towards Multilingual Large Language Models. 2024. <a href="https://arxiv.org/abs/2402.14714">[arxiv]</a></li> 
 <li>Yu et al. KIEval: A Knowledge-grounded Interactive Evaluation Framework for Large Language Models. 2024. <a href="https://arxiv.org/abs/2402.15043">[arxiv]</a></li> 
 <li>Huang et al. Key-Point-Driven Data Synthesis with its Enhancement on Mathematical Reasoning. 2024. <a href="https://arxiv.org/abs/2403.02333">[arxiv]</a></li> 
 <li>Duan et al. Negating Negatives: Alignment without Human Positive Samples via Distributional Dispreference Optimization. 2024. <a href="https://arxiv.org/abs/2403.03419">[arxiv]</a></li> 
 <li>Xie and Schwertfeger. Empowering Robotics with Large Language Models: osmAG Map Comprehension with LLMs. 2024. <a href="https://arxiv.org/abs/2403.08228">[arxiv]</a></li> 
 <li><strong><a href="https://github.com/Yu-Yang-Li/StarWhisper">StarWhisper</a></strong>: A large language model for Astronomy, based on ChatGLM2-6B and Qwen-14B.</li> 
 <li><strong><a href="https://github.com/FudanDISC/DISC-LawLLM">DISC-LawLLM</a></strong>: A large language model specialized in Chinese legal domain, based on Baichuan-13B, is capable of retrieving and reasoning on legal knowledge.</li> 
 <li><strong><a href="https://github.com/thomas-yanxin/Sunsimiao">Sunsimiao</a></strong>: A large language model specialized in Chinese medical domain, based on Baichuan-7B and ChatGLM-6B.</li> 
 <li><strong><a href="https://github.com/WangRongsheng/CareGPT">CareGPT</a></strong>: A series of large language models for Chinese medical domain, based on LLaMA2-7B and Baichuan-13B.</li> 
 <li><strong><a href="https://github.com/PKU-YuanGroup/Machine-Mindset/">MachineMindset</a></strong>: A series of MBTI Personality large language models, capable of giving any LLM 16 different personality types based on different datasets and training methods.</li> 
</ol> 
<blockquote> 
 <p>[!TIP] If you have a project that should be incorporated, please contact via email or create a pull request.</p> 
</blockquote> 
<h2>License</h2> 
<p>This repository is licensed under the <a href="https://raw.githubusercontent.com/hiyouga/LLaMA-Factory/main/LICENSE">Apache-2.0 License</a>.</p> 
<p>Please follow the model licenses to use the corresponding model weights: <a href="https://huggingface.co/baichuan-inc/Baichuan2-7B-Base/blob/main/Community%20License%20for%20Baichuan%202%20Model.pdf">Baichuan2</a> / <a href="https://huggingface.co/spaces/bigscience/license">BLOOM</a> / <a href="https://github.com/THUDM/ChatGLM3/raw/main/MODEL_LICENSE">ChatGLM3</a> / <a href="https://github.com/deepseek-ai/DeepSeek-LLM/raw/main/LICENSE-MODEL">DeepSeek</a> / <a href="https://huggingface.co/tiiuae/falcon-180B/blob/main/LICENSE.txt">Falcon</a> / <a href="https://ai.google.dev/gemma/terms">Gemma</a> / <a href="https://github.com/InternLM/InternLM#license">InternLM2</a> / <a href="https://github.com/facebookresearch/llama/raw/main/MODEL_CARD.md">LLaMA</a> / <a href="https://ai.meta.com/llama/license/">LLaMA-2</a> / <a href="https://raw.githubusercontent.com/hiyouga/LLaMA-Factory/main/LICENSE">Mistral</a> / <a href="https://raw.githubusercontent.com/hiyouga/LLaMA-Factory/main/LICENSE">OLMo</a> / <a href="https://huggingface.co/microsoft/phi-1_5/resolve/main/Research%20License.docx">Phi-1.5/2</a> / <a href="https://github.com/QwenLM/Qwen/raw/main/Tongyi%20Qianwen%20LICENSE%20AGREEMENT">Qwen</a> / <a href="https://huggingface.co/spaces/bigcode/bigcode-model-license-agreement">StarCoder2</a> / <a href="https://github.com/xverse-ai/XVERSE-13B/raw/main/MODEL_LICENSE.pdf">XVERSE</a> / <a href="https://huggingface.co/01-ai/Yi-6B/blob/main/LICENSE">Yi</a> / <a href="https://github.com/IEIT-Yuan/Yuan-2.0/raw/main/LICENSE-Yuan">Yuan</a></p> 
<h2>Citation</h2> 
<p>If this work is helpful, please kindly cite as:</p> 
<pre><code class="language-bibtex">@article{zheng2024llamafactory,
  title={LlamaFactory: Unified Efficient Fine-Tuning of 100+ Language Models}, 
  author={Yaowei Zheng and Richong Zhang and Junhao Zhang and Yanhan Ye and Zheyan Luo and Yongqiang Ma},
  journal={arXiv preprint arXiv:2403.13372},
  year={2024},
  url={http://arxiv.org/abs/2403.13372}
}
</code></pre> 
<h2>Acknowledgement</h2> 
<p>This repo benefits from <a href="https://github.com/huggingface/peft">PEFT</a>, <a href="https://github.com/artidoro/qlora">QLoRA</a> and <a href="https://github.com/lm-sys/FastChat">FastChat</a>. Thanks for their wonderful works.</p> 
<h2>Star History</h2> 
<p><img alt="Star History Chart" src="https://api.star-history.com/svg?repos=hiyouga/LLaMA-Factory&amp;type=Date" /></p></description>
</item>
</channel>
</rss>
